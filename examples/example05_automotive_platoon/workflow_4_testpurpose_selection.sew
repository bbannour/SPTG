@sew< workflow , 1.0 >:

// Symbolic Execution Workflow
// Diversity Tool Configuration
// CEA - LIST
workflow {
	workspace [
		root   = "."
		launch = "."
		output = "output_testpurpose_selection"
	] // end workspace
	director behavior#selection 'as main execution objective' {
		manifest [
			autoconf  = true
			autostart = true
		] // end manifest
		project 'path of input model' [
			source = "."
			model  = "example05_automotive_platoon.xlia"
		] // end project
		supervisor {
			queue 'defining the exploration/search strategy' [
				strategy = 'WEIGHT#BREADTH_FIRST_SEARCH'
				heuristic = true
			] // end queue
			redundancy 'detection strategy' [
				loop#detection#trivial = true
			] // end redundancy
		}
		worker [
			coverage#behavior behavior_coverage {
				property [
					stop  = true
					slice = true
					heuristic = true
					scope = 'GLOBALLY'
					scheduler = '|;|'
				] // end property
				trace [
					//Sequence of elements characterizing the desired behavior.
					transition = 'q0.tr_join_r'
					transition = 'q4.tr_joined_suc'
					transition = 'q7.tr_platoon_m_c'
				] // end trace
				heuristic [
					hit#consecutive = false
					hit#folding = true
					hit#lucky   = false
					hit#max     = false
					hit#final   = true
					jump#slice  = false
					jump#height = 3
					jump#trials#limit = 42
					hit#count  = 1
					jump#count = 1
				] // end heuristic
			}
			serializer#symbex#trace#basic basic_trace_generator {
				property [
					solver = 'Z3'
					format = 'BASIC'
					info#selection = 'ALL'
					data#selection = 'MODIFIED'
					numerizer = 'SOLVER'
					normalize = true
					print#initial#values = false
					print#lifelines = false
				] // end property
				trace [ // filtered elements
					transition = '[*]'
				] // end trace
				format [
					testcase#header = '// Sequence of transitions as testpurpose\n'
					transition = '\ttransition = "%2%.%3%"\n'
				] // end format
				vfs [
					folder = "."
					file   = "testpurpose.txt"
				] // end vfs
			}
			serializer#model#graphic model2graphic {
				statemachine [
					transition = true
				] // end statemachine
				transition [
					statement = true
				] // end transition
				vfs [
					file = "example05_automotive_platoon.puml"
				] // end vfs
			}
		] // end worker
	}
	symbex 'option' [
		name_id_separator = ""
		newfresh_param_name_pid = false
		pretty_printer_var_name = true
		delta_name_id = "#"
		check_pathcondition_satisfiability = true
		constraint_solver = "Z3"
	] // end symbex
	console [
		verbose = 'MINIMUM'
	] // end console
	shell [
		// Stop stop the current execution if it detects the creation of the above file !
		stop = "symbex.stop"
	] // end shell
}


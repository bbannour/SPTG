@xlia< system , 1.0 >:

timed system Example06_Washing_Machine_S {

@composite:
	lifeline statemachine  Example06_Washing_Machine_SM {

	@public:
		port input 	WashProg( urational progDuration );
		port output Abort;
		port output StartCycle( urational totaTime);
		port output EndCycle;

  	@private:
		var time uinteger 	pdur;
 		var clock urational cl;

	@region:
		state< start > Standby {
			transition tr1 --> Launch {
				input WashProg( pdur );
				cl = 0;
			}
		}
	    state Launch {
			transition tr2 --> Wash {
				guard( (30 <= pdur <= 120 ) && ( cl <= 1) );
				output StartCycle( pdur+12 );
				cl := 0;
			}
			transition tr4 --> Standby {
				guard( ((pdur < 30) || (pdur > 120)) && (cl <= 1) );
				output Abort;
			}
		}
		state Wash {
			transition tr3 --> Standby {
				guard( cl == pdur + 12 );
				output EndCycle;
			}
		}
	 @com:
		connect< env >{
			input  WashProg;
			output Abort;
			output StartCycle;
			output EndCycle;
		}
	}
}
//Sequence of transitions characterizing a test purpose.
//	transition = "tr1"
//	transition = "tr2"
//	transition = "tr3"
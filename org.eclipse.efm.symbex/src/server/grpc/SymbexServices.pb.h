// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SymbexServices.proto
// Protobuf C++ Version: 4.25.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_SymbexServices_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_SymbexServices_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025002 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_SymbexServices_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_SymbexServices_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_SymbexServices_2eproto;
namespace sep {
namespace grpc {
class ECQuery;
struct ECQueryDefaultTypeInternal;
extern ECQueryDefaultTypeInternal _ECQuery_default_instance_;
class ECReply;
struct ECReplyDefaultTypeInternal;
extern ECReplyDefaultTypeInternal _ECReply_default_instance_;
class Expression;
struct ExpressionDefaultTypeInternal;
extern ExpressionDefaultTypeInternal _Expression_default_instance_;
class GRPCExecutionContext;
struct GRPCExecutionContextDefaultTypeInternal;
extern GRPCExecutionContextDefaultTypeInternal _GRPCExecutionContext_default_instance_;
class InitializationReply;
struct InitializationReplyDefaultTypeInternal;
extern InitializationReplyDefaultTypeInternal _InitializationReply_default_instance_;
class InitializationRequest;
struct InitializationRequestDefaultTypeInternal;
extern InitializationRequestDefaultTypeInternal _InitializationRequest_default_instance_;
class ModelDefinitionRequest;
struct ModelDefinitionRequestDefaultTypeInternal;
extern ModelDefinitionRequestDefaultTypeInternal _ModelDefinitionRequest_default_instance_;
class ModelEvalReply;
struct ModelEvalReplyDefaultTypeInternal;
extern ModelEvalReplyDefaultTypeInternal _ModelEvalReply_default_instance_;
class ModelParseReply;
struct ModelParseReplyDefaultTypeInternal;
extern ModelParseReplyDefaultTypeInternal _ModelParseReply_default_instance_;
class Operation;
struct OperationDefaultTypeInternal;
extern OperationDefaultTypeInternal _Operation_default_instance_;
class PostProcessingReply;
struct PostProcessingReplyDefaultTypeInternal;
extern PostProcessingReplyDefaultTypeInternal _PostProcessingReply_default_instance_;
class PostProcessingRequest;
struct PostProcessingRequestDefaultTypeInternal;
extern PostProcessingRequestDefaultTypeInternal _PostProcessingRequest_default_instance_;
class QueryValueForVariableReply;
struct QueryValueForVariableReplyDefaultTypeInternal;
extern QueryValueForVariableReplyDefaultTypeInternal _QueryValueForVariableReply_default_instance_;
class QueryValueForVariableRequest;
struct QueryValueForVariableRequestDefaultTypeInternal;
extern QueryValueForVariableRequestDefaultTypeInternal _QueryValueForVariableRequest_default_instance_;
class RuntimeStatusTree;
struct RuntimeStatusTreeDefaultTypeInternal;
extern RuntimeStatusTreeDefaultTypeInternal _RuntimeStatusTree_default_instance_;
class RuntimesStatusReply;
struct RuntimesStatusReplyDefaultTypeInternal;
extern RuntimesStatusReplyDefaultTypeInternal _RuntimesStatusReply_default_instance_;
class SingleRuntimeStatus;
struct SingleRuntimeStatusDefaultTypeInternal;
extern SingleRuntimeStatusDefaultTypeInternal _SingleRuntimeStatus_default_instance_;
class SymbexEvalContextReply;
struct SymbexEvalContextReplyDefaultTypeInternal;
extern SymbexEvalContextReplyDefaultTypeInternal _SymbexEvalContextReply_default_instance_;
class SymbexEvalContextRequest;
struct SymbexEvalContextRequestDefaultTypeInternal;
extern SymbexEvalContextRequestDefaultTypeInternal _SymbexEvalContextRequest_default_instance_;
class SymbexEvalInitReply;
struct SymbexEvalInitReplyDefaultTypeInternal;
extern SymbexEvalInitReplyDefaultTypeInternal _SymbexEvalInitReply_default_instance_;
class SymbexEvalInitRequest;
struct SymbexEvalInitRequestDefaultTypeInternal;
extern SymbexEvalInitRequestDefaultTypeInternal _SymbexEvalInitRequest_default_instance_;
class SymbexEvalRunnableBasicReply;
struct SymbexEvalRunnableBasicReplyDefaultTypeInternal;
extern SymbexEvalRunnableBasicReplyDefaultTypeInternal _SymbexEvalRunnableBasicReply_default_instance_;
class SymbexEvalRunnableReply;
struct SymbexEvalRunnableReplyDefaultTypeInternal;
extern SymbexEvalRunnableReplyDefaultTypeInternal _SymbexEvalRunnableReply_default_instance_;
class SymbexEvalRunnableRequest;
struct SymbexEvalRunnableRequestDefaultTypeInternal;
extern SymbexEvalRunnableRequestDefaultTypeInternal _SymbexEvalRunnableRequest_default_instance_;
class SymbexEvalStepReply;
struct SymbexEvalStepReplyDefaultTypeInternal;
extern SymbexEvalStepReplyDefaultTypeInternal _SymbexEvalStepReply_default_instance_;
class SymbexEvalStepRequest;
struct SymbexEvalStepRequestDefaultTypeInternal;
extern SymbexEvalStepRequestDefaultTypeInternal _SymbexEvalStepRequest_default_instance_;
class Symbol;
struct SymbolDefaultTypeInternal;
extern SymbolDefaultTypeInternal _Symbol_default_instance_;
class TypedSymbol;
struct TypedSymbolDefaultTypeInternal;
extern TypedSymbolDefaultTypeInternal _TypedSymbol_default_instance_;
class VariableValuePair;
struct VariableValuePairDefaultTypeInternal;
extern VariableValuePairDefaultTypeInternal _VariableValuePair_default_instance_;
}  // namespace grpc
}  // namespace sep
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace sep {
namespace grpc {
enum SymbolKind : int {
  UNKNOWN_SYMBOL = 0,
  VARIABLE = 1,
  PARAMETER = 2,
  PORT = 3,
  SIGNAL = 4,
  MESSAGE = 5,
  BUFFER = 6,
  CHANNEL = 7,
  CONNECTOR = 8,
  SYSTEM = 9,
  MACHINE = 10,
  STATEMACHINE = 11,
  STATE = 12,
  TRANSITION = 13,
  RUNTIME_ID = 14,
  FUNCTION = 15,
  PROGRAM = 16,
  OPERATOR = 17,
  ARRAY = 18,
  LIST = 19,
  COLLECTION = 20,
  SymbolKind_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SymbolKind_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SymbolKind_IsValid(int value);
extern const uint32_t SymbolKind_internal_data_[];
constexpr SymbolKind SymbolKind_MIN = static_cast<SymbolKind>(0);
constexpr SymbolKind SymbolKind_MAX = static_cast<SymbolKind>(20);
constexpr int SymbolKind_ARRAYSIZE = 20 + 1;
const ::google::protobuf::EnumDescriptor*
SymbolKind_descriptor();
template <typename T>
const std::string& SymbolKind_Name(T value) {
  static_assert(std::is_same<T, SymbolKind>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to SymbolKind_Name().");
  return SymbolKind_Name(static_cast<SymbolKind>(value));
}
template <>
inline const std::string& SymbolKind_Name(SymbolKind value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SymbolKind_descriptor,
                                                 0, 20>(
      static_cast<int>(value));
}
inline bool SymbolKind_Parse(absl::string_view name, SymbolKind* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SymbolKind>(
      SymbolKind_descriptor(), name, value);
}
enum OperatorKind : int {
  UNKNOWN_OP = 0,
  NOP = 1,
  ADD = 2,
  MINUS = 3,
  UMINUS = 4,
  MULT = 5,
  DIV = 6,
  OR = 7,
  AND = 8,
  NOT = 9,
  XOR = 10,
  IMPLIES = 11,
  BOR = 12,
  BAND = 13,
  BNOT = 14,
  BXOR = 15,
  LSHIFT = 16,
  RSHIFT = 17,
  EQ = 18,
  NEQ = 19,
  SEQ = 20,
  NSEQ = 21,
  GT = 22,
  GTE = 23,
  LT = 24,
  LTE = 25,
  ASSIGN = 26,
  NEWFRESH = 27,
  INPUT = 28,
  INPUT_ENV = 29,
  INPUT_RDV = 30,
  OUTPUT = 31,
  OUTPUT_ENV = 32,
  OUTPUT_RDV = 33,
  ABORT = 34,
  DISABLE = 35,
  ENABLE = 36,
  INIT = 37,
  FINAL = 38,
  DESTROY = 39,
  START = 40,
  STOP = 41,
  RUN = 42,
  RTC = 43,
  SCHEDULE = 44,
  DEFER = 45,
  INVOKE_TRANSITION = 46,
  INVOKE_ROUTINE = 47,
  SEQUENCE = 48,
  PARALLEL = 49,
  INTERLEAVING = 50,
  SYNCHRONOUS = 51,
  PRIOR_GT = 52,
  OperatorKind_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  OperatorKind_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool OperatorKind_IsValid(int value);
extern const uint32_t OperatorKind_internal_data_[];
constexpr OperatorKind OperatorKind_MIN = static_cast<OperatorKind>(0);
constexpr OperatorKind OperatorKind_MAX = static_cast<OperatorKind>(52);
constexpr int OperatorKind_ARRAYSIZE = 52 + 1;
const ::google::protobuf::EnumDescriptor*
OperatorKind_descriptor();
template <typename T>
const std::string& OperatorKind_Name(T value) {
  static_assert(std::is_same<T, OperatorKind>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to OperatorKind_Name().");
  return OperatorKind_Name(static_cast<OperatorKind>(value));
}
template <>
inline const std::string& OperatorKind_Name(OperatorKind value) {
  return ::google::protobuf::internal::NameOfDenseEnum<OperatorKind_descriptor,
                                                 0, 52>(
      static_cast<int>(value));
}
inline bool OperatorKind_Parse(absl::string_view name, OperatorKind* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OperatorKind>(
      OperatorKind_descriptor(), name, value);
}
enum DataType : int {
  ANY = 0,
  BOOLEAN = 1,
  INTEGER = 2,
  RATIONAL = 3,
  FLOAT = 4,
  STRING = 5,
  UNKNOWN = 6,
  DataType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  DataType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool DataType_IsValid(int value);
extern const uint32_t DataType_internal_data_[];
constexpr DataType DataType_MIN = static_cast<DataType>(0);
constexpr DataType DataType_MAX = static_cast<DataType>(6);
constexpr int DataType_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor*
DataType_descriptor();
template <typename T>
const std::string& DataType_Name(T value) {
  static_assert(std::is_same<T, DataType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to DataType_Name().");
  return DataType_Name(static_cast<DataType>(value));
}
template <>
inline const std::string& DataType_Name(DataType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<DataType_descriptor,
                                                 0, 6>(
      static_cast<int>(value));
}
inline bool DataType_Parse(absl::string_view name, DataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataType>(
      DataType_descriptor(), name, value);
}
enum PROCESS_STATE : int {
  PROCESS_CREATING_STATE = 0,
  PROCESS_CREATED_STATE = 1,
  PROCESS_LOADED_STATE = 2,
  PROCESS_STARTING_STATE = 3,
  PROCESS_INITING_STATE = 4,
  PROCESS_FINALIZING_STATE = 5,
  PROCESS_FINALIZED_STATE = 6,
  PROCESS_DESTROYED_STATE = 7,
  PROCESS_STOPPING_STATE = 8,
  PROCESS_STOPPED_STATE = 9,
  PROCESS_SUSPENDED_STATE = 10,
  PROCESS_WAITING_STATE = 11,
  PROCESS_WAITING_JOIN_STATE = 12,
  PROCESS_ABORTED_STATE = 13,
  PROCESS_DISABLED_STATE = 14,
  PROCESS_IDLE_STATE = 15,
  PROCESS_RUNNING_STATE = 16,
  PROCESS_RTC_STATE = 17,
  PROCESS_UNDEFINED_STATE = 18,
  PROCESS_STATE_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PROCESS_STATE_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PROCESS_STATE_IsValid(int value);
extern const uint32_t PROCESS_STATE_internal_data_[];
constexpr PROCESS_STATE PROCESS_STATE_MIN = static_cast<PROCESS_STATE>(0);
constexpr PROCESS_STATE PROCESS_STATE_MAX = static_cast<PROCESS_STATE>(18);
constexpr int PROCESS_STATE_ARRAYSIZE = 18 + 1;
const ::google::protobuf::EnumDescriptor*
PROCESS_STATE_descriptor();
template <typename T>
const std::string& PROCESS_STATE_Name(T value) {
  static_assert(std::is_same<T, PROCESS_STATE>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PROCESS_STATE_Name().");
  return PROCESS_STATE_Name(static_cast<PROCESS_STATE>(value));
}
template <>
inline const std::string& PROCESS_STATE_Name(PROCESS_STATE value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PROCESS_STATE_descriptor,
                                                 0, 18>(
      static_cast<int>(value));
}
inline bool PROCESS_STATE_Parse(absl::string_view name, PROCESS_STATE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PROCESS_STATE>(
      PROCESS_STATE_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class TypedSymbol final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.TypedSymbol) */ {
 public:
  inline TypedSymbol() : TypedSymbol(nullptr) {}
  ~TypedSymbol() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TypedSymbol(::google::protobuf::internal::ConstantInitialized);

  inline TypedSymbol(const TypedSymbol& from)
      : TypedSymbol(nullptr, from) {}
  TypedSymbol(TypedSymbol&& from) noexcept
    : TypedSymbol() {
    *this = ::std::move(from);
  }

  inline TypedSymbol& operator=(const TypedSymbol& from) {
    CopyFrom(from);
    return *this;
  }
  inline TypedSymbol& operator=(TypedSymbol&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TypedSymbol& default_instance() {
    return *internal_default_instance();
  }
  static inline const TypedSymbol* internal_default_instance() {
    return reinterpret_cast<const TypedSymbol*>(
               &_TypedSymbol_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(TypedSymbol& a, TypedSymbol& b) {
    a.Swap(&b);
  }
  inline void Swap(TypedSymbol* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TypedSymbol* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TypedSymbol* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TypedSymbol>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TypedSymbol& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TypedSymbol& from) {
    TypedSymbol::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TypedSymbol* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.TypedSymbol";
  }
  protected:
  explicit TypedSymbol(::google::protobuf::Arena* arena);
  TypedSymbol(::google::protobuf::Arena* arena, const TypedSymbol& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSymbolIdFieldNumber = 1,
    kTypeFieldNumber = 2,
  };
  // string symbol_id = 1;
  void clear_symbol_id() ;
  const std::string& symbol_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_symbol_id(Arg_&& arg, Args_... args);
  std::string* mutable_symbol_id();
  PROTOBUF_NODISCARD std::string* release_symbol_id();
  void set_allocated_symbol_id(std::string* value);

  private:
  const std::string& _internal_symbol_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_symbol_id(
      const std::string& value);
  std::string* _internal_mutable_symbol_id();

  public:
  // .sep.grpc.DataType type = 2;
  void clear_type() ;
  ::sep::grpc::DataType type() const;
  void set_type(::sep::grpc::DataType value);

  private:
  ::sep::grpc::DataType _internal_type() const;
  void _internal_set_type(::sep::grpc::DataType value);

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.TypedSymbol)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      38, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr symbol_id_;
    int type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class Symbol final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.Symbol) */ {
 public:
  inline Symbol() : Symbol(nullptr) {}
  ~Symbol() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Symbol(::google::protobuf::internal::ConstantInitialized);

  inline Symbol(const Symbol& from)
      : Symbol(nullptr, from) {}
  Symbol(Symbol&& from) noexcept
    : Symbol() {
    *this = ::std::move(from);
  }

  inline Symbol& operator=(const Symbol& from) {
    CopyFrom(from);
    return *this;
  }
  inline Symbol& operator=(Symbol&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Symbol& default_instance() {
    return *internal_default_instance();
  }
  static inline const Symbol* internal_default_instance() {
    return reinterpret_cast<const Symbol*>(
               &_Symbol_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Symbol& a, Symbol& b) {
    a.Swap(&b);
  }
  inline void Swap(Symbol* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Symbol* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Symbol* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Symbol>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Symbol& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Symbol& from) {
    Symbol::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Symbol* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.Symbol";
  }
  protected:
  explicit Symbol(::google::protobuf::Arena* arena);
  Symbol(::google::protobuf::Arena* arena, const Symbol& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 2,
    kKindFieldNumber = 1,
  };
  // string id = 2;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // .sep.grpc.SymbolKind kind = 1;
  void clear_kind() ;
  ::sep::grpc::SymbolKind kind() const;
  void set_kind(::sep::grpc::SymbolKind value);

  private:
  ::sep::grpc::SymbolKind _internal_kind() const;
  void _internal_set_kind(::sep::grpc::SymbolKind value);

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.Symbol)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      26, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr id_;
    int kind_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class SymbexEvalStepReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.SymbexEvalStepReply) */ {
 public:
  inline SymbexEvalStepReply() : SymbexEvalStepReply(nullptr) {}
  ~SymbexEvalStepReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SymbexEvalStepReply(::google::protobuf::internal::ConstantInitialized);

  inline SymbexEvalStepReply(const SymbexEvalStepReply& from)
      : SymbexEvalStepReply(nullptr, from) {}
  SymbexEvalStepReply(SymbexEvalStepReply&& from) noexcept
    : SymbexEvalStepReply() {
    *this = ::std::move(from);
  }

  inline SymbexEvalStepReply& operator=(const SymbexEvalStepReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline SymbexEvalStepReply& operator=(SymbexEvalStepReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SymbexEvalStepReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const SymbexEvalStepReply* internal_default_instance() {
    return reinterpret_cast<const SymbexEvalStepReply*>(
               &_SymbexEvalStepReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(SymbexEvalStepReply& a, SymbexEvalStepReply& b) {
    a.Swap(&b);
  }
  inline void Swap(SymbexEvalStepReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SymbexEvalStepReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SymbexEvalStepReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SymbexEvalStepReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SymbexEvalStepReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SymbexEvalStepReply& from) {
    SymbexEvalStepReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SymbexEvalStepReply* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.SymbexEvalStepReply";
  }
  protected:
  explicit SymbexEvalStepReply(::google::protobuf::Arena* arena);
  SymbexEvalStepReply(::google::protobuf::Arena* arena, const SymbexEvalStepReply& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNotYetEvalExecutionContextIdFieldNumber = 3,
    kStepCountFieldNumber = 1,
    kEvalCountFieldNumber = 2,
  };
  // repeated uint32 not_yet_eval_execution_context_id = 3;
  int not_yet_eval_execution_context_id_size() const;
  private:
  int _internal_not_yet_eval_execution_context_id_size() const;

  public:
  void clear_not_yet_eval_execution_context_id() ;
  ::uint32_t not_yet_eval_execution_context_id(int index) const;
  void set_not_yet_eval_execution_context_id(int index, ::uint32_t value);
  void add_not_yet_eval_execution_context_id(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& not_yet_eval_execution_context_id() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_not_yet_eval_execution_context_id();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_not_yet_eval_execution_context_id() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_not_yet_eval_execution_context_id();

  public:
  // uint32 step_count = 1;
  void clear_step_count() ;
  ::uint32_t step_count() const;
  void set_step_count(::uint32_t value);

  private:
  ::uint32_t _internal_step_count() const;
  void _internal_set_step_count(::uint32_t value);

  public:
  // uint32 eval_count = 2;
  void clear_eval_count() ;
  ::uint32_t eval_count() const;
  void set_eval_count(::uint32_t value);

  private:
  ::uint32_t _internal_eval_count() const;
  void _internal_set_eval_count(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.SymbexEvalStepReply)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::uint32_t> not_yet_eval_execution_context_id_;
    mutable ::google::protobuf::internal::CachedSize _not_yet_eval_execution_context_id_cached_byte_size_;
    ::uint32_t step_count_;
    ::uint32_t eval_count_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class SymbexEvalRunnableReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.SymbexEvalRunnableReply) */ {
 public:
  inline SymbexEvalRunnableReply() : SymbexEvalRunnableReply(nullptr) {}
  ~SymbexEvalRunnableReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SymbexEvalRunnableReply(::google::protobuf::internal::ConstantInitialized);

  inline SymbexEvalRunnableReply(const SymbexEvalRunnableReply& from)
      : SymbexEvalRunnableReply(nullptr, from) {}
  SymbexEvalRunnableReply(SymbexEvalRunnableReply&& from) noexcept
    : SymbexEvalRunnableReply() {
    *this = ::std::move(from);
  }

  inline SymbexEvalRunnableReply& operator=(const SymbexEvalRunnableReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline SymbexEvalRunnableReply& operator=(SymbexEvalRunnableReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SymbexEvalRunnableReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const SymbexEvalRunnableReply* internal_default_instance() {
    return reinterpret_cast<const SymbexEvalRunnableReply*>(
               &_SymbexEvalRunnableReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(SymbexEvalRunnableReply& a, SymbexEvalRunnableReply& b) {
    a.Swap(&b);
  }
  inline void Swap(SymbexEvalRunnableReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SymbexEvalRunnableReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SymbexEvalRunnableReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SymbexEvalRunnableReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SymbexEvalRunnableReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SymbexEvalRunnableReply& from) {
    SymbexEvalRunnableReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SymbexEvalRunnableReply* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.SymbexEvalRunnableReply";
  }
  protected:
  explicit SymbexEvalRunnableReply(::google::protobuf::Arena* arena);
  SymbexEvalRunnableReply(::google::protobuf::Arena* arena, const SymbexEvalRunnableReply& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExecutionContextIdFieldNumber = 1,
    kNotYetEvalExecutionContextIdFieldNumber = 2,
  };
  // repeated uint32 execution_context_id = 1;
  int execution_context_id_size() const;
  private:
  int _internal_execution_context_id_size() const;

  public:
  void clear_execution_context_id() ;
  ::uint32_t execution_context_id(int index) const;
  void set_execution_context_id(int index, ::uint32_t value);
  void add_execution_context_id(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& execution_context_id() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_execution_context_id();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_execution_context_id() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_execution_context_id();

  public:
  // repeated uint32 not_yet_eval_execution_context_id = 2;
  int not_yet_eval_execution_context_id_size() const;
  private:
  int _internal_not_yet_eval_execution_context_id_size() const;

  public:
  void clear_not_yet_eval_execution_context_id() ;
  ::uint32_t not_yet_eval_execution_context_id(int index) const;
  void set_not_yet_eval_execution_context_id(int index, ::uint32_t value);
  void add_not_yet_eval_execution_context_id(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& not_yet_eval_execution_context_id() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_not_yet_eval_execution_context_id();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_not_yet_eval_execution_context_id() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_not_yet_eval_execution_context_id();

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.SymbexEvalRunnableReply)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::uint32_t> execution_context_id_;
    mutable ::google::protobuf::internal::CachedSize _execution_context_id_cached_byte_size_;
    ::google::protobuf::RepeatedField<::uint32_t> not_yet_eval_execution_context_id_;
    mutable ::google::protobuf::internal::CachedSize _not_yet_eval_execution_context_id_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class SymbexEvalContextReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.SymbexEvalContextReply) */ {
 public:
  inline SymbexEvalContextReply() : SymbexEvalContextReply(nullptr) {}
  ~SymbexEvalContextReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SymbexEvalContextReply(::google::protobuf::internal::ConstantInitialized);

  inline SymbexEvalContextReply(const SymbexEvalContextReply& from)
      : SymbexEvalContextReply(nullptr, from) {}
  SymbexEvalContextReply(SymbexEvalContextReply&& from) noexcept
    : SymbexEvalContextReply() {
    *this = ::std::move(from);
  }

  inline SymbexEvalContextReply& operator=(const SymbexEvalContextReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline SymbexEvalContextReply& operator=(SymbexEvalContextReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SymbexEvalContextReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const SymbexEvalContextReply* internal_default_instance() {
    return reinterpret_cast<const SymbexEvalContextReply*>(
               &_SymbexEvalContextReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(SymbexEvalContextReply& a, SymbexEvalContextReply& b) {
    a.Swap(&b);
  }
  inline void Swap(SymbexEvalContextReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SymbexEvalContextReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SymbexEvalContextReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SymbexEvalContextReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SymbexEvalContextReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SymbexEvalContextReply& from) {
    SymbexEvalContextReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SymbexEvalContextReply* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.SymbexEvalContextReply";
  }
  protected:
  explicit SymbexEvalContextReply(::google::protobuf::Arena* arena);
  SymbexEvalContextReply(::google::protobuf::Arena* arena, const SymbexEvalContextReply& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChildExecutionContextIdFieldNumber = 4,
    kExecutionContextIdFieldNumber = 1,
    kStepCountFieldNumber = 2,
    kEvalCountFieldNumber = 3,
  };
  // repeated uint32 child_execution_context_id = 4;
  int child_execution_context_id_size() const;
  private:
  int _internal_child_execution_context_id_size() const;

  public:
  void clear_child_execution_context_id() ;
  ::uint32_t child_execution_context_id(int index) const;
  void set_child_execution_context_id(int index, ::uint32_t value);
  void add_child_execution_context_id(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& child_execution_context_id() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_child_execution_context_id();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_child_execution_context_id() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_child_execution_context_id();

  public:
  // uint32 execution_context_id = 1;
  void clear_execution_context_id() ;
  ::uint32_t execution_context_id() const;
  void set_execution_context_id(::uint32_t value);

  private:
  ::uint32_t _internal_execution_context_id() const;
  void _internal_set_execution_context_id(::uint32_t value);

  public:
  // uint32 step_count = 2;
  void clear_step_count() ;
  ::uint32_t step_count() const;
  void set_step_count(::uint32_t value);

  private:
  ::uint32_t _internal_step_count() const;
  void _internal_set_step_count(::uint32_t value);

  public:
  // uint32 eval_count = 3;
  void clear_eval_count() ;
  ::uint32_t eval_count() const;
  void set_eval_count(::uint32_t value);

  private:
  ::uint32_t _internal_eval_count() const;
  void _internal_set_eval_count(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.SymbexEvalContextReply)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::uint32_t> child_execution_context_id_;
    mutable ::google::protobuf::internal::CachedSize _child_execution_context_id_cached_byte_size_;
    ::uint32_t execution_context_id_;
    ::uint32_t step_count_;
    ::uint32_t eval_count_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class SingleRuntimeStatus final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.SingleRuntimeStatus) */ {
 public:
  inline SingleRuntimeStatus() : SingleRuntimeStatus(nullptr) {}
  ~SingleRuntimeStatus() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SingleRuntimeStatus(::google::protobuf::internal::ConstantInitialized);

  inline SingleRuntimeStatus(const SingleRuntimeStatus& from)
      : SingleRuntimeStatus(nullptr, from) {}
  SingleRuntimeStatus(SingleRuntimeStatus&& from) noexcept
    : SingleRuntimeStatus() {
    *this = ::std::move(from);
  }

  inline SingleRuntimeStatus& operator=(const SingleRuntimeStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline SingleRuntimeStatus& operator=(SingleRuntimeStatus&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SingleRuntimeStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const SingleRuntimeStatus* internal_default_instance() {
    return reinterpret_cast<const SingleRuntimeStatus*>(
               &_SingleRuntimeStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(SingleRuntimeStatus& a, SingleRuntimeStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(SingleRuntimeStatus* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SingleRuntimeStatus* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SingleRuntimeStatus* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SingleRuntimeStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SingleRuntimeStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SingleRuntimeStatus& from) {
    SingleRuntimeStatus::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SingleRuntimeStatus* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.SingleRuntimeStatus";
  }
  protected:
  explicit SingleRuntimeStatus(::google::protobuf::Arena* arena);
  SingleRuntimeStatus(::google::protobuf::Arena* arena, const SingleRuntimeStatus& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRuntimeIdFieldNumber = 1,
    kRuntimeStateFieldNumber = 2,
  };
  // string runtime_id = 1;
  void clear_runtime_id() ;
  const std::string& runtime_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_runtime_id(Arg_&& arg, Args_... args);
  std::string* mutable_runtime_id();
  PROTOBUF_NODISCARD std::string* release_runtime_id();
  void set_allocated_runtime_id(std::string* value);

  private:
  const std::string& _internal_runtime_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_runtime_id(
      const std::string& value);
  std::string* _internal_mutable_runtime_id();

  public:
  // .sep.grpc.PROCESS_STATE runtime_state = 2;
  void clear_runtime_state() ;
  ::sep::grpc::PROCESS_STATE runtime_state() const;
  void set_runtime_state(::sep::grpc::PROCESS_STATE value);

  private:
  ::sep::grpc::PROCESS_STATE _internal_runtime_state() const;
  void _internal_set_runtime_state(::sep::grpc::PROCESS_STATE value);

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.SingleRuntimeStatus)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      47, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr runtime_id_;
    int runtime_state_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class QueryValueForVariableRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.QueryValueForVariableRequest) */ {
 public:
  inline QueryValueForVariableRequest() : QueryValueForVariableRequest(nullptr) {}
  ~QueryValueForVariableRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryValueForVariableRequest(::google::protobuf::internal::ConstantInitialized);

  inline QueryValueForVariableRequest(const QueryValueForVariableRequest& from)
      : QueryValueForVariableRequest(nullptr, from) {}
  QueryValueForVariableRequest(QueryValueForVariableRequest&& from) noexcept
    : QueryValueForVariableRequest() {
    *this = ::std::move(from);
  }

  inline QueryValueForVariableRequest& operator=(const QueryValueForVariableRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryValueForVariableRequest& operator=(QueryValueForVariableRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryValueForVariableRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryValueForVariableRequest* internal_default_instance() {
    return reinterpret_cast<const QueryValueForVariableRequest*>(
               &_QueryValueForVariableRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(QueryValueForVariableRequest& a, QueryValueForVariableRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryValueForVariableRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryValueForVariableRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryValueForVariableRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryValueForVariableRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryValueForVariableRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QueryValueForVariableRequest& from) {
    QueryValueForVariableRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryValueForVariableRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.QueryValueForVariableRequest";
  }
  protected:
  explicit QueryValueForVariableRequest(::google::protobuf::Arena* arena);
  QueryValueForVariableRequest(::google::protobuf::Arena* arena, const QueryValueForVariableRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVariableIdFieldNumber = 2,
    kExecutionContextIdFieldNumber = 1,
  };
  // repeated string variable_id = 2;
  int variable_id_size() const;
  private:
  int _internal_variable_id_size() const;

  public:
  void clear_variable_id() ;
  const std::string& variable_id(int index) const;
  std::string* mutable_variable_id(int index);
  void set_variable_id(int index, const std::string& value);
  void set_variable_id(int index, std::string&& value);
  void set_variable_id(int index, const char* value);
  void set_variable_id(int index, const char* value, std::size_t size);
  void set_variable_id(int index, absl::string_view value);
  std::string* add_variable_id();
  void add_variable_id(const std::string& value);
  void add_variable_id(std::string&& value);
  void add_variable_id(const char* value);
  void add_variable_id(const char* value, std::size_t size);
  void add_variable_id(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& variable_id() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_variable_id();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_variable_id() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_variable_id();

  public:
  // uint32 execution_context_id = 1;
  void clear_execution_context_id() ;
  ::uint32_t execution_context_id() const;
  void set_execution_context_id(::uint32_t value);

  private:
  ::uint32_t _internal_execution_context_id() const;
  void _internal_set_execution_context_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.QueryValueForVariableRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      57, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField<std::string> variable_id_;
    ::uint32_t execution_context_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class PostProcessingRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.PostProcessingRequest) */ {
 public:
  inline PostProcessingRequest() : PostProcessingRequest(nullptr) {}
  ~PostProcessingRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PostProcessingRequest(::google::protobuf::internal::ConstantInitialized);

  inline PostProcessingRequest(const PostProcessingRequest& from)
      : PostProcessingRequest(nullptr, from) {}
  PostProcessingRequest(PostProcessingRequest&& from) noexcept
    : PostProcessingRequest() {
    *this = ::std::move(from);
  }

  inline PostProcessingRequest& operator=(const PostProcessingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PostProcessingRequest& operator=(PostProcessingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PostProcessingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PostProcessingRequest* internal_default_instance() {
    return reinterpret_cast<const PostProcessingRequest*>(
               &_PostProcessingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(PostProcessingRequest& a, PostProcessingRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PostProcessingRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PostProcessingRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PostProcessingRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PostProcessingRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PostProcessingRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PostProcessingRequest& from) {
    PostProcessingRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PostProcessingRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.PostProcessingRequest";
  }
  protected:
  explicit PostProcessingRequest(::google::protobuf::Arena* arena);
  PostProcessingRequest(::google::protobuf::Arena* arena, const PostProcessingRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEnableExecutionGraphFieldNumber = 1,
  };
  // bool enable_execution_graph = 1;
  void clear_enable_execution_graph() ;
  bool enable_execution_graph() const;
  void set_enable_execution_graph(bool value);

  private:
  bool _internal_enable_execution_graph() const;
  void _internal_set_enable_execution_graph(bool value);

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.PostProcessingRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    bool enable_execution_graph_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class PostProcessingReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.PostProcessingReply) */ {
 public:
  inline PostProcessingReply() : PostProcessingReply(nullptr) {}
  ~PostProcessingReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PostProcessingReply(::google::protobuf::internal::ConstantInitialized);

  inline PostProcessingReply(const PostProcessingReply& from)
      : PostProcessingReply(nullptr, from) {}
  PostProcessingReply(PostProcessingReply&& from) noexcept
    : PostProcessingReply() {
    *this = ::std::move(from);
  }

  inline PostProcessingReply& operator=(const PostProcessingReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline PostProcessingReply& operator=(PostProcessingReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PostProcessingReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const PostProcessingReply* internal_default_instance() {
    return reinterpret_cast<const PostProcessingReply*>(
               &_PostProcessingReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(PostProcessingReply& a, PostProcessingReply& b) {
    a.Swap(&b);
  }
  inline void Swap(PostProcessingReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PostProcessingReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PostProcessingReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PostProcessingReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PostProcessingReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PostProcessingReply& from) {
    PostProcessingReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PostProcessingReply* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.PostProcessingReply";
  }
  protected:
  explicit PostProcessingReply(::google::protobuf::Arena* arena);
  PostProcessingReply(::google::protobuf::Arena* arena, const PostProcessingReply& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExecutionGraphFieldNumber = 1,
  };
  // string execution_graph = 1;
  void clear_execution_graph() ;
  const std::string& execution_graph() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_execution_graph(Arg_&& arg, Args_... args);
  std::string* mutable_execution_graph();
  PROTOBUF_NODISCARD std::string* release_execution_graph();
  void set_allocated_execution_graph(std::string* value);

  private:
  const std::string& _internal_execution_graph() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_execution_graph(
      const std::string& value);
  std::string* _internal_mutable_execution_graph();

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.PostProcessingReply)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      52, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr execution_graph_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class ModelParseReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.ModelParseReply) */ {
 public:
  inline ModelParseReply() : ModelParseReply(nullptr) {}
  ~ModelParseReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ModelParseReply(::google::protobuf::internal::ConstantInitialized);

  inline ModelParseReply(const ModelParseReply& from)
      : ModelParseReply(nullptr, from) {}
  ModelParseReply(ModelParseReply&& from) noexcept
    : ModelParseReply() {
    *this = ::std::move(from);
  }

  inline ModelParseReply& operator=(const ModelParseReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModelParseReply& operator=(ModelParseReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModelParseReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModelParseReply* internal_default_instance() {
    return reinterpret_cast<const ModelParseReply*>(
               &_ModelParseReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ModelParseReply& a, ModelParseReply& b) {
    a.Swap(&b);
  }
  inline void Swap(ModelParseReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModelParseReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModelParseReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModelParseReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModelParseReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ModelParseReply& from) {
    ModelParseReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ModelParseReply* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.ModelParseReply";
  }
  protected:
  explicit ModelParseReply(::google::protobuf::Arena* arena);
  ModelParseReply(::google::protobuf::Arena* arena, const ModelParseReply& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorFieldNumber = 3,
    kErrorCountFieldNumber = 1,
    kWarningCountFieldNumber = 2,
  };
  // repeated string error = 3;
  int error_size() const;
  private:
  int _internal_error_size() const;

  public:
  void clear_error() ;
  const std::string& error(int index) const;
  std::string* mutable_error(int index);
  void set_error(int index, const std::string& value);
  void set_error(int index, std::string&& value);
  void set_error(int index, const char* value);
  void set_error(int index, const char* value, std::size_t size);
  void set_error(int index, absl::string_view value);
  std::string* add_error();
  void add_error(const std::string& value);
  void add_error(std::string&& value);
  void add_error(const char* value);
  void add_error(const char* value, std::size_t size);
  void add_error(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& error() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_error();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_error() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_error();

  public:
  // uint32 error_count = 1;
  void clear_error_count() ;
  ::uint32_t error_count() const;
  void set_error_count(::uint32_t value);

  private:
  ::uint32_t _internal_error_count() const;
  void _internal_set_error_count(::uint32_t value);

  public:
  // uint32 warning_count = 2;
  void clear_warning_count() ;
  ::uint32_t warning_count() const;
  void set_warning_count(::uint32_t value);

  private:
  ::uint32_t _internal_warning_count() const;
  void _internal_set_warning_count(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.ModelParseReply)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      38, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField<std::string> error_;
    ::uint32_t error_count_;
    ::uint32_t warning_count_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class ModelDefinitionRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.ModelDefinitionRequest) */ {
 public:
  inline ModelDefinitionRequest() : ModelDefinitionRequest(nullptr) {}
  ~ModelDefinitionRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ModelDefinitionRequest(::google::protobuf::internal::ConstantInitialized);

  inline ModelDefinitionRequest(const ModelDefinitionRequest& from)
      : ModelDefinitionRequest(nullptr, from) {}
  ModelDefinitionRequest(ModelDefinitionRequest&& from) noexcept
    : ModelDefinitionRequest() {
    *this = ::std::move(from);
  }

  inline ModelDefinitionRequest& operator=(const ModelDefinitionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModelDefinitionRequest& operator=(ModelDefinitionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModelDefinitionRequest& default_instance() {
    return *internal_default_instance();
  }
  enum ModelAltCase {
    kModelFilePath = 1,
    kModelRawText = 2,
    MODEL_ALT_NOT_SET = 0,
  };

  enum WorkflowAltCase {
    kWorkflowFilePath = 3,
    kWorkflowRawText = 4,
    WORKFLOW_ALT_NOT_SET = 0,
  };

  static inline const ModelDefinitionRequest* internal_default_instance() {
    return reinterpret_cast<const ModelDefinitionRequest*>(
               &_ModelDefinitionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ModelDefinitionRequest& a, ModelDefinitionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ModelDefinitionRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModelDefinitionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModelDefinitionRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModelDefinitionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModelDefinitionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ModelDefinitionRequest& from) {
    ModelDefinitionRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ModelDefinitionRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.ModelDefinitionRequest";
  }
  protected:
  explicit ModelDefinitionRequest(::google::protobuf::Arena* arena);
  ModelDefinitionRequest(::google::protobuf::Arena* arena, const ModelDefinitionRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModelFilePathFieldNumber = 1,
    kModelRawTextFieldNumber = 2,
    kWorkflowFilePathFieldNumber = 3,
    kWorkflowRawTextFieldNumber = 4,
  };
  // string model_file_path = 1;
  bool has_model_file_path() const;
  void clear_model_file_path() ;
  const std::string& model_file_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_model_file_path(Arg_&& arg, Args_... args);
  std::string* mutable_model_file_path();
  PROTOBUF_NODISCARD std::string* release_model_file_path();
  void set_allocated_model_file_path(std::string* value);

  private:
  const std::string& _internal_model_file_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_model_file_path(
      const std::string& value);
  std::string* _internal_mutable_model_file_path();

  public:
  // string model_raw_text = 2;
  bool has_model_raw_text() const;
  void clear_model_raw_text() ;
  const std::string& model_raw_text() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_model_raw_text(Arg_&& arg, Args_... args);
  std::string* mutable_model_raw_text();
  PROTOBUF_NODISCARD std::string* release_model_raw_text();
  void set_allocated_model_raw_text(std::string* value);

  private:
  const std::string& _internal_model_raw_text() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_model_raw_text(
      const std::string& value);
  std::string* _internal_mutable_model_raw_text();

  public:
  // string workflow_file_path = 3;
  bool has_workflow_file_path() const;
  void clear_workflow_file_path() ;
  const std::string& workflow_file_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_workflow_file_path(Arg_&& arg, Args_... args);
  std::string* mutable_workflow_file_path();
  PROTOBUF_NODISCARD std::string* release_workflow_file_path();
  void set_allocated_workflow_file_path(std::string* value);

  private:
  const std::string& _internal_workflow_file_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_workflow_file_path(
      const std::string& value);
  std::string* _internal_mutable_workflow_file_path();

  public:
  // string workflow_raw_text = 4;
  bool has_workflow_raw_text() const;
  void clear_workflow_raw_text() ;
  const std::string& workflow_raw_text() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_workflow_raw_text(Arg_&& arg, Args_... args);
  std::string* mutable_workflow_raw_text();
  PROTOBUF_NODISCARD std::string* release_workflow_raw_text();
  void set_allocated_workflow_raw_text(std::string* value);

  private:
  const std::string& _internal_workflow_raw_text() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_workflow_raw_text(
      const std::string& value);
  std::string* _internal_mutable_workflow_raw_text();

  public:
  void clear_model_alt();
  ModelAltCase model_alt_case() const;
  void clear_workflow_alt();
  WorkflowAltCase workflow_alt_case() const;
  // @@protoc_insertion_point(class_scope:sep.grpc.ModelDefinitionRequest)
 private:
  class _Internal;
  void set_has_model_file_path();
  void set_has_model_raw_text();
  void set_has_workflow_file_path();
  void set_has_workflow_raw_text();

  inline bool has_model_alt() const;
  inline void clear_has_model_alt();

  inline bool has_workflow_alt() const;
  inline void clear_has_workflow_alt();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 4, 0,
      104, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    union ModelAltUnion {
      constexpr ModelAltUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::internal::ArenaStringPtr model_file_path_;
      ::google::protobuf::internal::ArenaStringPtr model_raw_text_;
    } model_alt_;
    union WorkflowAltUnion {
      constexpr WorkflowAltUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::internal::ArenaStringPtr workflow_file_path_;
      ::google::protobuf::internal::ArenaStringPtr workflow_raw_text_;
    } workflow_alt_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[2];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class InitializationRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.InitializationRequest) */ {
 public:
  inline InitializationRequest() : InitializationRequest(nullptr) {}
  ~InitializationRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR InitializationRequest(::google::protobuf::internal::ConstantInitialized);

  inline InitializationRequest(const InitializationRequest& from)
      : InitializationRequest(nullptr, from) {}
  InitializationRequest(InitializationRequest&& from) noexcept
    : InitializationRequest() {
    *this = ::std::move(from);
  }

  inline InitializationRequest& operator=(const InitializationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline InitializationRequest& operator=(InitializationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InitializationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const InitializationRequest* internal_default_instance() {
    return reinterpret_cast<const InitializationRequest*>(
               &_InitializationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(InitializationRequest& a, InitializationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(InitializationRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InitializationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InitializationRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InitializationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InitializationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const InitializationRequest& from) {
    InitializationRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InitializationRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.InitializationRequest";
  }
  protected:
  explicit InitializationRequest(::google::protobuf::Arena* arena);
  InitializationRequest(::google::protobuf::Arena* arena, const InitializationRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSessionIdFieldNumber = 1,
  };
  // string session_id = 1;
  void clear_session_id() ;
  const std::string& session_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_session_id(Arg_&& arg, Args_... args);
  std::string* mutable_session_id();
  PROTOBUF_NODISCARD std::string* release_session_id();
  void set_allocated_session_id(std::string* value);

  private:
  const std::string& _internal_session_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_session_id(
      const std::string& value);
  std::string* _internal_mutable_session_id();

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.InitializationRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      49, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr session_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class InitializationReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.InitializationReply) */ {
 public:
  inline InitializationReply() : InitializationReply(nullptr) {}
  ~InitializationReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR InitializationReply(::google::protobuf::internal::ConstantInitialized);

  inline InitializationReply(const InitializationReply& from)
      : InitializationReply(nullptr, from) {}
  InitializationReply(InitializationReply&& from) noexcept
    : InitializationReply() {
    *this = ::std::move(from);
  }

  inline InitializationReply& operator=(const InitializationReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline InitializationReply& operator=(InitializationReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InitializationReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const InitializationReply* internal_default_instance() {
    return reinterpret_cast<const InitializationReply*>(
               &_InitializationReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(InitializationReply& a, InitializationReply& b) {
    a.Swap(&b);
  }
  inline void Swap(InitializationReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InitializationReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InitializationReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InitializationReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InitializationReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const InitializationReply& from) {
    InitializationReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InitializationReply* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.InitializationReply";
  }
  protected:
  explicit InitializationReply(::google::protobuf::Arena* arena);
  InitializationReply(::google::protobuf::Arena* arena, const InitializationReply& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 1,
  };
  // string message = 1;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.InitializationReply)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      44, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr message_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class ECReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.ECReply) */ {
 public:
  inline ECReply() : ECReply(nullptr) {}
  ~ECReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ECReply(::google::protobuf::internal::ConstantInitialized);

  inline ECReply(const ECReply& from)
      : ECReply(nullptr, from) {}
  ECReply(ECReply&& from) noexcept
    : ECReply() {
    *this = ::std::move(from);
  }

  inline ECReply& operator=(const ECReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline ECReply& operator=(ECReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ECReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const ECReply* internal_default_instance() {
    return reinterpret_cast<const ECReply*>(
               &_ECReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(ECReply& a, ECReply& b) {
    a.Swap(&b);
  }
  inline void Swap(ECReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ECReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ECReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ECReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ECReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ECReply& from) {
    ECReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ECReply* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.ECReply";
  }
  protected:
  explicit ECReply(::google::protobuf::Arena* arena);
  ECReply(::google::protobuf::Arena* arena, const ECReply& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExecutionContextIdFieldNumber = 6,
  };
  // repeated uint32 execution_context_id = 6;
  int execution_context_id_size() const;
  private:
  int _internal_execution_context_id_size() const;

  public:
  void clear_execution_context_id() ;
  ::uint32_t execution_context_id(int index) const;
  void set_execution_context_id(int index, ::uint32_t value);
  void add_execution_context_id(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& execution_context_id() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_execution_context_id();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_execution_context_id() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_execution_context_id();

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.ECReply)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::uint32_t> execution_context_id_;
    mutable ::google::protobuf::internal::CachedSize _execution_context_id_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class ECQuery final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.ECQuery) */ {
 public:
  inline ECQuery() : ECQuery(nullptr) {}
  ~ECQuery() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ECQuery(::google::protobuf::internal::ConstantInitialized);

  inline ECQuery(const ECQuery& from)
      : ECQuery(nullptr, from) {}
  ECQuery(ECQuery&& from) noexcept
    : ECQuery() {
    *this = ::std::move(from);
  }

  inline ECQuery& operator=(const ECQuery& from) {
    CopyFrom(from);
    return *this;
  }
  inline ECQuery& operator=(ECQuery&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ECQuery& default_instance() {
    return *internal_default_instance();
  }
  static inline const ECQuery* internal_default_instance() {
    return reinterpret_cast<const ECQuery*>(
               &_ECQuery_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(ECQuery& a, ECQuery& b) {
    a.Swap(&b);
  }
  inline void Swap(ECQuery* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ECQuery* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ECQuery* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ECQuery>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ECQuery& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ECQuery& from) {
    ECQuery::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ECQuery* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.ECQuery";
  }
  protected:
  explicit ECQuery(::google::protobuf::Arena* arena);
  ECQuery(::google::protobuf::Arena* arena, const ECQuery& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExecutionContextIdFieldNumber = 1,
  };
  // uint32 execution_context_id = 1;
  void clear_execution_context_id() ;
  ::uint32_t execution_context_id() const;
  void set_execution_context_id(::uint32_t value);

  private:
  ::uint32_t _internal_execution_context_id() const;
  void _internal_set_execution_context_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.ECQuery)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t execution_context_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class RuntimesStatusReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.RuntimesStatusReply) */ {
 public:
  inline RuntimesStatusReply() : RuntimesStatusReply(nullptr) {}
  ~RuntimesStatusReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RuntimesStatusReply(::google::protobuf::internal::ConstantInitialized);

  inline RuntimesStatusReply(const RuntimesStatusReply& from)
      : RuntimesStatusReply(nullptr, from) {}
  RuntimesStatusReply(RuntimesStatusReply&& from) noexcept
    : RuntimesStatusReply() {
    *this = ::std::move(from);
  }

  inline RuntimesStatusReply& operator=(const RuntimesStatusReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline RuntimesStatusReply& operator=(RuntimesStatusReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RuntimesStatusReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const RuntimesStatusReply* internal_default_instance() {
    return reinterpret_cast<const RuntimesStatusReply*>(
               &_RuntimesStatusReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(RuntimesStatusReply& a, RuntimesStatusReply& b) {
    a.Swap(&b);
  }
  inline void Swap(RuntimesStatusReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RuntimesStatusReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RuntimesStatusReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RuntimesStatusReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RuntimesStatusReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RuntimesStatusReply& from) {
    RuntimesStatusReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RuntimesStatusReply* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.RuntimesStatusReply";
  }
  protected:
  explicit RuntimesStatusReply(::google::protobuf::Arena* arena);
  RuntimesStatusReply(::google::protobuf::Arena* arena, const RuntimesStatusReply& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRuntimeStatusFieldNumber = 1,
  };
  // repeated .sep.grpc.SingleRuntimeStatus runtime_status = 1;
  int runtime_status_size() const;
  private:
  int _internal_runtime_status_size() const;

  public:
  void clear_runtime_status() ;
  ::sep::grpc::SingleRuntimeStatus* mutable_runtime_status(int index);
  ::google::protobuf::RepeatedPtrField< ::sep::grpc::SingleRuntimeStatus >*
      mutable_runtime_status();
  private:
  const ::google::protobuf::RepeatedPtrField<::sep::grpc::SingleRuntimeStatus>& _internal_runtime_status() const;
  ::google::protobuf::RepeatedPtrField<::sep::grpc::SingleRuntimeStatus>* _internal_mutable_runtime_status();
  public:
  const ::sep::grpc::SingleRuntimeStatus& runtime_status(int index) const;
  ::sep::grpc::SingleRuntimeStatus* add_runtime_status();
  const ::google::protobuf::RepeatedPtrField< ::sep::grpc::SingleRuntimeStatus >&
      runtime_status() const;
  // @@protoc_insertion_point(class_scope:sep.grpc.RuntimesStatusReply)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::sep::grpc::SingleRuntimeStatus > runtime_status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class RuntimeStatusTree final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.RuntimeStatusTree) */ {
 public:
  inline RuntimeStatusTree() : RuntimeStatusTree(nullptr) {}
  ~RuntimeStatusTree() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RuntimeStatusTree(::google::protobuf::internal::ConstantInitialized);

  inline RuntimeStatusTree(const RuntimeStatusTree& from)
      : RuntimeStatusTree(nullptr, from) {}
  RuntimeStatusTree(RuntimeStatusTree&& from) noexcept
    : RuntimeStatusTree() {
    *this = ::std::move(from);
  }

  inline RuntimeStatusTree& operator=(const RuntimeStatusTree& from) {
    CopyFrom(from);
    return *this;
  }
  inline RuntimeStatusTree& operator=(RuntimeStatusTree&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RuntimeStatusTree& default_instance() {
    return *internal_default_instance();
  }
  static inline const RuntimeStatusTree* internal_default_instance() {
    return reinterpret_cast<const RuntimeStatusTree*>(
               &_RuntimeStatusTree_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(RuntimeStatusTree& a, RuntimeStatusTree& b) {
    a.Swap(&b);
  }
  inline void Swap(RuntimeStatusTree* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RuntimeStatusTree* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RuntimeStatusTree* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RuntimeStatusTree>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RuntimeStatusTree& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RuntimeStatusTree& from) {
    RuntimeStatusTree::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RuntimeStatusTree* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.RuntimeStatusTree";
  }
  protected:
  explicit RuntimeStatusTree(::google::protobuf::Arena* arena);
  RuntimeStatusTree(::google::protobuf::Arena* arena, const RuntimeStatusTree& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChildrenStatusFieldNumber = 2,
    kRuntimeStatusFieldNumber = 1,
  };
  // repeated .sep.grpc.RuntimeStatusTree children_status = 2;
  int children_status_size() const;
  private:
  int _internal_children_status_size() const;

  public:
  void clear_children_status() ;
  ::sep::grpc::RuntimeStatusTree* mutable_children_status(int index);
  ::google::protobuf::RepeatedPtrField< ::sep::grpc::RuntimeStatusTree >*
      mutable_children_status();
  private:
  const ::google::protobuf::RepeatedPtrField<::sep::grpc::RuntimeStatusTree>& _internal_children_status() const;
  ::google::protobuf::RepeatedPtrField<::sep::grpc::RuntimeStatusTree>* _internal_mutable_children_status();
  public:
  const ::sep::grpc::RuntimeStatusTree& children_status(int index) const;
  ::sep::grpc::RuntimeStatusTree* add_children_status();
  const ::google::protobuf::RepeatedPtrField< ::sep::grpc::RuntimeStatusTree >&
      children_status() const;
  // .sep.grpc.SingleRuntimeStatus runtime_status = 1;
  bool has_runtime_status() const;
  void clear_runtime_status() ;
  const ::sep::grpc::SingleRuntimeStatus& runtime_status() const;
  PROTOBUF_NODISCARD ::sep::grpc::SingleRuntimeStatus* release_runtime_status();
  ::sep::grpc::SingleRuntimeStatus* mutable_runtime_status();
  void set_allocated_runtime_status(::sep::grpc::SingleRuntimeStatus* value);
  void unsafe_arena_set_allocated_runtime_status(::sep::grpc::SingleRuntimeStatus* value);
  ::sep::grpc::SingleRuntimeStatus* unsafe_arena_release_runtime_status();

  private:
  const ::sep::grpc::SingleRuntimeStatus& _internal_runtime_status() const;
  ::sep::grpc::SingleRuntimeStatus* _internal_mutable_runtime_status();

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.RuntimeStatusTree)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::sep::grpc::RuntimeStatusTree > children_status_;
    ::sep::grpc::SingleRuntimeStatus* runtime_status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class ModelEvalReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.ModelEvalReply) */ {
 public:
  inline ModelEvalReply() : ModelEvalReply(nullptr) {}
  ~ModelEvalReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ModelEvalReply(::google::protobuf::internal::ConstantInitialized);

  inline ModelEvalReply(const ModelEvalReply& from)
      : ModelEvalReply(nullptr, from) {}
  ModelEvalReply(ModelEvalReply&& from) noexcept
    : ModelEvalReply() {
    *this = ::std::move(from);
  }

  inline ModelEvalReply& operator=(const ModelEvalReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModelEvalReply& operator=(ModelEvalReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModelEvalReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModelEvalReply* internal_default_instance() {
    return reinterpret_cast<const ModelEvalReply*>(
               &_ModelEvalReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ModelEvalReply& a, ModelEvalReply& b) {
    a.Swap(&b);
  }
  inline void Swap(ModelEvalReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModelEvalReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModelEvalReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ModelEvalReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModelEvalReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ModelEvalReply& from) {
    ModelEvalReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ModelEvalReply* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.ModelEvalReply";
  }
  protected:
  explicit ModelEvalReply(::google::protobuf::Arena* arena);
  ModelEvalReply(::google::protobuf::Arena* arena, const ModelEvalReply& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNotYetEvalExecutionContextIdFieldNumber = 4,
    kParseReplyFieldNumber = 1,
    kExecutionContextCountFieldNumber = 2,
    kExecutionContextRootIdFieldNumber = 3,
    kStepCountFieldNumber = 5,
    kEvalCountFieldNumber = 6,
    kMaxExecutionContextHeightFieldNumber = 7,
    kMaxExecutionContextWidthFieldNumber = 8,
    kRedundancyCountFieldNumber = 9,
    kExitExecutionContextCountFieldNumber = 10,
    kEvalLimitReachedFieldNumber = 11,
  };
  // repeated uint32 not_yet_eval_execution_context_id = 4;
  int not_yet_eval_execution_context_id_size() const;
  private:
  int _internal_not_yet_eval_execution_context_id_size() const;

  public:
  void clear_not_yet_eval_execution_context_id() ;
  ::uint32_t not_yet_eval_execution_context_id(int index) const;
  void set_not_yet_eval_execution_context_id(int index, ::uint32_t value);
  void add_not_yet_eval_execution_context_id(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& not_yet_eval_execution_context_id() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_not_yet_eval_execution_context_id();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_not_yet_eval_execution_context_id() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_not_yet_eval_execution_context_id();

  public:
  // .sep.grpc.ModelParseReply parse_reply = 1;
  bool has_parse_reply() const;
  void clear_parse_reply() ;
  const ::sep::grpc::ModelParseReply& parse_reply() const;
  PROTOBUF_NODISCARD ::sep::grpc::ModelParseReply* release_parse_reply();
  ::sep::grpc::ModelParseReply* mutable_parse_reply();
  void set_allocated_parse_reply(::sep::grpc::ModelParseReply* value);
  void unsafe_arena_set_allocated_parse_reply(::sep::grpc::ModelParseReply* value);
  ::sep::grpc::ModelParseReply* unsafe_arena_release_parse_reply();

  private:
  const ::sep::grpc::ModelParseReply& _internal_parse_reply() const;
  ::sep::grpc::ModelParseReply* _internal_mutable_parse_reply();

  public:
  // uint32 execution_context_count = 2;
  void clear_execution_context_count() ;
  ::uint32_t execution_context_count() const;
  void set_execution_context_count(::uint32_t value);

  private:
  ::uint32_t _internal_execution_context_count() const;
  void _internal_set_execution_context_count(::uint32_t value);

  public:
  // uint32 execution_context_root_id = 3;
  void clear_execution_context_root_id() ;
  ::uint32_t execution_context_root_id() const;
  void set_execution_context_root_id(::uint32_t value);

  private:
  ::uint32_t _internal_execution_context_root_id() const;
  void _internal_set_execution_context_root_id(::uint32_t value);

  public:
  // uint32 step_count = 5;
  void clear_step_count() ;
  ::uint32_t step_count() const;
  void set_step_count(::uint32_t value);

  private:
  ::uint32_t _internal_step_count() const;
  void _internal_set_step_count(::uint32_t value);

  public:
  // uint32 eval_count = 6;
  void clear_eval_count() ;
  ::uint32_t eval_count() const;
  void set_eval_count(::uint32_t value);

  private:
  ::uint32_t _internal_eval_count() const;
  void _internal_set_eval_count(::uint32_t value);

  public:
  // uint32 max_execution_context_height = 7;
  void clear_max_execution_context_height() ;
  ::uint32_t max_execution_context_height() const;
  void set_max_execution_context_height(::uint32_t value);

  private:
  ::uint32_t _internal_max_execution_context_height() const;
  void _internal_set_max_execution_context_height(::uint32_t value);

  public:
  // uint32 max_execution_context_width = 8;
  void clear_max_execution_context_width() ;
  ::uint32_t max_execution_context_width() const;
  void set_max_execution_context_width(::uint32_t value);

  private:
  ::uint32_t _internal_max_execution_context_width() const;
  void _internal_set_max_execution_context_width(::uint32_t value);

  public:
  // uint32 redundancy_count = 9;
  void clear_redundancy_count() ;
  ::uint32_t redundancy_count() const;
  void set_redundancy_count(::uint32_t value);

  private:
  ::uint32_t _internal_redundancy_count() const;
  void _internal_set_redundancy_count(::uint32_t value);

  public:
  // uint32 exit_execution_context_count = 10;
  void clear_exit_execution_context_count() ;
  ::uint32_t exit_execution_context_count() const;
  void set_exit_execution_context_count(::uint32_t value);

  private:
  ::uint32_t _internal_exit_execution_context_count() const;
  void _internal_set_exit_execution_context_count(::uint32_t value);

  public:
  // bool eval_limit_reached = 11;
  void clear_eval_limit_reached() ;
  bool eval_limit_reached() const;
  void set_eval_limit_reached(bool value);

  private:
  bool _internal_eval_limit_reached() const;
  void _internal_set_eval_limit_reached(bool value);

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.ModelEvalReply)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint32_t> not_yet_eval_execution_context_id_;
    mutable ::google::protobuf::internal::CachedSize _not_yet_eval_execution_context_id_cached_byte_size_;
    ::sep::grpc::ModelParseReply* parse_reply_;
    ::uint32_t execution_context_count_;
    ::uint32_t execution_context_root_id_;
    ::uint32_t step_count_;
    ::uint32_t eval_count_;
    ::uint32_t max_execution_context_height_;
    ::uint32_t max_execution_context_width_;
    ::uint32_t redundancy_count_;
    ::uint32_t exit_execution_context_count_;
    bool eval_limit_reached_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class Expression final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.Expression) */ {
 public:
  inline Expression() : Expression(nullptr) {}
  ~Expression() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Expression(::google::protobuf::internal::ConstantInitialized);

  inline Expression(const Expression& from)
      : Expression(nullptr, from) {}
  Expression(Expression&& from) noexcept
    : Expression() {
    *this = ::std::move(from);
  }

  inline Expression& operator=(const Expression& from) {
    CopyFrom(from);
    return *this;
  }
  inline Expression& operator=(Expression&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Expression& default_instance() {
    return *internal_default_instance();
  }
  enum ExpressionAltCase {
    kRawBool = 1,
    kRawInteger = 2,
    kRawFloat = 3,
    kRawString = 4,
    kSymbol = 5,
    kOperation = 6,
    EXPRESSION_ALT_NOT_SET = 0,
  };

  static inline const Expression* internal_default_instance() {
    return reinterpret_cast<const Expression*>(
               &_Expression_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Expression& a, Expression& b) {
    a.Swap(&b);
  }
  inline void Swap(Expression* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Expression* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Expression* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Expression>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Expression& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Expression& from) {
    Expression::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Expression* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.Expression";
  }
  protected:
  explicit Expression(::google::protobuf::Arena* arena);
  Expression(::google::protobuf::Arena* arena, const Expression& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRawBoolFieldNumber = 1,
    kRawIntegerFieldNumber = 2,
    kRawFloatFieldNumber = 3,
    kRawStringFieldNumber = 4,
    kSymbolFieldNumber = 5,
    kOperationFieldNumber = 6,
  };
  // bool raw_bool = 1;
  bool has_raw_bool() const;
  void clear_raw_bool() ;
  bool raw_bool() const;
  void set_raw_bool(bool value);

  private:
  bool _internal_raw_bool() const;
  void _internal_set_raw_bool(bool value);

  public:
  // int64 raw_integer = 2;
  bool has_raw_integer() const;
  void clear_raw_integer() ;
  ::int64_t raw_integer() const;
  void set_raw_integer(::int64_t value);

  private:
  ::int64_t _internal_raw_integer() const;
  void _internal_set_raw_integer(::int64_t value);

  public:
  // double raw_float = 3;
  bool has_raw_float() const;
  void clear_raw_float() ;
  double raw_float() const;
  void set_raw_float(double value);

  private:
  double _internal_raw_float() const;
  void _internal_set_raw_float(double value);

  public:
  // string raw_string = 4;
  bool has_raw_string() const;
  void clear_raw_string() ;
  const std::string& raw_string() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_raw_string(Arg_&& arg, Args_... args);
  std::string* mutable_raw_string();
  PROTOBUF_NODISCARD std::string* release_raw_string();
  void set_allocated_raw_string(std::string* value);

  private:
  const std::string& _internal_raw_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_raw_string(
      const std::string& value);
  std::string* _internal_mutable_raw_string();

  public:
  // .sep.grpc.Symbol symbol = 5;
  bool has_symbol() const;
  private:
  bool _internal_has_symbol() const;

  public:
  void clear_symbol() ;
  const ::sep::grpc::Symbol& symbol() const;
  PROTOBUF_NODISCARD ::sep::grpc::Symbol* release_symbol();
  ::sep::grpc::Symbol* mutable_symbol();
  void set_allocated_symbol(::sep::grpc::Symbol* value);
  void unsafe_arena_set_allocated_symbol(::sep::grpc::Symbol* value);
  ::sep::grpc::Symbol* unsafe_arena_release_symbol();

  private:
  const ::sep::grpc::Symbol& _internal_symbol() const;
  ::sep::grpc::Symbol* _internal_mutable_symbol();

  public:
  // .sep.grpc.Operation operation = 6;
  bool has_operation() const;
  private:
  bool _internal_has_operation() const;

  public:
  void clear_operation() ;
  const ::sep::grpc::Operation& operation() const;
  PROTOBUF_NODISCARD ::sep::grpc::Operation* release_operation();
  ::sep::grpc::Operation* mutable_operation();
  void set_allocated_operation(::sep::grpc::Operation* value);
  void unsafe_arena_set_allocated_operation(::sep::grpc::Operation* value);
  ::sep::grpc::Operation* unsafe_arena_release_operation();

  private:
  const ::sep::grpc::Operation& _internal_operation() const;
  ::sep::grpc::Operation* _internal_mutable_operation();

  public:
  void clear_expression_alt();
  ExpressionAltCase expression_alt_case() const;
  // @@protoc_insertion_point(class_scope:sep.grpc.Expression)
 private:
  class _Internal;
  void set_has_raw_bool();
  void set_has_raw_integer();
  void set_has_raw_float();
  void set_has_raw_string();
  void set_has_symbol();
  void set_has_operation();

  inline bool has_expression_alt() const;
  inline void clear_has_expression_alt();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 6, 2,
      38, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    union ExpressionAltUnion {
      constexpr ExpressionAltUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      bool raw_bool_;
      ::int64_t raw_integer_;
      double raw_float_;
      ::google::protobuf::internal::ArenaStringPtr raw_string_;
      ::sep::grpc::Symbol* symbol_;
      ::sep::grpc::Operation* operation_;
    } expression_alt_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class Operation final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.Operation) */ {
 public:
  inline Operation() : Operation(nullptr) {}
  ~Operation() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Operation(::google::protobuf::internal::ConstantInitialized);

  inline Operation(const Operation& from)
      : Operation(nullptr, from) {}
  Operation(Operation&& from) noexcept
    : Operation() {
    *this = ::std::move(from);
  }

  inline Operation& operator=(const Operation& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operation& operator=(Operation&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operation& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operation* internal_default_instance() {
    return reinterpret_cast<const Operation*>(
               &_Operation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Operation& a, Operation& b) {
    a.Swap(&b);
  }
  inline void Swap(Operation* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operation* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Operation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Operation& from) {
    Operation::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operation* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.Operation";
  }
  protected:
  explicit Operation(::google::protobuf::Arena* arena);
  Operation(::google::protobuf::Arena* arena, const Operation& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOperandFieldNumber = 2,
    kOperatorKindFieldNumber = 1,
  };
  // repeated .sep.grpc.Expression operand = 2;
  int operand_size() const;
  private:
  int _internal_operand_size() const;

  public:
  void clear_operand() ;
  ::sep::grpc::Expression* mutable_operand(int index);
  ::google::protobuf::RepeatedPtrField< ::sep::grpc::Expression >*
      mutable_operand();
  private:
  const ::google::protobuf::RepeatedPtrField<::sep::grpc::Expression>& _internal_operand() const;
  ::google::protobuf::RepeatedPtrField<::sep::grpc::Expression>* _internal_mutable_operand();
  public:
  const ::sep::grpc::Expression& operand(int index) const;
  ::sep::grpc::Expression* add_operand();
  const ::google::protobuf::RepeatedPtrField< ::sep::grpc::Expression >&
      operand() const;
  // .sep.grpc.OperatorKind operatorKind = 1;
  void clear_operatorkind() ;
  ::sep::grpc::OperatorKind operatorkind() const;
  void set_operatorkind(::sep::grpc::OperatorKind value);

  private:
  ::sep::grpc::OperatorKind _internal_operatorkind() const;
  void _internal_set_operatorkind(::sep::grpc::OperatorKind value);

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.Operation)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::sep::grpc::Expression > operand_;
    int operatorkind_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class VariableValuePair final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.VariableValuePair) */ {
 public:
  inline VariableValuePair() : VariableValuePair(nullptr) {}
  ~VariableValuePair() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VariableValuePair(::google::protobuf::internal::ConstantInitialized);

  inline VariableValuePair(const VariableValuePair& from)
      : VariableValuePair(nullptr, from) {}
  VariableValuePair(VariableValuePair&& from) noexcept
    : VariableValuePair() {
    *this = ::std::move(from);
  }

  inline VariableValuePair& operator=(const VariableValuePair& from) {
    CopyFrom(from);
    return *this;
  }
  inline VariableValuePair& operator=(VariableValuePair&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VariableValuePair& default_instance() {
    return *internal_default_instance();
  }
  static inline const VariableValuePair* internal_default_instance() {
    return reinterpret_cast<const VariableValuePair*>(
               &_VariableValuePair_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(VariableValuePair& a, VariableValuePair& b) {
    a.Swap(&b);
  }
  inline void Swap(VariableValuePair* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VariableValuePair* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VariableValuePair* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VariableValuePair>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VariableValuePair& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const VariableValuePair& from) {
    VariableValuePair::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VariableValuePair* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.VariableValuePair";
  }
  protected:
  explicit VariableValuePair(::google::protobuf::Arena* arena);
  VariableValuePair(::google::protobuf::Arena* arena, const VariableValuePair& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVariableIdFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // string variable_id = 1;
  void clear_variable_id() ;
  const std::string& variable_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_variable_id(Arg_&& arg, Args_... args);
  std::string* mutable_variable_id();
  PROTOBUF_NODISCARD std::string* release_variable_id();
  void set_allocated_variable_id(std::string* value);

  private:
  const std::string& _internal_variable_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_variable_id(
      const std::string& value);
  std::string* _internal_mutable_variable_id();

  public:
  // .sep.grpc.Expression value = 2;
  bool has_value() const;
  void clear_value() ;
  const ::sep::grpc::Expression& value() const;
  PROTOBUF_NODISCARD ::sep::grpc::Expression* release_value();
  ::sep::grpc::Expression* mutable_value();
  void set_allocated_value(::sep::grpc::Expression* value);
  void unsafe_arena_set_allocated_value(::sep::grpc::Expression* value);
  ::sep::grpc::Expression* unsafe_arena_release_value();

  private:
  const ::sep::grpc::Expression& _internal_value() const;
  ::sep::grpc::Expression* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.VariableValuePair)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      46, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr variable_id_;
    ::sep::grpc::Expression* value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class SymbexEvalRunnableBasicReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.SymbexEvalRunnableBasicReply) */ {
 public:
  inline SymbexEvalRunnableBasicReply() : SymbexEvalRunnableBasicReply(nullptr) {}
  ~SymbexEvalRunnableBasicReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SymbexEvalRunnableBasicReply(::google::protobuf::internal::ConstantInitialized);

  inline SymbexEvalRunnableBasicReply(const SymbexEvalRunnableBasicReply& from)
      : SymbexEvalRunnableBasicReply(nullptr, from) {}
  SymbexEvalRunnableBasicReply(SymbexEvalRunnableBasicReply&& from) noexcept
    : SymbexEvalRunnableBasicReply() {
    *this = ::std::move(from);
  }

  inline SymbexEvalRunnableBasicReply& operator=(const SymbexEvalRunnableBasicReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline SymbexEvalRunnableBasicReply& operator=(SymbexEvalRunnableBasicReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SymbexEvalRunnableBasicReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const SymbexEvalRunnableBasicReply* internal_default_instance() {
    return reinterpret_cast<const SymbexEvalRunnableBasicReply*>(
               &_SymbexEvalRunnableBasicReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(SymbexEvalRunnableBasicReply& a, SymbexEvalRunnableBasicReply& b) {
    a.Swap(&b);
  }
  inline void Swap(SymbexEvalRunnableBasicReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SymbexEvalRunnableBasicReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SymbexEvalRunnableBasicReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SymbexEvalRunnableBasicReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SymbexEvalRunnableBasicReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SymbexEvalRunnableBasicReply& from) {
    SymbexEvalRunnableBasicReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SymbexEvalRunnableBasicReply* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.SymbexEvalRunnableBasicReply";
  }
  protected:
  explicit SymbexEvalRunnableBasicReply(::google::protobuf::Arena* arena);
  SymbexEvalRunnableBasicReply(::google::protobuf::Arena* arena, const SymbexEvalRunnableBasicReply& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCreatedSymbolsFieldNumber = 5,
    kNotYetEvalExecutionContextIdFieldNumber = 6,
    kPathConditionFieldNumber = 3,
    kOtherConditionFieldNumber = 4,
    kIsSatisfiableFieldNumber = 1,
    kExecutionContextIdFieldNumber = 2,
  };
  // repeated .sep.grpc.TypedSymbol created_symbols = 5;
  int created_symbols_size() const;
  private:
  int _internal_created_symbols_size() const;

  public:
  void clear_created_symbols() ;
  ::sep::grpc::TypedSymbol* mutable_created_symbols(int index);
  ::google::protobuf::RepeatedPtrField< ::sep::grpc::TypedSymbol >*
      mutable_created_symbols();
  private:
  const ::google::protobuf::RepeatedPtrField<::sep::grpc::TypedSymbol>& _internal_created_symbols() const;
  ::google::protobuf::RepeatedPtrField<::sep::grpc::TypedSymbol>* _internal_mutable_created_symbols();
  public:
  const ::sep::grpc::TypedSymbol& created_symbols(int index) const;
  ::sep::grpc::TypedSymbol* add_created_symbols();
  const ::google::protobuf::RepeatedPtrField< ::sep::grpc::TypedSymbol >&
      created_symbols() const;
  // repeated uint32 not_yet_eval_execution_context_id = 6;
  int not_yet_eval_execution_context_id_size() const;
  private:
  int _internal_not_yet_eval_execution_context_id_size() const;

  public:
  void clear_not_yet_eval_execution_context_id() ;
  ::uint32_t not_yet_eval_execution_context_id(int index) const;
  void set_not_yet_eval_execution_context_id(int index, ::uint32_t value);
  void add_not_yet_eval_execution_context_id(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& not_yet_eval_execution_context_id() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_not_yet_eval_execution_context_id();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_not_yet_eval_execution_context_id() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_not_yet_eval_execution_context_id();

  public:
  // .sep.grpc.Expression path_condition = 3;
  bool has_path_condition() const;
  void clear_path_condition() ;
  const ::sep::grpc::Expression& path_condition() const;
  PROTOBUF_NODISCARD ::sep::grpc::Expression* release_path_condition();
  ::sep::grpc::Expression* mutable_path_condition();
  void set_allocated_path_condition(::sep::grpc::Expression* value);
  void unsafe_arena_set_allocated_path_condition(::sep::grpc::Expression* value);
  ::sep::grpc::Expression* unsafe_arena_release_path_condition();

  private:
  const ::sep::grpc::Expression& _internal_path_condition() const;
  ::sep::grpc::Expression* _internal_mutable_path_condition();

  public:
  // .sep.grpc.Expression other_condition = 4;
  bool has_other_condition() const;
  void clear_other_condition() ;
  const ::sep::grpc::Expression& other_condition() const;
  PROTOBUF_NODISCARD ::sep::grpc::Expression* release_other_condition();
  ::sep::grpc::Expression* mutable_other_condition();
  void set_allocated_other_condition(::sep::grpc::Expression* value);
  void unsafe_arena_set_allocated_other_condition(::sep::grpc::Expression* value);
  ::sep::grpc::Expression* unsafe_arena_release_other_condition();

  private:
  const ::sep::grpc::Expression& _internal_other_condition() const;
  ::sep::grpc::Expression* _internal_mutable_other_condition();

  public:
  // bool is_satisfiable = 1;
  void clear_is_satisfiable() ;
  bool is_satisfiable() const;
  void set_is_satisfiable(bool value);

  private:
  bool _internal_is_satisfiable() const;
  void _internal_set_is_satisfiable(bool value);

  public:
  // uint32 execution_context_id = 2;
  void clear_execution_context_id() ;
  ::uint32_t execution_context_id() const;
  void set_execution_context_id(::uint32_t value);

  private:
  ::uint32_t _internal_execution_context_id() const;
  void _internal_set_execution_context_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.SymbexEvalRunnableBasicReply)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 3,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::sep::grpc::TypedSymbol > created_symbols_;
    ::google::protobuf::RepeatedField<::uint32_t> not_yet_eval_execution_context_id_;
    mutable ::google::protobuf::internal::CachedSize _not_yet_eval_execution_context_id_cached_byte_size_;
    ::sep::grpc::Expression* path_condition_;
    ::sep::grpc::Expression* other_condition_;
    bool is_satisfiable_;
    ::uint32_t execution_context_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class SymbexEvalStepRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.SymbexEvalStepRequest) */ {
 public:
  inline SymbexEvalStepRequest() : SymbexEvalStepRequest(nullptr) {}
  ~SymbexEvalStepRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SymbexEvalStepRequest(::google::protobuf::internal::ConstantInitialized);

  inline SymbexEvalStepRequest(const SymbexEvalStepRequest& from)
      : SymbexEvalStepRequest(nullptr, from) {}
  SymbexEvalStepRequest(SymbexEvalStepRequest&& from) noexcept
    : SymbexEvalStepRequest() {
    *this = ::std::move(from);
  }

  inline SymbexEvalStepRequest& operator=(const SymbexEvalStepRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SymbexEvalStepRequest& operator=(SymbexEvalStepRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SymbexEvalStepRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SymbexEvalStepRequest* internal_default_instance() {
    return reinterpret_cast<const SymbexEvalStepRequest*>(
               &_SymbexEvalStepRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(SymbexEvalStepRequest& a, SymbexEvalStepRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SymbexEvalStepRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SymbexEvalStepRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SymbexEvalStepRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SymbexEvalStepRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SymbexEvalStepRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SymbexEvalStepRequest& from) {
    SymbexEvalStepRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SymbexEvalStepRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.SymbexEvalStepRequest";
  }
  protected:
  explicit SymbexEvalStepRequest(::google::protobuf::Arena* arena);
  SymbexEvalStepRequest(::google::protobuf::Arena* arena, const SymbexEvalStepRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVariableValueFieldNumber = 2,
    kConditionFieldNumber = 3,
    kStepCountFieldNumber = 1,
  };
  // repeated .sep.grpc.VariableValuePair variable_value = 2;
  int variable_value_size() const;
  private:
  int _internal_variable_value_size() const;

  public:
  void clear_variable_value() ;
  ::sep::grpc::VariableValuePair* mutable_variable_value(int index);
  ::google::protobuf::RepeatedPtrField< ::sep::grpc::VariableValuePair >*
      mutable_variable_value();
  private:
  const ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>& _internal_variable_value() const;
  ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>* _internal_mutable_variable_value();
  public:
  const ::sep::grpc::VariableValuePair& variable_value(int index) const;
  ::sep::grpc::VariableValuePair* add_variable_value();
  const ::google::protobuf::RepeatedPtrField< ::sep::grpc::VariableValuePair >&
      variable_value() const;
  // .sep.grpc.Expression condition = 3;
  bool has_condition() const;
  void clear_condition() ;
  const ::sep::grpc::Expression& condition() const;
  PROTOBUF_NODISCARD ::sep::grpc::Expression* release_condition();
  ::sep::grpc::Expression* mutable_condition();
  void set_allocated_condition(::sep::grpc::Expression* value);
  void unsafe_arena_set_allocated_condition(::sep::grpc::Expression* value);
  ::sep::grpc::Expression* unsafe_arena_release_condition();

  private:
  const ::sep::grpc::Expression& _internal_condition() const;
  ::sep::grpc::Expression* _internal_mutable_condition();

  public:
  // uint32 step_count = 1;
  void clear_step_count() ;
  ::uint32_t step_count() const;
  void set_step_count(::uint32_t value);

  private:
  ::uint32_t _internal_step_count() const;
  void _internal_set_step_count(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.SymbexEvalStepRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::sep::grpc::VariableValuePair > variable_value_;
    ::sep::grpc::Expression* condition_;
    ::uint32_t step_count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class SymbexEvalRunnableRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.SymbexEvalRunnableRequest) */ {
 public:
  inline SymbexEvalRunnableRequest() : SymbexEvalRunnableRequest(nullptr) {}
  ~SymbexEvalRunnableRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SymbexEvalRunnableRequest(::google::protobuf::internal::ConstantInitialized);

  inline SymbexEvalRunnableRequest(const SymbexEvalRunnableRequest& from)
      : SymbexEvalRunnableRequest(nullptr, from) {}
  SymbexEvalRunnableRequest(SymbexEvalRunnableRequest&& from) noexcept
    : SymbexEvalRunnableRequest() {
    *this = ::std::move(from);
  }

  inline SymbexEvalRunnableRequest& operator=(const SymbexEvalRunnableRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SymbexEvalRunnableRequest& operator=(SymbexEvalRunnableRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SymbexEvalRunnableRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SymbexEvalRunnableRequest* internal_default_instance() {
    return reinterpret_cast<const SymbexEvalRunnableRequest*>(
               &_SymbexEvalRunnableRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(SymbexEvalRunnableRequest& a, SymbexEvalRunnableRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SymbexEvalRunnableRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SymbexEvalRunnableRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SymbexEvalRunnableRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SymbexEvalRunnableRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SymbexEvalRunnableRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SymbexEvalRunnableRequest& from) {
    SymbexEvalRunnableRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SymbexEvalRunnableRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.SymbexEvalRunnableRequest";
  }
  protected:
  explicit SymbexEvalRunnableRequest(::google::protobuf::Arena* arena);
  SymbexEvalRunnableRequest(::google::protobuf::Arena* arena, const SymbexEvalRunnableRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVariableValueFieldNumber = 3,
    kRunnableElementIdFieldNumber = 2,
    kConditionFieldNumber = 4,
    kExecutionContextIdFieldNumber = 1,
  };
  // repeated .sep.grpc.VariableValuePair variable_value = 3;
  int variable_value_size() const;
  private:
  int _internal_variable_value_size() const;

  public:
  void clear_variable_value() ;
  ::sep::grpc::VariableValuePair* mutable_variable_value(int index);
  ::google::protobuf::RepeatedPtrField< ::sep::grpc::VariableValuePair >*
      mutable_variable_value();
  private:
  const ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>& _internal_variable_value() const;
  ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>* _internal_mutable_variable_value();
  public:
  const ::sep::grpc::VariableValuePair& variable_value(int index) const;
  ::sep::grpc::VariableValuePair* add_variable_value();
  const ::google::protobuf::RepeatedPtrField< ::sep::grpc::VariableValuePair >&
      variable_value() const;
  // string runnable_element_id = 2;
  void clear_runnable_element_id() ;
  const std::string& runnable_element_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_runnable_element_id(Arg_&& arg, Args_... args);
  std::string* mutable_runnable_element_id();
  PROTOBUF_NODISCARD std::string* release_runnable_element_id();
  void set_allocated_runnable_element_id(std::string* value);

  private:
  const std::string& _internal_runnable_element_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_runnable_element_id(
      const std::string& value);
  std::string* _internal_mutable_runnable_element_id();

  public:
  // .sep.grpc.Expression condition = 4;
  bool has_condition() const;
  void clear_condition() ;
  const ::sep::grpc::Expression& condition() const;
  PROTOBUF_NODISCARD ::sep::grpc::Expression* release_condition();
  ::sep::grpc::Expression* mutable_condition();
  void set_allocated_condition(::sep::grpc::Expression* value);
  void unsafe_arena_set_allocated_condition(::sep::grpc::Expression* value);
  ::sep::grpc::Expression* unsafe_arena_release_condition();

  private:
  const ::sep::grpc::Expression& _internal_condition() const;
  ::sep::grpc::Expression* _internal_mutable_condition();

  public:
  // uint32 execution_context_id = 1;
  void clear_execution_context_id() ;
  ::uint32_t execution_context_id() const;
  void set_execution_context_id(::uint32_t value);

  private:
  ::uint32_t _internal_execution_context_id() const;
  void _internal_set_execution_context_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.SymbexEvalRunnableRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      62, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::sep::grpc::VariableValuePair > variable_value_;
    ::google::protobuf::internal::ArenaStringPtr runnable_element_id_;
    ::sep::grpc::Expression* condition_;
    ::uint32_t execution_context_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class SymbexEvalInitRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.SymbexEvalInitRequest) */ {
 public:
  inline SymbexEvalInitRequest() : SymbexEvalInitRequest(nullptr) {}
  ~SymbexEvalInitRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SymbexEvalInitRequest(::google::protobuf::internal::ConstantInitialized);

  inline SymbexEvalInitRequest(const SymbexEvalInitRequest& from)
      : SymbexEvalInitRequest(nullptr, from) {}
  SymbexEvalInitRequest(SymbexEvalInitRequest&& from) noexcept
    : SymbexEvalInitRequest() {
    *this = ::std::move(from);
  }

  inline SymbexEvalInitRequest& operator=(const SymbexEvalInitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SymbexEvalInitRequest& operator=(SymbexEvalInitRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SymbexEvalInitRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SymbexEvalInitRequest* internal_default_instance() {
    return reinterpret_cast<const SymbexEvalInitRequest*>(
               &_SymbexEvalInitRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(SymbexEvalInitRequest& a, SymbexEvalInitRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SymbexEvalInitRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SymbexEvalInitRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SymbexEvalInitRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SymbexEvalInitRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SymbexEvalInitRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SymbexEvalInitRequest& from) {
    SymbexEvalInitRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SymbexEvalInitRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.SymbexEvalInitRequest";
  }
  protected:
  explicit SymbexEvalInitRequest(::google::protobuf::Arena* arena);
  SymbexEvalInitRequest(::google::protobuf::Arena* arena, const SymbexEvalInitRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVariableValueFieldNumber = 1,
    kConditionFieldNumber = 2,
  };
  // repeated .sep.grpc.VariableValuePair variable_value = 1;
  int variable_value_size() const;
  private:
  int _internal_variable_value_size() const;

  public:
  void clear_variable_value() ;
  ::sep::grpc::VariableValuePair* mutable_variable_value(int index);
  ::google::protobuf::RepeatedPtrField< ::sep::grpc::VariableValuePair >*
      mutable_variable_value();
  private:
  const ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>& _internal_variable_value() const;
  ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>* _internal_mutable_variable_value();
  public:
  const ::sep::grpc::VariableValuePair& variable_value(int index) const;
  ::sep::grpc::VariableValuePair* add_variable_value();
  const ::google::protobuf::RepeatedPtrField< ::sep::grpc::VariableValuePair >&
      variable_value() const;
  // .sep.grpc.Expression condition = 2;
  bool has_condition() const;
  void clear_condition() ;
  const ::sep::grpc::Expression& condition() const;
  PROTOBUF_NODISCARD ::sep::grpc::Expression* release_condition();
  ::sep::grpc::Expression* mutable_condition();
  void set_allocated_condition(::sep::grpc::Expression* value);
  void unsafe_arena_set_allocated_condition(::sep::grpc::Expression* value);
  ::sep::grpc::Expression* unsafe_arena_release_condition();

  private:
  const ::sep::grpc::Expression& _internal_condition() const;
  ::sep::grpc::Expression* _internal_mutable_condition();

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.SymbexEvalInitRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::sep::grpc::VariableValuePair > variable_value_;
    ::sep::grpc::Expression* condition_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class SymbexEvalInitReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.SymbexEvalInitReply) */ {
 public:
  inline SymbexEvalInitReply() : SymbexEvalInitReply(nullptr) {}
  ~SymbexEvalInitReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SymbexEvalInitReply(::google::protobuf::internal::ConstantInitialized);

  inline SymbexEvalInitReply(const SymbexEvalInitReply& from)
      : SymbexEvalInitReply(nullptr, from) {}
  SymbexEvalInitReply(SymbexEvalInitReply&& from) noexcept
    : SymbexEvalInitReply() {
    *this = ::std::move(from);
  }

  inline SymbexEvalInitReply& operator=(const SymbexEvalInitReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline SymbexEvalInitReply& operator=(SymbexEvalInitReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SymbexEvalInitReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const SymbexEvalInitReply* internal_default_instance() {
    return reinterpret_cast<const SymbexEvalInitReply*>(
               &_SymbexEvalInitReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(SymbexEvalInitReply& a, SymbexEvalInitReply& b) {
    a.Swap(&b);
  }
  inline void Swap(SymbexEvalInitReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SymbexEvalInitReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SymbexEvalInitReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SymbexEvalInitReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SymbexEvalInitReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SymbexEvalInitReply& from) {
    SymbexEvalInitReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SymbexEvalInitReply* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.SymbexEvalInitReply";
  }
  protected:
  explicit SymbexEvalInitReply(::google::protobuf::Arena* arena);
  SymbexEvalInitReply(::google::protobuf::Arena* arena, const SymbexEvalInitReply& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVariableValueFieldNumber = 2,
    kPathConditionFieldNumber = 3,
    kOtherConditionFieldNumber = 4,
    kExecutionContextIdFieldNumber = 1,
  };
  // repeated .sep.grpc.VariableValuePair variable_value = 2;
  int variable_value_size() const;
  private:
  int _internal_variable_value_size() const;

  public:
  void clear_variable_value() ;
  ::sep::grpc::VariableValuePair* mutable_variable_value(int index);
  ::google::protobuf::RepeatedPtrField< ::sep::grpc::VariableValuePair >*
      mutable_variable_value();
  private:
  const ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>& _internal_variable_value() const;
  ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>* _internal_mutable_variable_value();
  public:
  const ::sep::grpc::VariableValuePair& variable_value(int index) const;
  ::sep::grpc::VariableValuePair* add_variable_value();
  const ::google::protobuf::RepeatedPtrField< ::sep::grpc::VariableValuePair >&
      variable_value() const;
  // .sep.grpc.Expression path_condition = 3;
  bool has_path_condition() const;
  void clear_path_condition() ;
  const ::sep::grpc::Expression& path_condition() const;
  PROTOBUF_NODISCARD ::sep::grpc::Expression* release_path_condition();
  ::sep::grpc::Expression* mutable_path_condition();
  void set_allocated_path_condition(::sep::grpc::Expression* value);
  void unsafe_arena_set_allocated_path_condition(::sep::grpc::Expression* value);
  ::sep::grpc::Expression* unsafe_arena_release_path_condition();

  private:
  const ::sep::grpc::Expression& _internal_path_condition() const;
  ::sep::grpc::Expression* _internal_mutable_path_condition();

  public:
  // .sep.grpc.Expression other_condition = 4;
  bool has_other_condition() const;
  void clear_other_condition() ;
  const ::sep::grpc::Expression& other_condition() const;
  PROTOBUF_NODISCARD ::sep::grpc::Expression* release_other_condition();
  ::sep::grpc::Expression* mutable_other_condition();
  void set_allocated_other_condition(::sep::grpc::Expression* value);
  void unsafe_arena_set_allocated_other_condition(::sep::grpc::Expression* value);
  ::sep::grpc::Expression* unsafe_arena_release_other_condition();

  private:
  const ::sep::grpc::Expression& _internal_other_condition() const;
  ::sep::grpc::Expression* _internal_mutable_other_condition();

  public:
  // uint32 execution_context_id = 1;
  void clear_execution_context_id() ;
  ::uint32_t execution_context_id() const;
  void set_execution_context_id(::uint32_t value);

  private:
  ::uint32_t _internal_execution_context_id() const;
  void _internal_set_execution_context_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.SymbexEvalInitReply)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 3,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::sep::grpc::VariableValuePair > variable_value_;
    ::sep::grpc::Expression* path_condition_;
    ::sep::grpc::Expression* other_condition_;
    ::uint32_t execution_context_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class SymbexEvalContextRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.SymbexEvalContextRequest) */ {
 public:
  inline SymbexEvalContextRequest() : SymbexEvalContextRequest(nullptr) {}
  ~SymbexEvalContextRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SymbexEvalContextRequest(::google::protobuf::internal::ConstantInitialized);

  inline SymbexEvalContextRequest(const SymbexEvalContextRequest& from)
      : SymbexEvalContextRequest(nullptr, from) {}
  SymbexEvalContextRequest(SymbexEvalContextRequest&& from) noexcept
    : SymbexEvalContextRequest() {
    *this = ::std::move(from);
  }

  inline SymbexEvalContextRequest& operator=(const SymbexEvalContextRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SymbexEvalContextRequest& operator=(SymbexEvalContextRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SymbexEvalContextRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SymbexEvalContextRequest* internal_default_instance() {
    return reinterpret_cast<const SymbexEvalContextRequest*>(
               &_SymbexEvalContextRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(SymbexEvalContextRequest& a, SymbexEvalContextRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SymbexEvalContextRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SymbexEvalContextRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SymbexEvalContextRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SymbexEvalContextRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SymbexEvalContextRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SymbexEvalContextRequest& from) {
    SymbexEvalContextRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SymbexEvalContextRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.SymbexEvalContextRequest";
  }
  protected:
  explicit SymbexEvalContextRequest(::google::protobuf::Arena* arena);
  SymbexEvalContextRequest(::google::protobuf::Arena* arena, const SymbexEvalContextRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVariableValueFieldNumber = 3,
    kConditionFieldNumber = 4,
    kExecutionContextIdFieldNumber = 1,
    kStepCountFieldNumber = 2,
  };
  // repeated .sep.grpc.VariableValuePair variable_value = 3;
  int variable_value_size() const;
  private:
  int _internal_variable_value_size() const;

  public:
  void clear_variable_value() ;
  ::sep::grpc::VariableValuePair* mutable_variable_value(int index);
  ::google::protobuf::RepeatedPtrField< ::sep::grpc::VariableValuePair >*
      mutable_variable_value();
  private:
  const ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>& _internal_variable_value() const;
  ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>* _internal_mutable_variable_value();
  public:
  const ::sep::grpc::VariableValuePair& variable_value(int index) const;
  ::sep::grpc::VariableValuePair* add_variable_value();
  const ::google::protobuf::RepeatedPtrField< ::sep::grpc::VariableValuePair >&
      variable_value() const;
  // .sep.grpc.Expression condition = 4;
  bool has_condition() const;
  void clear_condition() ;
  const ::sep::grpc::Expression& condition() const;
  PROTOBUF_NODISCARD ::sep::grpc::Expression* release_condition();
  ::sep::grpc::Expression* mutable_condition();
  void set_allocated_condition(::sep::grpc::Expression* value);
  void unsafe_arena_set_allocated_condition(::sep::grpc::Expression* value);
  ::sep::grpc::Expression* unsafe_arena_release_condition();

  private:
  const ::sep::grpc::Expression& _internal_condition() const;
  ::sep::grpc::Expression* _internal_mutable_condition();

  public:
  // uint32 execution_context_id = 1;
  void clear_execution_context_id() ;
  ::uint32_t execution_context_id() const;
  void set_execution_context_id(::uint32_t value);

  private:
  ::uint32_t _internal_execution_context_id() const;
  void _internal_set_execution_context_id(::uint32_t value);

  public:
  // uint32 step_count = 2;
  void clear_step_count() ;
  ::uint32_t step_count() const;
  void set_step_count(::uint32_t value);

  private:
  ::uint32_t _internal_step_count() const;
  void _internal_set_step_count(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.SymbexEvalContextRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::sep::grpc::VariableValuePair > variable_value_;
    ::sep::grpc::Expression* condition_;
    ::uint32_t execution_context_id_;
    ::uint32_t step_count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class QueryValueForVariableReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.QueryValueForVariableReply) */ {
 public:
  inline QueryValueForVariableReply() : QueryValueForVariableReply(nullptr) {}
  ~QueryValueForVariableReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryValueForVariableReply(::google::protobuf::internal::ConstantInitialized);

  inline QueryValueForVariableReply(const QueryValueForVariableReply& from)
      : QueryValueForVariableReply(nullptr, from) {}
  QueryValueForVariableReply(QueryValueForVariableReply&& from) noexcept
    : QueryValueForVariableReply() {
    *this = ::std::move(from);
  }

  inline QueryValueForVariableReply& operator=(const QueryValueForVariableReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryValueForVariableReply& operator=(QueryValueForVariableReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryValueForVariableReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryValueForVariableReply* internal_default_instance() {
    return reinterpret_cast<const QueryValueForVariableReply*>(
               &_QueryValueForVariableReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(QueryValueForVariableReply& a, QueryValueForVariableReply& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryValueForVariableReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryValueForVariableReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryValueForVariableReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryValueForVariableReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryValueForVariableReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QueryValueForVariableReply& from) {
    QueryValueForVariableReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryValueForVariableReply* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.QueryValueForVariableReply";
  }
  protected:
  explicit QueryValueForVariableReply(::google::protobuf::Arena* arena);
  QueryValueForVariableReply(::google::protobuf::Arena* arena, const QueryValueForVariableReply& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVariableValueFieldNumber = 2,
    kExecutionContextIdFieldNumber = 1,
  };
  // repeated .sep.grpc.VariableValuePair variable_value = 2;
  int variable_value_size() const;
  private:
  int _internal_variable_value_size() const;

  public:
  void clear_variable_value() ;
  ::sep::grpc::VariableValuePair* mutable_variable_value(int index);
  ::google::protobuf::RepeatedPtrField< ::sep::grpc::VariableValuePair >*
      mutable_variable_value();
  private:
  const ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>& _internal_variable_value() const;
  ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>* _internal_mutable_variable_value();
  public:
  const ::sep::grpc::VariableValuePair& variable_value(int index) const;
  ::sep::grpc::VariableValuePair* add_variable_value();
  const ::google::protobuf::RepeatedPtrField< ::sep::grpc::VariableValuePair >&
      variable_value() const;
  // uint32 execution_context_id = 1;
  void clear_execution_context_id() ;
  ::uint32_t execution_context_id() const;
  void set_execution_context_id(::uint32_t value);

  private:
  ::uint32_t _internal_execution_context_id() const;
  void _internal_set_execution_context_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.QueryValueForVariableReply)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::sep::grpc::VariableValuePair > variable_value_;
    ::uint32_t execution_context_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};// -------------------------------------------------------------------

class GRPCExecutionContext final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sep.grpc.GRPCExecutionContext) */ {
 public:
  inline GRPCExecutionContext() : GRPCExecutionContext(nullptr) {}
  ~GRPCExecutionContext() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GRPCExecutionContext(::google::protobuf::internal::ConstantInitialized);

  inline GRPCExecutionContext(const GRPCExecutionContext& from)
      : GRPCExecutionContext(nullptr, from) {}
  GRPCExecutionContext(GRPCExecutionContext&& from) noexcept
    : GRPCExecutionContext() {
    *this = ::std::move(from);
  }

  inline GRPCExecutionContext& operator=(const GRPCExecutionContext& from) {
    CopyFrom(from);
    return *this;
  }
  inline GRPCExecutionContext& operator=(GRPCExecutionContext&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GRPCExecutionContext& default_instance() {
    return *internal_default_instance();
  }
  static inline const GRPCExecutionContext* internal_default_instance() {
    return reinterpret_cast<const GRPCExecutionContext*>(
               &_GRPCExecutionContext_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(GRPCExecutionContext& a, GRPCExecutionContext& b) {
    a.Swap(&b);
  }
  inline void Swap(GRPCExecutionContext* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GRPCExecutionContext* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GRPCExecutionContext* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GRPCExecutionContext>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GRPCExecutionContext& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GRPCExecutionContext& from) {
    GRPCExecutionContext::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GRPCExecutionContext* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sep.grpc.GRPCExecutionContext";
  }
  protected:
  explicit GRPCExecutionContext(::google::protobuf::Arena* arena);
  GRPCExecutionContext(::google::protobuf::Arena* arena, const GRPCExecutionContext& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVariableValueFieldNumber = 3,
    kChildrenFieldNumber = 6,
    kRuntimeStatusFieldNumber = 2,
    kTraceIoFieldNumber = 4,
    kTraceExecutableFieldNumber = 5,
    kExecutionContextIdFieldNumber = 1,
    kIsEvalFieldNumber = 7,
  };
  // repeated .sep.grpc.VariableValuePair variable_value = 3;
  int variable_value_size() const;
  private:
  int _internal_variable_value_size() const;

  public:
  void clear_variable_value() ;
  ::sep::grpc::VariableValuePair* mutable_variable_value(int index);
  ::google::protobuf::RepeatedPtrField< ::sep::grpc::VariableValuePair >*
      mutable_variable_value();
  private:
  const ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>& _internal_variable_value() const;
  ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>* _internal_mutable_variable_value();
  public:
  const ::sep::grpc::VariableValuePair& variable_value(int index) const;
  ::sep::grpc::VariableValuePair* add_variable_value();
  const ::google::protobuf::RepeatedPtrField< ::sep::grpc::VariableValuePair >&
      variable_value() const;
  // repeated uint32 children = 6;
  int children_size() const;
  private:
  int _internal_children_size() const;

  public:
  void clear_children() ;
  ::uint32_t children(int index) const;
  void set_children(int index, ::uint32_t value);
  void add_children(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& children() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_children();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_children() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_children();

  public:
  // .sep.grpc.RuntimeStatusTree runtime_status = 2;
  bool has_runtime_status() const;
  void clear_runtime_status() ;
  const ::sep::grpc::RuntimeStatusTree& runtime_status() const;
  PROTOBUF_NODISCARD ::sep::grpc::RuntimeStatusTree* release_runtime_status();
  ::sep::grpc::RuntimeStatusTree* mutable_runtime_status();
  void set_allocated_runtime_status(::sep::grpc::RuntimeStatusTree* value);
  void unsafe_arena_set_allocated_runtime_status(::sep::grpc::RuntimeStatusTree* value);
  ::sep::grpc::RuntimeStatusTree* unsafe_arena_release_runtime_status();

  private:
  const ::sep::grpc::RuntimeStatusTree& _internal_runtime_status() const;
  ::sep::grpc::RuntimeStatusTree* _internal_mutable_runtime_status();

  public:
  // .sep.grpc.Expression trace_io = 4;
  bool has_trace_io() const;
  void clear_trace_io() ;
  const ::sep::grpc::Expression& trace_io() const;
  PROTOBUF_NODISCARD ::sep::grpc::Expression* release_trace_io();
  ::sep::grpc::Expression* mutable_trace_io();
  void set_allocated_trace_io(::sep::grpc::Expression* value);
  void unsafe_arena_set_allocated_trace_io(::sep::grpc::Expression* value);
  ::sep::grpc::Expression* unsafe_arena_release_trace_io();

  private:
  const ::sep::grpc::Expression& _internal_trace_io() const;
  ::sep::grpc::Expression* _internal_mutable_trace_io();

  public:
  // .sep.grpc.Expression trace_executable = 5;
  bool has_trace_executable() const;
  void clear_trace_executable() ;
  const ::sep::grpc::Expression& trace_executable() const;
  PROTOBUF_NODISCARD ::sep::grpc::Expression* release_trace_executable();
  ::sep::grpc::Expression* mutable_trace_executable();
  void set_allocated_trace_executable(::sep::grpc::Expression* value);
  void unsafe_arena_set_allocated_trace_executable(::sep::grpc::Expression* value);
  ::sep::grpc::Expression* unsafe_arena_release_trace_executable();

  private:
  const ::sep::grpc::Expression& _internal_trace_executable() const;
  ::sep::grpc::Expression* _internal_mutable_trace_executable();

  public:
  // uint32 execution_context_id = 1;
  void clear_execution_context_id() ;
  ::uint32_t execution_context_id() const;
  void set_execution_context_id(::uint32_t value);

  private:
  ::uint32_t _internal_execution_context_id() const;
  void _internal_set_execution_context_id(::uint32_t value);

  public:
  // bool is_eval = 7;
  void clear_is_eval() ;
  bool is_eval() const;
  void set_is_eval(bool value);

  private:
  bool _internal_is_eval() const;
  void _internal_set_is_eval(bool value);

  public:
  // @@protoc_insertion_point(class_scope:sep.grpc.GRPCExecutionContext)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 4,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::sep::grpc::VariableValuePair > variable_value_;
    ::google::protobuf::RepeatedField<::uint32_t> children_;
    mutable ::google::protobuf::internal::CachedSize _children_cached_byte_size_;
    ::sep::grpc::RuntimeStatusTree* runtime_status_;
    ::sep::grpc::Expression* trace_io_;
    ::sep::grpc::Expression* trace_executable_;
    ::uint32_t execution_context_id_;
    bool is_eval_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SymbexServices_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Expression

// bool raw_bool = 1;
inline bool Expression::has_raw_bool() const {
  return expression_alt_case() == kRawBool;
}
inline void Expression::set_has_raw_bool() {
  _impl_._oneof_case_[0] = kRawBool;
}
inline void Expression::clear_raw_bool() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (expression_alt_case() == kRawBool) {
    _impl_.expression_alt_.raw_bool_ = false;
    clear_has_expression_alt();
  }
}
inline bool Expression::raw_bool() const {
  // @@protoc_insertion_point(field_get:sep.grpc.Expression.raw_bool)
  return _internal_raw_bool();
}
inline void Expression::set_raw_bool(bool value) {
  _internal_set_raw_bool(value);
  // @@protoc_insertion_point(field_set:sep.grpc.Expression.raw_bool)
}
inline bool Expression::_internal_raw_bool() const {
  if (expression_alt_case() == kRawBool) {
    return _impl_.expression_alt_.raw_bool_;
  }
  return false;
}
inline void Expression::_internal_set_raw_bool(bool value) {
  if (expression_alt_case() != kRawBool) {
    clear_expression_alt();
    set_has_raw_bool();
  }
  _impl_.expression_alt_.raw_bool_ = value;
}

// int64 raw_integer = 2;
inline bool Expression::has_raw_integer() const {
  return expression_alt_case() == kRawInteger;
}
inline void Expression::set_has_raw_integer() {
  _impl_._oneof_case_[0] = kRawInteger;
}
inline void Expression::clear_raw_integer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (expression_alt_case() == kRawInteger) {
    _impl_.expression_alt_.raw_integer_ = ::int64_t{0};
    clear_has_expression_alt();
  }
}
inline ::int64_t Expression::raw_integer() const {
  // @@protoc_insertion_point(field_get:sep.grpc.Expression.raw_integer)
  return _internal_raw_integer();
}
inline void Expression::set_raw_integer(::int64_t value) {
  _internal_set_raw_integer(value);
  // @@protoc_insertion_point(field_set:sep.grpc.Expression.raw_integer)
}
inline ::int64_t Expression::_internal_raw_integer() const {
  if (expression_alt_case() == kRawInteger) {
    return _impl_.expression_alt_.raw_integer_;
  }
  return ::int64_t{0};
}
inline void Expression::_internal_set_raw_integer(::int64_t value) {
  if (expression_alt_case() != kRawInteger) {
    clear_expression_alt();
    set_has_raw_integer();
  }
  _impl_.expression_alt_.raw_integer_ = value;
}

// double raw_float = 3;
inline bool Expression::has_raw_float() const {
  return expression_alt_case() == kRawFloat;
}
inline void Expression::set_has_raw_float() {
  _impl_._oneof_case_[0] = kRawFloat;
}
inline void Expression::clear_raw_float() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (expression_alt_case() == kRawFloat) {
    _impl_.expression_alt_.raw_float_ = 0;
    clear_has_expression_alt();
  }
}
inline double Expression::raw_float() const {
  // @@protoc_insertion_point(field_get:sep.grpc.Expression.raw_float)
  return _internal_raw_float();
}
inline void Expression::set_raw_float(double value) {
  _internal_set_raw_float(value);
  // @@protoc_insertion_point(field_set:sep.grpc.Expression.raw_float)
}
inline double Expression::_internal_raw_float() const {
  if (expression_alt_case() == kRawFloat) {
    return _impl_.expression_alt_.raw_float_;
  }
  return 0;
}
inline void Expression::_internal_set_raw_float(double value) {
  if (expression_alt_case() != kRawFloat) {
    clear_expression_alt();
    set_has_raw_float();
  }
  _impl_.expression_alt_.raw_float_ = value;
}

// string raw_string = 4;
inline bool Expression::has_raw_string() const {
  return expression_alt_case() == kRawString;
}
inline void Expression::set_has_raw_string() {
  _impl_._oneof_case_[0] = kRawString;
}
inline void Expression::clear_raw_string() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (expression_alt_case() == kRawString) {
    _impl_.expression_alt_.raw_string_.Destroy();
    clear_has_expression_alt();
  }
}
inline const std::string& Expression::raw_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.Expression.raw_string)
  return _internal_raw_string();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Expression::set_raw_string(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (expression_alt_case() != kRawString) {
    clear_expression_alt();

    set_has_raw_string();
    _impl_.expression_alt_.raw_string_.InitDefault();
  }
  _impl_.expression_alt_.raw_string_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:sep.grpc.Expression.raw_string)
}
inline std::string* Expression::mutable_raw_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_raw_string();
  // @@protoc_insertion_point(field_mutable:sep.grpc.Expression.raw_string)
  return _s;
}
inline const std::string& Expression::_internal_raw_string() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (expression_alt_case() != kRawString) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.expression_alt_.raw_string_.Get();
}
inline void Expression::_internal_set_raw_string(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (expression_alt_case() != kRawString) {
    clear_expression_alt();

    set_has_raw_string();
    _impl_.expression_alt_.raw_string_.InitDefault();
  }
  _impl_.expression_alt_.raw_string_.Set(value, GetArena());
}
inline std::string* Expression::_internal_mutable_raw_string() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (expression_alt_case() != kRawString) {
    clear_expression_alt();

    set_has_raw_string();
    _impl_.expression_alt_.raw_string_.InitDefault();
  }
  return _impl_.expression_alt_.raw_string_.Mutable( GetArena());
}
inline std::string* Expression::release_raw_string() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.Expression.raw_string)
  if (expression_alt_case() != kRawString) {
    return nullptr;
  }
  clear_has_expression_alt();
  return _impl_.expression_alt_.raw_string_.Release();
}
inline void Expression::set_allocated_raw_string(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_expression_alt()) {
    clear_expression_alt();
  }
  if (value != nullptr) {
    set_has_raw_string();
    _impl_.expression_alt_.raw_string_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.Expression.raw_string)
}

// .sep.grpc.Symbol symbol = 5;
inline bool Expression::has_symbol() const {
  return expression_alt_case() == kSymbol;
}
inline bool Expression::_internal_has_symbol() const {
  return expression_alt_case() == kSymbol;
}
inline void Expression::set_has_symbol() {
  _impl_._oneof_case_[0] = kSymbol;
}
inline void Expression::clear_symbol() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (expression_alt_case() == kSymbol) {
    if (GetArena() == nullptr) {
      delete _impl_.expression_alt_.symbol_;
    }
    clear_has_expression_alt();
  }
}
inline ::sep::grpc::Symbol* Expression::release_symbol() {
  // @@protoc_insertion_point(field_release:sep.grpc.Expression.symbol)
  if (expression_alt_case() == kSymbol) {
    clear_has_expression_alt();
    auto* temp = _impl_.expression_alt_.symbol_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.expression_alt_.symbol_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::sep::grpc::Symbol& Expression::_internal_symbol() const {
  return expression_alt_case() == kSymbol ? *_impl_.expression_alt_.symbol_ : reinterpret_cast<::sep::grpc::Symbol&>(::sep::grpc::_Symbol_default_instance_);
}
inline const ::sep::grpc::Symbol& Expression::symbol() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.Expression.symbol)
  return _internal_symbol();
}
inline ::sep::grpc::Symbol* Expression::unsafe_arena_release_symbol() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sep.grpc.Expression.symbol)
  if (expression_alt_case() == kSymbol) {
    clear_has_expression_alt();
    auto* temp = _impl_.expression_alt_.symbol_;
    _impl_.expression_alt_.symbol_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Expression::unsafe_arena_set_allocated_symbol(::sep::grpc::Symbol* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_expression_alt();
  if (value) {
    set_has_symbol();
    _impl_.expression_alt_.symbol_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sep.grpc.Expression.symbol)
}
inline ::sep::grpc::Symbol* Expression::_internal_mutable_symbol() {
  if (expression_alt_case() != kSymbol) {
    clear_expression_alt();
    set_has_symbol();
    _impl_.expression_alt_.symbol_ = CreateMaybeMessage<::sep::grpc::Symbol>(GetArena());
  }
  return _impl_.expression_alt_.symbol_;
}
inline ::sep::grpc::Symbol* Expression::mutable_symbol() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sep::grpc::Symbol* _msg = _internal_mutable_symbol();
  // @@protoc_insertion_point(field_mutable:sep.grpc.Expression.symbol)
  return _msg;
}

// .sep.grpc.Operation operation = 6;
inline bool Expression::has_operation() const {
  return expression_alt_case() == kOperation;
}
inline bool Expression::_internal_has_operation() const {
  return expression_alt_case() == kOperation;
}
inline void Expression::set_has_operation() {
  _impl_._oneof_case_[0] = kOperation;
}
inline void Expression::clear_operation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (expression_alt_case() == kOperation) {
    if (GetArena() == nullptr) {
      delete _impl_.expression_alt_.operation_;
    }
    clear_has_expression_alt();
  }
}
inline ::sep::grpc::Operation* Expression::release_operation() {
  // @@protoc_insertion_point(field_release:sep.grpc.Expression.operation)
  if (expression_alt_case() == kOperation) {
    clear_has_expression_alt();
    auto* temp = _impl_.expression_alt_.operation_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.expression_alt_.operation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::sep::grpc::Operation& Expression::_internal_operation() const {
  return expression_alt_case() == kOperation ? *_impl_.expression_alt_.operation_ : reinterpret_cast<::sep::grpc::Operation&>(::sep::grpc::_Operation_default_instance_);
}
inline const ::sep::grpc::Operation& Expression::operation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.Expression.operation)
  return _internal_operation();
}
inline ::sep::grpc::Operation* Expression::unsafe_arena_release_operation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sep.grpc.Expression.operation)
  if (expression_alt_case() == kOperation) {
    clear_has_expression_alt();
    auto* temp = _impl_.expression_alt_.operation_;
    _impl_.expression_alt_.operation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Expression::unsafe_arena_set_allocated_operation(::sep::grpc::Operation* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_expression_alt();
  if (value) {
    set_has_operation();
    _impl_.expression_alt_.operation_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sep.grpc.Expression.operation)
}
inline ::sep::grpc::Operation* Expression::_internal_mutable_operation() {
  if (expression_alt_case() != kOperation) {
    clear_expression_alt();
    set_has_operation();
    _impl_.expression_alt_.operation_ = CreateMaybeMessage<::sep::grpc::Operation>(GetArena());
  }
  return _impl_.expression_alt_.operation_;
}
inline ::sep::grpc::Operation* Expression::mutable_operation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sep::grpc::Operation* _msg = _internal_mutable_operation();
  // @@protoc_insertion_point(field_mutable:sep.grpc.Expression.operation)
  return _msg;
}

inline bool Expression::has_expression_alt() const {
  return expression_alt_case() != EXPRESSION_ALT_NOT_SET;
}
inline void Expression::clear_has_expression_alt() {
  _impl_._oneof_case_[0] = EXPRESSION_ALT_NOT_SET;
}
inline Expression::ExpressionAltCase Expression::expression_alt_case() const {
  return Expression::ExpressionAltCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// Symbol

// .sep.grpc.SymbolKind kind = 1;
inline void Symbol::clear_kind() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.kind_ = 0;
}
inline ::sep::grpc::SymbolKind Symbol::kind() const {
  // @@protoc_insertion_point(field_get:sep.grpc.Symbol.kind)
  return _internal_kind();
}
inline void Symbol::set_kind(::sep::grpc::SymbolKind value) {
  _internal_set_kind(value);
  // @@protoc_insertion_point(field_set:sep.grpc.Symbol.kind)
}
inline ::sep::grpc::SymbolKind Symbol::_internal_kind() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::sep::grpc::SymbolKind>(_impl_.kind_);
}
inline void Symbol::_internal_set_kind(::sep::grpc::SymbolKind value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.kind_ = value;
}

// string id = 2;
inline void Symbol::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Symbol::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.Symbol.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Symbol::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:sep.grpc.Symbol.id)
}
inline std::string* Symbol::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:sep.grpc.Symbol.id)
  return _s;
}
inline const std::string& Symbol::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void Symbol::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArena());
}
inline std::string* Symbol::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* Symbol::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.Symbol.id)
  return _impl_.id_.Release();
}
inline void Symbol::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.Symbol.id)
}

// -------------------------------------------------------------------

// Operation

// .sep.grpc.OperatorKind operatorKind = 1;
inline void Operation::clear_operatorkind() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.operatorkind_ = 0;
}
inline ::sep::grpc::OperatorKind Operation::operatorkind() const {
  // @@protoc_insertion_point(field_get:sep.grpc.Operation.operatorKind)
  return _internal_operatorkind();
}
inline void Operation::set_operatorkind(::sep::grpc::OperatorKind value) {
  _internal_set_operatorkind(value);
  // @@protoc_insertion_point(field_set:sep.grpc.Operation.operatorKind)
}
inline ::sep::grpc::OperatorKind Operation::_internal_operatorkind() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::sep::grpc::OperatorKind>(_impl_.operatorkind_);
}
inline void Operation::_internal_set_operatorkind(::sep::grpc::OperatorKind value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.operatorkind_ = value;
}

// repeated .sep.grpc.Expression operand = 2;
inline int Operation::_internal_operand_size() const {
  return _internal_operand().size();
}
inline int Operation::operand_size() const {
  return _internal_operand_size();
}
inline void Operation::clear_operand() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.operand_.Clear();
}
inline ::sep::grpc::Expression* Operation::mutable_operand(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sep.grpc.Operation.operand)
  return _internal_mutable_operand()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sep::grpc::Expression>* Operation::mutable_operand()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sep.grpc.Operation.operand)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_operand();
}
inline const ::sep::grpc::Expression& Operation::operand(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.Operation.operand)
  return _internal_operand().Get(index);
}
inline ::sep::grpc::Expression* Operation::add_operand() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sep::grpc::Expression* _add = _internal_mutable_operand()->Add();
  // @@protoc_insertion_point(field_add:sep.grpc.Operation.operand)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sep::grpc::Expression>& Operation::operand() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sep.grpc.Operation.operand)
  return _internal_operand();
}
inline const ::google::protobuf::RepeatedPtrField<::sep::grpc::Expression>&
Operation::_internal_operand() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.operand_;
}
inline ::google::protobuf::RepeatedPtrField<::sep::grpc::Expression>*
Operation::_internal_mutable_operand() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.operand_;
}

// -------------------------------------------------------------------

// VariableValuePair

// string variable_id = 1;
inline void VariableValuePair::clear_variable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.variable_id_.ClearToEmpty();
}
inline const std::string& VariableValuePair::variable_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.VariableValuePair.variable_id)
  return _internal_variable_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VariableValuePair::set_variable_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.variable_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:sep.grpc.VariableValuePair.variable_id)
}
inline std::string* VariableValuePair::mutable_variable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_variable_id();
  // @@protoc_insertion_point(field_mutable:sep.grpc.VariableValuePair.variable_id)
  return _s;
}
inline const std::string& VariableValuePair::_internal_variable_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.variable_id_.Get();
}
inline void VariableValuePair::_internal_set_variable_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.variable_id_.Set(value, GetArena());
}
inline std::string* VariableValuePair::_internal_mutable_variable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.variable_id_.Mutable( GetArena());
}
inline std::string* VariableValuePair::release_variable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.VariableValuePair.variable_id)
  return _impl_.variable_id_.Release();
}
inline void VariableValuePair::set_allocated_variable_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.variable_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.variable_id_.IsDefault()) {
          _impl_.variable_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.VariableValuePair.variable_id)
}

// .sep.grpc.Expression value = 2;
inline bool VariableValuePair::has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.value_ != nullptr);
  return value;
}
inline void VariableValuePair::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.value_ != nullptr) _impl_.value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::sep::grpc::Expression& VariableValuePair::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sep::grpc::Expression* p = _impl_.value_;
  return p != nullptr ? *p : reinterpret_cast<const ::sep::grpc::Expression&>(::sep::grpc::_Expression_default_instance_);
}
inline const ::sep::grpc::Expression& VariableValuePair::value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.VariableValuePair.value)
  return _internal_value();
}
inline void VariableValuePair::unsafe_arena_set_allocated_value(::sep::grpc::Expression* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.value_);
  }
  _impl_.value_ = reinterpret_cast<::sep::grpc::Expression*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sep.grpc.VariableValuePair.value)
}
inline ::sep::grpc::Expression* VariableValuePair::release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sep::grpc::Expression* released = _impl_.value_;
  _impl_.value_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sep::grpc::Expression* VariableValuePair::unsafe_arena_release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.VariableValuePair.value)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sep::grpc::Expression* temp = _impl_.value_;
  _impl_.value_ = nullptr;
  return temp;
}
inline ::sep::grpc::Expression* VariableValuePair::_internal_mutable_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.value_ == nullptr) {
    auto* p = CreateMaybeMessage<::sep::grpc::Expression>(GetArena());
    _impl_.value_ = reinterpret_cast<::sep::grpc::Expression*>(p);
  }
  return _impl_.value_;
}
inline ::sep::grpc::Expression* VariableValuePair::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sep::grpc::Expression* _msg = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:sep.grpc.VariableValuePair.value)
  return _msg;
}
inline void VariableValuePair::set_allocated_value(::sep::grpc::Expression* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sep::grpc::Expression*>(_impl_.value_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sep::grpc::Expression*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.value_ = reinterpret_cast<::sep::grpc::Expression*>(value);
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.VariableValuePair.value)
}

// -------------------------------------------------------------------

// TypedSymbol

// string symbol_id = 1;
inline void TypedSymbol::clear_symbol_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.symbol_id_.ClearToEmpty();
}
inline const std::string& TypedSymbol::symbol_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.TypedSymbol.symbol_id)
  return _internal_symbol_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TypedSymbol::set_symbol_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.symbol_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:sep.grpc.TypedSymbol.symbol_id)
}
inline std::string* TypedSymbol::mutable_symbol_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_symbol_id();
  // @@protoc_insertion_point(field_mutable:sep.grpc.TypedSymbol.symbol_id)
  return _s;
}
inline const std::string& TypedSymbol::_internal_symbol_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.symbol_id_.Get();
}
inline void TypedSymbol::_internal_set_symbol_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.symbol_id_.Set(value, GetArena());
}
inline std::string* TypedSymbol::_internal_mutable_symbol_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.symbol_id_.Mutable( GetArena());
}
inline std::string* TypedSymbol::release_symbol_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.TypedSymbol.symbol_id)
  return _impl_.symbol_id_.Release();
}
inline void TypedSymbol::set_allocated_symbol_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.symbol_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.symbol_id_.IsDefault()) {
          _impl_.symbol_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.TypedSymbol.symbol_id)
}

// .sep.grpc.DataType type = 2;
inline void TypedSymbol::clear_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_ = 0;
}
inline ::sep::grpc::DataType TypedSymbol::type() const {
  // @@protoc_insertion_point(field_get:sep.grpc.TypedSymbol.type)
  return _internal_type();
}
inline void TypedSymbol::set_type(::sep::grpc::DataType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:sep.grpc.TypedSymbol.type)
}
inline ::sep::grpc::DataType TypedSymbol::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::sep::grpc::DataType>(_impl_.type_);
}
inline void TypedSymbol::_internal_set_type(::sep::grpc::DataType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// -------------------------------------------------------------------

// InitializationRequest

// string session_id = 1;
inline void InitializationRequest::clear_session_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.session_id_.ClearToEmpty();
}
inline const std::string& InitializationRequest::session_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.InitializationRequest.session_id)
  return _internal_session_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InitializationRequest::set_session_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.session_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:sep.grpc.InitializationRequest.session_id)
}
inline std::string* InitializationRequest::mutable_session_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_session_id();
  // @@protoc_insertion_point(field_mutable:sep.grpc.InitializationRequest.session_id)
  return _s;
}
inline const std::string& InitializationRequest::_internal_session_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.session_id_.Get();
}
inline void InitializationRequest::_internal_set_session_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.session_id_.Set(value, GetArena());
}
inline std::string* InitializationRequest::_internal_mutable_session_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.session_id_.Mutable( GetArena());
}
inline std::string* InitializationRequest::release_session_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.InitializationRequest.session_id)
  return _impl_.session_id_.Release();
}
inline void InitializationRequest::set_allocated_session_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.session_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.session_id_.IsDefault()) {
          _impl_.session_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.InitializationRequest.session_id)
}

// -------------------------------------------------------------------

// InitializationReply

// string message = 1;
inline void InitializationReply::clear_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& InitializationReply::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.InitializationReply.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InitializationReply::set_message(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:sep.grpc.InitializationReply.message)
}
inline std::string* InitializationReply::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:sep.grpc.InitializationReply.message)
  return _s;
}
inline const std::string& InitializationReply::_internal_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.message_.Get();
}
inline void InitializationReply::_internal_set_message(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(value, GetArena());
}
inline std::string* InitializationReply::_internal_mutable_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* InitializationReply::release_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.InitializationReply.message)
  return _impl_.message_.Release();
}
inline void InitializationReply::set_allocated_message(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.InitializationReply.message)
}

// -------------------------------------------------------------------

// ModelDefinitionRequest

// string model_file_path = 1;
inline bool ModelDefinitionRequest::has_model_file_path() const {
  return model_alt_case() == kModelFilePath;
}
inline void ModelDefinitionRequest::set_has_model_file_path() {
  _impl_._oneof_case_[0] = kModelFilePath;
}
inline void ModelDefinitionRequest::clear_model_file_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (model_alt_case() == kModelFilePath) {
    _impl_.model_alt_.model_file_path_.Destroy();
    clear_has_model_alt();
  }
}
inline const std::string& ModelDefinitionRequest::model_file_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.ModelDefinitionRequest.model_file_path)
  return _internal_model_file_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ModelDefinitionRequest::set_model_file_path(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (model_alt_case() != kModelFilePath) {
    clear_model_alt();

    set_has_model_file_path();
    _impl_.model_alt_.model_file_path_.InitDefault();
  }
  _impl_.model_alt_.model_file_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:sep.grpc.ModelDefinitionRequest.model_file_path)
}
inline std::string* ModelDefinitionRequest::mutable_model_file_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_model_file_path();
  // @@protoc_insertion_point(field_mutable:sep.grpc.ModelDefinitionRequest.model_file_path)
  return _s;
}
inline const std::string& ModelDefinitionRequest::_internal_model_file_path() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (model_alt_case() != kModelFilePath) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.model_alt_.model_file_path_.Get();
}
inline void ModelDefinitionRequest::_internal_set_model_file_path(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (model_alt_case() != kModelFilePath) {
    clear_model_alt();

    set_has_model_file_path();
    _impl_.model_alt_.model_file_path_.InitDefault();
  }
  _impl_.model_alt_.model_file_path_.Set(value, GetArena());
}
inline std::string* ModelDefinitionRequest::_internal_mutable_model_file_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (model_alt_case() != kModelFilePath) {
    clear_model_alt();

    set_has_model_file_path();
    _impl_.model_alt_.model_file_path_.InitDefault();
  }
  return _impl_.model_alt_.model_file_path_.Mutable( GetArena());
}
inline std::string* ModelDefinitionRequest::release_model_file_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.ModelDefinitionRequest.model_file_path)
  if (model_alt_case() != kModelFilePath) {
    return nullptr;
  }
  clear_has_model_alt();
  return _impl_.model_alt_.model_file_path_.Release();
}
inline void ModelDefinitionRequest::set_allocated_model_file_path(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_model_alt()) {
    clear_model_alt();
  }
  if (value != nullptr) {
    set_has_model_file_path();
    _impl_.model_alt_.model_file_path_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.ModelDefinitionRequest.model_file_path)
}

// string model_raw_text = 2;
inline bool ModelDefinitionRequest::has_model_raw_text() const {
  return model_alt_case() == kModelRawText;
}
inline void ModelDefinitionRequest::set_has_model_raw_text() {
  _impl_._oneof_case_[0] = kModelRawText;
}
inline void ModelDefinitionRequest::clear_model_raw_text() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (model_alt_case() == kModelRawText) {
    _impl_.model_alt_.model_raw_text_.Destroy();
    clear_has_model_alt();
  }
}
inline const std::string& ModelDefinitionRequest::model_raw_text() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.ModelDefinitionRequest.model_raw_text)
  return _internal_model_raw_text();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ModelDefinitionRequest::set_model_raw_text(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (model_alt_case() != kModelRawText) {
    clear_model_alt();

    set_has_model_raw_text();
    _impl_.model_alt_.model_raw_text_.InitDefault();
  }
  _impl_.model_alt_.model_raw_text_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:sep.grpc.ModelDefinitionRequest.model_raw_text)
}
inline std::string* ModelDefinitionRequest::mutable_model_raw_text() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_model_raw_text();
  // @@protoc_insertion_point(field_mutable:sep.grpc.ModelDefinitionRequest.model_raw_text)
  return _s;
}
inline const std::string& ModelDefinitionRequest::_internal_model_raw_text() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (model_alt_case() != kModelRawText) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.model_alt_.model_raw_text_.Get();
}
inline void ModelDefinitionRequest::_internal_set_model_raw_text(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (model_alt_case() != kModelRawText) {
    clear_model_alt();

    set_has_model_raw_text();
    _impl_.model_alt_.model_raw_text_.InitDefault();
  }
  _impl_.model_alt_.model_raw_text_.Set(value, GetArena());
}
inline std::string* ModelDefinitionRequest::_internal_mutable_model_raw_text() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (model_alt_case() != kModelRawText) {
    clear_model_alt();

    set_has_model_raw_text();
    _impl_.model_alt_.model_raw_text_.InitDefault();
  }
  return _impl_.model_alt_.model_raw_text_.Mutable( GetArena());
}
inline std::string* ModelDefinitionRequest::release_model_raw_text() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.ModelDefinitionRequest.model_raw_text)
  if (model_alt_case() != kModelRawText) {
    return nullptr;
  }
  clear_has_model_alt();
  return _impl_.model_alt_.model_raw_text_.Release();
}
inline void ModelDefinitionRequest::set_allocated_model_raw_text(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_model_alt()) {
    clear_model_alt();
  }
  if (value != nullptr) {
    set_has_model_raw_text();
    _impl_.model_alt_.model_raw_text_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.ModelDefinitionRequest.model_raw_text)
}

// string workflow_file_path = 3;
inline bool ModelDefinitionRequest::has_workflow_file_path() const {
  return workflow_alt_case() == kWorkflowFilePath;
}
inline void ModelDefinitionRequest::set_has_workflow_file_path() {
  _impl_._oneof_case_[1] = kWorkflowFilePath;
}
inline void ModelDefinitionRequest::clear_workflow_file_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (workflow_alt_case() == kWorkflowFilePath) {
    _impl_.workflow_alt_.workflow_file_path_.Destroy();
    clear_has_workflow_alt();
  }
}
inline const std::string& ModelDefinitionRequest::workflow_file_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.ModelDefinitionRequest.workflow_file_path)
  return _internal_workflow_file_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ModelDefinitionRequest::set_workflow_file_path(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (workflow_alt_case() != kWorkflowFilePath) {
    clear_workflow_alt();

    set_has_workflow_file_path();
    _impl_.workflow_alt_.workflow_file_path_.InitDefault();
  }
  _impl_.workflow_alt_.workflow_file_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:sep.grpc.ModelDefinitionRequest.workflow_file_path)
}
inline std::string* ModelDefinitionRequest::mutable_workflow_file_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_workflow_file_path();
  // @@protoc_insertion_point(field_mutable:sep.grpc.ModelDefinitionRequest.workflow_file_path)
  return _s;
}
inline const std::string& ModelDefinitionRequest::_internal_workflow_file_path() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (workflow_alt_case() != kWorkflowFilePath) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.workflow_alt_.workflow_file_path_.Get();
}
inline void ModelDefinitionRequest::_internal_set_workflow_file_path(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (workflow_alt_case() != kWorkflowFilePath) {
    clear_workflow_alt();

    set_has_workflow_file_path();
    _impl_.workflow_alt_.workflow_file_path_.InitDefault();
  }
  _impl_.workflow_alt_.workflow_file_path_.Set(value, GetArena());
}
inline std::string* ModelDefinitionRequest::_internal_mutable_workflow_file_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (workflow_alt_case() != kWorkflowFilePath) {
    clear_workflow_alt();

    set_has_workflow_file_path();
    _impl_.workflow_alt_.workflow_file_path_.InitDefault();
  }
  return _impl_.workflow_alt_.workflow_file_path_.Mutable( GetArena());
}
inline std::string* ModelDefinitionRequest::release_workflow_file_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.ModelDefinitionRequest.workflow_file_path)
  if (workflow_alt_case() != kWorkflowFilePath) {
    return nullptr;
  }
  clear_has_workflow_alt();
  return _impl_.workflow_alt_.workflow_file_path_.Release();
}
inline void ModelDefinitionRequest::set_allocated_workflow_file_path(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_workflow_alt()) {
    clear_workflow_alt();
  }
  if (value != nullptr) {
    set_has_workflow_file_path();
    _impl_.workflow_alt_.workflow_file_path_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.ModelDefinitionRequest.workflow_file_path)
}

// string workflow_raw_text = 4;
inline bool ModelDefinitionRequest::has_workflow_raw_text() const {
  return workflow_alt_case() == kWorkflowRawText;
}
inline void ModelDefinitionRequest::set_has_workflow_raw_text() {
  _impl_._oneof_case_[1] = kWorkflowRawText;
}
inline void ModelDefinitionRequest::clear_workflow_raw_text() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (workflow_alt_case() == kWorkflowRawText) {
    _impl_.workflow_alt_.workflow_raw_text_.Destroy();
    clear_has_workflow_alt();
  }
}
inline const std::string& ModelDefinitionRequest::workflow_raw_text() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.ModelDefinitionRequest.workflow_raw_text)
  return _internal_workflow_raw_text();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ModelDefinitionRequest::set_workflow_raw_text(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (workflow_alt_case() != kWorkflowRawText) {
    clear_workflow_alt();

    set_has_workflow_raw_text();
    _impl_.workflow_alt_.workflow_raw_text_.InitDefault();
  }
  _impl_.workflow_alt_.workflow_raw_text_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:sep.grpc.ModelDefinitionRequest.workflow_raw_text)
}
inline std::string* ModelDefinitionRequest::mutable_workflow_raw_text() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_workflow_raw_text();
  // @@protoc_insertion_point(field_mutable:sep.grpc.ModelDefinitionRequest.workflow_raw_text)
  return _s;
}
inline const std::string& ModelDefinitionRequest::_internal_workflow_raw_text() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (workflow_alt_case() != kWorkflowRawText) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.workflow_alt_.workflow_raw_text_.Get();
}
inline void ModelDefinitionRequest::_internal_set_workflow_raw_text(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (workflow_alt_case() != kWorkflowRawText) {
    clear_workflow_alt();

    set_has_workflow_raw_text();
    _impl_.workflow_alt_.workflow_raw_text_.InitDefault();
  }
  _impl_.workflow_alt_.workflow_raw_text_.Set(value, GetArena());
}
inline std::string* ModelDefinitionRequest::_internal_mutable_workflow_raw_text() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (workflow_alt_case() != kWorkflowRawText) {
    clear_workflow_alt();

    set_has_workflow_raw_text();
    _impl_.workflow_alt_.workflow_raw_text_.InitDefault();
  }
  return _impl_.workflow_alt_.workflow_raw_text_.Mutable( GetArena());
}
inline std::string* ModelDefinitionRequest::release_workflow_raw_text() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.ModelDefinitionRequest.workflow_raw_text)
  if (workflow_alt_case() != kWorkflowRawText) {
    return nullptr;
  }
  clear_has_workflow_alt();
  return _impl_.workflow_alt_.workflow_raw_text_.Release();
}
inline void ModelDefinitionRequest::set_allocated_workflow_raw_text(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_workflow_alt()) {
    clear_workflow_alt();
  }
  if (value != nullptr) {
    set_has_workflow_raw_text();
    _impl_.workflow_alt_.workflow_raw_text_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.ModelDefinitionRequest.workflow_raw_text)
}

inline bool ModelDefinitionRequest::has_model_alt() const {
  return model_alt_case() != MODEL_ALT_NOT_SET;
}
inline void ModelDefinitionRequest::clear_has_model_alt() {
  _impl_._oneof_case_[0] = MODEL_ALT_NOT_SET;
}
inline bool ModelDefinitionRequest::has_workflow_alt() const {
  return workflow_alt_case() != WORKFLOW_ALT_NOT_SET;
}
inline void ModelDefinitionRequest::clear_has_workflow_alt() {
  _impl_._oneof_case_[1] = WORKFLOW_ALT_NOT_SET;
}
inline ModelDefinitionRequest::ModelAltCase ModelDefinitionRequest::model_alt_case() const {
  return ModelDefinitionRequest::ModelAltCase(_impl_._oneof_case_[0]);
}
inline ModelDefinitionRequest::WorkflowAltCase ModelDefinitionRequest::workflow_alt_case() const {
  return ModelDefinitionRequest::WorkflowAltCase(_impl_._oneof_case_[1]);
}
// -------------------------------------------------------------------

// ModelParseReply

// uint32 error_count = 1;
inline void ModelParseReply::clear_error_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_count_ = 0u;
}
inline ::uint32_t ModelParseReply::error_count() const {
  // @@protoc_insertion_point(field_get:sep.grpc.ModelParseReply.error_count)
  return _internal_error_count();
}
inline void ModelParseReply::set_error_count(::uint32_t value) {
  _internal_set_error_count(value);
  // @@protoc_insertion_point(field_set:sep.grpc.ModelParseReply.error_count)
}
inline ::uint32_t ModelParseReply::_internal_error_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_count_;
}
inline void ModelParseReply::_internal_set_error_count(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.error_count_ = value;
}

// uint32 warning_count = 2;
inline void ModelParseReply::clear_warning_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.warning_count_ = 0u;
}
inline ::uint32_t ModelParseReply::warning_count() const {
  // @@protoc_insertion_point(field_get:sep.grpc.ModelParseReply.warning_count)
  return _internal_warning_count();
}
inline void ModelParseReply::set_warning_count(::uint32_t value) {
  _internal_set_warning_count(value);
  // @@protoc_insertion_point(field_set:sep.grpc.ModelParseReply.warning_count)
}
inline ::uint32_t ModelParseReply::_internal_warning_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.warning_count_;
}
inline void ModelParseReply::_internal_set_warning_count(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.warning_count_ = value;
}

// repeated string error = 3;
inline int ModelParseReply::_internal_error_size() const {
  return _internal_error().size();
}
inline int ModelParseReply::error_size() const {
  return _internal_error_size();
}
inline void ModelParseReply::clear_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_.Clear();
}
inline std::string* ModelParseReply::add_error()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_error()->Add();
  // @@protoc_insertion_point(field_add_mutable:sep.grpc.ModelParseReply.error)
  return _s;
}
inline const std::string& ModelParseReply::error(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.ModelParseReply.error)
  return _internal_error().Get(index);
}
inline std::string* ModelParseReply::mutable_error(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sep.grpc.ModelParseReply.error)
  return _internal_mutable_error()->Mutable(index);
}
inline void ModelParseReply::set_error(int index, const std::string& value) {
  _internal_mutable_error()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:sep.grpc.ModelParseReply.error)
}
inline void ModelParseReply::set_error(int index, std::string&& value) {
  _internal_mutable_error()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:sep.grpc.ModelParseReply.error)
}
inline void ModelParseReply::set_error(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_error()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:sep.grpc.ModelParseReply.error)
}
inline void ModelParseReply::set_error(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_error()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:sep.grpc.ModelParseReply.error)
}
inline void ModelParseReply::set_error(int index, absl::string_view value) {
  _internal_mutable_error()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:sep.grpc.ModelParseReply.error)
}
inline void ModelParseReply::add_error(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_error()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:sep.grpc.ModelParseReply.error)
}
inline void ModelParseReply::add_error(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_error()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:sep.grpc.ModelParseReply.error)
}
inline void ModelParseReply::add_error(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_error()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:sep.grpc.ModelParseReply.error)
}
inline void ModelParseReply::add_error(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_error()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:sep.grpc.ModelParseReply.error)
}
inline void ModelParseReply::add_error(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_error()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:sep.grpc.ModelParseReply.error)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ModelParseReply::error() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sep.grpc.ModelParseReply.error)
  return _internal_error();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ModelParseReply::mutable_error() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sep.grpc.ModelParseReply.error)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_error();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ModelParseReply::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ModelParseReply::_internal_mutable_error() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.error_;
}

// -------------------------------------------------------------------

// ModelEvalReply

// .sep.grpc.ModelParseReply parse_reply = 1;
inline bool ModelEvalReply::has_parse_reply() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.parse_reply_ != nullptr);
  return value;
}
inline void ModelEvalReply::clear_parse_reply() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.parse_reply_ != nullptr) _impl_.parse_reply_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::sep::grpc::ModelParseReply& ModelEvalReply::_internal_parse_reply() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sep::grpc::ModelParseReply* p = _impl_.parse_reply_;
  return p != nullptr ? *p : reinterpret_cast<const ::sep::grpc::ModelParseReply&>(::sep::grpc::_ModelParseReply_default_instance_);
}
inline const ::sep::grpc::ModelParseReply& ModelEvalReply::parse_reply() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.ModelEvalReply.parse_reply)
  return _internal_parse_reply();
}
inline void ModelEvalReply::unsafe_arena_set_allocated_parse_reply(::sep::grpc::ModelParseReply* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.parse_reply_);
  }
  _impl_.parse_reply_ = reinterpret_cast<::sep::grpc::ModelParseReply*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sep.grpc.ModelEvalReply.parse_reply)
}
inline ::sep::grpc::ModelParseReply* ModelEvalReply::release_parse_reply() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sep::grpc::ModelParseReply* released = _impl_.parse_reply_;
  _impl_.parse_reply_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sep::grpc::ModelParseReply* ModelEvalReply::unsafe_arena_release_parse_reply() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.ModelEvalReply.parse_reply)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sep::grpc::ModelParseReply* temp = _impl_.parse_reply_;
  _impl_.parse_reply_ = nullptr;
  return temp;
}
inline ::sep::grpc::ModelParseReply* ModelEvalReply::_internal_mutable_parse_reply() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.parse_reply_ == nullptr) {
    auto* p = CreateMaybeMessage<::sep::grpc::ModelParseReply>(GetArena());
    _impl_.parse_reply_ = reinterpret_cast<::sep::grpc::ModelParseReply*>(p);
  }
  return _impl_.parse_reply_;
}
inline ::sep::grpc::ModelParseReply* ModelEvalReply::mutable_parse_reply() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sep::grpc::ModelParseReply* _msg = _internal_mutable_parse_reply();
  // @@protoc_insertion_point(field_mutable:sep.grpc.ModelEvalReply.parse_reply)
  return _msg;
}
inline void ModelEvalReply::set_allocated_parse_reply(::sep::grpc::ModelParseReply* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sep::grpc::ModelParseReply*>(_impl_.parse_reply_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sep::grpc::ModelParseReply*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.parse_reply_ = reinterpret_cast<::sep::grpc::ModelParseReply*>(value);
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.ModelEvalReply.parse_reply)
}

// uint32 execution_context_count = 2;
inline void ModelEvalReply::clear_execution_context_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.execution_context_count_ = 0u;
}
inline ::uint32_t ModelEvalReply::execution_context_count() const {
  // @@protoc_insertion_point(field_get:sep.grpc.ModelEvalReply.execution_context_count)
  return _internal_execution_context_count();
}
inline void ModelEvalReply::set_execution_context_count(::uint32_t value) {
  _internal_set_execution_context_count(value);
  // @@protoc_insertion_point(field_set:sep.grpc.ModelEvalReply.execution_context_count)
}
inline ::uint32_t ModelEvalReply::_internal_execution_context_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.execution_context_count_;
}
inline void ModelEvalReply::_internal_set_execution_context_count(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.execution_context_count_ = value;
}

// uint32 execution_context_root_id = 3;
inline void ModelEvalReply::clear_execution_context_root_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.execution_context_root_id_ = 0u;
}
inline ::uint32_t ModelEvalReply::execution_context_root_id() const {
  // @@protoc_insertion_point(field_get:sep.grpc.ModelEvalReply.execution_context_root_id)
  return _internal_execution_context_root_id();
}
inline void ModelEvalReply::set_execution_context_root_id(::uint32_t value) {
  _internal_set_execution_context_root_id(value);
  // @@protoc_insertion_point(field_set:sep.grpc.ModelEvalReply.execution_context_root_id)
}
inline ::uint32_t ModelEvalReply::_internal_execution_context_root_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.execution_context_root_id_;
}
inline void ModelEvalReply::_internal_set_execution_context_root_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.execution_context_root_id_ = value;
}

// repeated uint32 not_yet_eval_execution_context_id = 4;
inline int ModelEvalReply::_internal_not_yet_eval_execution_context_id_size() const {
  return _internal_not_yet_eval_execution_context_id().size();
}
inline int ModelEvalReply::not_yet_eval_execution_context_id_size() const {
  return _internal_not_yet_eval_execution_context_id_size();
}
inline void ModelEvalReply::clear_not_yet_eval_execution_context_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.not_yet_eval_execution_context_id_.Clear();
}
inline ::uint32_t ModelEvalReply::not_yet_eval_execution_context_id(int index) const {
  // @@protoc_insertion_point(field_get:sep.grpc.ModelEvalReply.not_yet_eval_execution_context_id)
  return _internal_not_yet_eval_execution_context_id().Get(index);
}
inline void ModelEvalReply::set_not_yet_eval_execution_context_id(int index, ::uint32_t value) {
  _internal_mutable_not_yet_eval_execution_context_id()->Set(index, value);
  // @@protoc_insertion_point(field_set:sep.grpc.ModelEvalReply.not_yet_eval_execution_context_id)
}
inline void ModelEvalReply::add_not_yet_eval_execution_context_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_not_yet_eval_execution_context_id()->Add(value);
  // @@protoc_insertion_point(field_add:sep.grpc.ModelEvalReply.not_yet_eval_execution_context_id)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& ModelEvalReply::not_yet_eval_execution_context_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sep.grpc.ModelEvalReply.not_yet_eval_execution_context_id)
  return _internal_not_yet_eval_execution_context_id();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* ModelEvalReply::mutable_not_yet_eval_execution_context_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sep.grpc.ModelEvalReply.not_yet_eval_execution_context_id)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_not_yet_eval_execution_context_id();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& ModelEvalReply::_internal_not_yet_eval_execution_context_id()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.not_yet_eval_execution_context_id_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* ModelEvalReply::_internal_mutable_not_yet_eval_execution_context_id() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.not_yet_eval_execution_context_id_;
}

// uint32 step_count = 5;
inline void ModelEvalReply::clear_step_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.step_count_ = 0u;
}
inline ::uint32_t ModelEvalReply::step_count() const {
  // @@protoc_insertion_point(field_get:sep.grpc.ModelEvalReply.step_count)
  return _internal_step_count();
}
inline void ModelEvalReply::set_step_count(::uint32_t value) {
  _internal_set_step_count(value);
  // @@protoc_insertion_point(field_set:sep.grpc.ModelEvalReply.step_count)
}
inline ::uint32_t ModelEvalReply::_internal_step_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.step_count_;
}
inline void ModelEvalReply::_internal_set_step_count(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.step_count_ = value;
}

// uint32 eval_count = 6;
inline void ModelEvalReply::clear_eval_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eval_count_ = 0u;
}
inline ::uint32_t ModelEvalReply::eval_count() const {
  // @@protoc_insertion_point(field_get:sep.grpc.ModelEvalReply.eval_count)
  return _internal_eval_count();
}
inline void ModelEvalReply::set_eval_count(::uint32_t value) {
  _internal_set_eval_count(value);
  // @@protoc_insertion_point(field_set:sep.grpc.ModelEvalReply.eval_count)
}
inline ::uint32_t ModelEvalReply::_internal_eval_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.eval_count_;
}
inline void ModelEvalReply::_internal_set_eval_count(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.eval_count_ = value;
}

// uint32 max_execution_context_height = 7;
inline void ModelEvalReply::clear_max_execution_context_height() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.max_execution_context_height_ = 0u;
}
inline ::uint32_t ModelEvalReply::max_execution_context_height() const {
  // @@protoc_insertion_point(field_get:sep.grpc.ModelEvalReply.max_execution_context_height)
  return _internal_max_execution_context_height();
}
inline void ModelEvalReply::set_max_execution_context_height(::uint32_t value) {
  _internal_set_max_execution_context_height(value);
  // @@protoc_insertion_point(field_set:sep.grpc.ModelEvalReply.max_execution_context_height)
}
inline ::uint32_t ModelEvalReply::_internal_max_execution_context_height() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_execution_context_height_;
}
inline void ModelEvalReply::_internal_set_max_execution_context_height(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.max_execution_context_height_ = value;
}

// uint32 max_execution_context_width = 8;
inline void ModelEvalReply::clear_max_execution_context_width() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.max_execution_context_width_ = 0u;
}
inline ::uint32_t ModelEvalReply::max_execution_context_width() const {
  // @@protoc_insertion_point(field_get:sep.grpc.ModelEvalReply.max_execution_context_width)
  return _internal_max_execution_context_width();
}
inline void ModelEvalReply::set_max_execution_context_width(::uint32_t value) {
  _internal_set_max_execution_context_width(value);
  // @@protoc_insertion_point(field_set:sep.grpc.ModelEvalReply.max_execution_context_width)
}
inline ::uint32_t ModelEvalReply::_internal_max_execution_context_width() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_execution_context_width_;
}
inline void ModelEvalReply::_internal_set_max_execution_context_width(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.max_execution_context_width_ = value;
}

// uint32 redundancy_count = 9;
inline void ModelEvalReply::clear_redundancy_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.redundancy_count_ = 0u;
}
inline ::uint32_t ModelEvalReply::redundancy_count() const {
  // @@protoc_insertion_point(field_get:sep.grpc.ModelEvalReply.redundancy_count)
  return _internal_redundancy_count();
}
inline void ModelEvalReply::set_redundancy_count(::uint32_t value) {
  _internal_set_redundancy_count(value);
  // @@protoc_insertion_point(field_set:sep.grpc.ModelEvalReply.redundancy_count)
}
inline ::uint32_t ModelEvalReply::_internal_redundancy_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.redundancy_count_;
}
inline void ModelEvalReply::_internal_set_redundancy_count(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.redundancy_count_ = value;
}

// uint32 exit_execution_context_count = 10;
inline void ModelEvalReply::clear_exit_execution_context_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.exit_execution_context_count_ = 0u;
}
inline ::uint32_t ModelEvalReply::exit_execution_context_count() const {
  // @@protoc_insertion_point(field_get:sep.grpc.ModelEvalReply.exit_execution_context_count)
  return _internal_exit_execution_context_count();
}
inline void ModelEvalReply::set_exit_execution_context_count(::uint32_t value) {
  _internal_set_exit_execution_context_count(value);
  // @@protoc_insertion_point(field_set:sep.grpc.ModelEvalReply.exit_execution_context_count)
}
inline ::uint32_t ModelEvalReply::_internal_exit_execution_context_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.exit_execution_context_count_;
}
inline void ModelEvalReply::_internal_set_exit_execution_context_count(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.exit_execution_context_count_ = value;
}

// bool eval_limit_reached = 11;
inline void ModelEvalReply::clear_eval_limit_reached() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eval_limit_reached_ = false;
}
inline bool ModelEvalReply::eval_limit_reached() const {
  // @@protoc_insertion_point(field_get:sep.grpc.ModelEvalReply.eval_limit_reached)
  return _internal_eval_limit_reached();
}
inline void ModelEvalReply::set_eval_limit_reached(bool value) {
  _internal_set_eval_limit_reached(value);
  // @@protoc_insertion_point(field_set:sep.grpc.ModelEvalReply.eval_limit_reached)
}
inline bool ModelEvalReply::_internal_eval_limit_reached() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.eval_limit_reached_;
}
inline void ModelEvalReply::_internal_set_eval_limit_reached(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.eval_limit_reached_ = value;
}

// -------------------------------------------------------------------

// SymbexEvalInitRequest

// repeated .sep.grpc.VariableValuePair variable_value = 1;
inline int SymbexEvalInitRequest::_internal_variable_value_size() const {
  return _internal_variable_value().size();
}
inline int SymbexEvalInitRequest::variable_value_size() const {
  return _internal_variable_value_size();
}
inline void SymbexEvalInitRequest::clear_variable_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.variable_value_.Clear();
}
inline ::sep::grpc::VariableValuePair* SymbexEvalInitRequest::mutable_variable_value(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sep.grpc.SymbexEvalInitRequest.variable_value)
  return _internal_mutable_variable_value()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>* SymbexEvalInitRequest::mutable_variable_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sep.grpc.SymbexEvalInitRequest.variable_value)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_variable_value();
}
inline const ::sep::grpc::VariableValuePair& SymbexEvalInitRequest::variable_value(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalInitRequest.variable_value)
  return _internal_variable_value().Get(index);
}
inline ::sep::grpc::VariableValuePair* SymbexEvalInitRequest::add_variable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sep::grpc::VariableValuePair* _add = _internal_mutable_variable_value()->Add();
  // @@protoc_insertion_point(field_add:sep.grpc.SymbexEvalInitRequest.variable_value)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>& SymbexEvalInitRequest::variable_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sep.grpc.SymbexEvalInitRequest.variable_value)
  return _internal_variable_value();
}
inline const ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>&
SymbexEvalInitRequest::_internal_variable_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.variable_value_;
}
inline ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>*
SymbexEvalInitRequest::_internal_mutable_variable_value() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.variable_value_;
}

// .sep.grpc.Expression condition = 2;
inline bool SymbexEvalInitRequest::has_condition() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.condition_ != nullptr);
  return value;
}
inline void SymbexEvalInitRequest::clear_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.condition_ != nullptr) _impl_.condition_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::sep::grpc::Expression& SymbexEvalInitRequest::_internal_condition() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sep::grpc::Expression* p = _impl_.condition_;
  return p != nullptr ? *p : reinterpret_cast<const ::sep::grpc::Expression&>(::sep::grpc::_Expression_default_instance_);
}
inline const ::sep::grpc::Expression& SymbexEvalInitRequest::condition() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalInitRequest.condition)
  return _internal_condition();
}
inline void SymbexEvalInitRequest::unsafe_arena_set_allocated_condition(::sep::grpc::Expression* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.condition_);
  }
  _impl_.condition_ = reinterpret_cast<::sep::grpc::Expression*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sep.grpc.SymbexEvalInitRequest.condition)
}
inline ::sep::grpc::Expression* SymbexEvalInitRequest::release_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sep::grpc::Expression* released = _impl_.condition_;
  _impl_.condition_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sep::grpc::Expression* SymbexEvalInitRequest::unsafe_arena_release_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.SymbexEvalInitRequest.condition)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sep::grpc::Expression* temp = _impl_.condition_;
  _impl_.condition_ = nullptr;
  return temp;
}
inline ::sep::grpc::Expression* SymbexEvalInitRequest::_internal_mutable_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.condition_ == nullptr) {
    auto* p = CreateMaybeMessage<::sep::grpc::Expression>(GetArena());
    _impl_.condition_ = reinterpret_cast<::sep::grpc::Expression*>(p);
  }
  return _impl_.condition_;
}
inline ::sep::grpc::Expression* SymbexEvalInitRequest::mutable_condition() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sep::grpc::Expression* _msg = _internal_mutable_condition();
  // @@protoc_insertion_point(field_mutable:sep.grpc.SymbexEvalInitRequest.condition)
  return _msg;
}
inline void SymbexEvalInitRequest::set_allocated_condition(::sep::grpc::Expression* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sep::grpc::Expression*>(_impl_.condition_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sep::grpc::Expression*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.condition_ = reinterpret_cast<::sep::grpc::Expression*>(value);
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.SymbexEvalInitRequest.condition)
}

// -------------------------------------------------------------------

// SymbexEvalInitReply

// uint32 execution_context_id = 1;
inline void SymbexEvalInitReply::clear_execution_context_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.execution_context_id_ = 0u;
}
inline ::uint32_t SymbexEvalInitReply::execution_context_id() const {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalInitReply.execution_context_id)
  return _internal_execution_context_id();
}
inline void SymbexEvalInitReply::set_execution_context_id(::uint32_t value) {
  _internal_set_execution_context_id(value);
  // @@protoc_insertion_point(field_set:sep.grpc.SymbexEvalInitReply.execution_context_id)
}
inline ::uint32_t SymbexEvalInitReply::_internal_execution_context_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.execution_context_id_;
}
inline void SymbexEvalInitReply::_internal_set_execution_context_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.execution_context_id_ = value;
}

// repeated .sep.grpc.VariableValuePair variable_value = 2;
inline int SymbexEvalInitReply::_internal_variable_value_size() const {
  return _internal_variable_value().size();
}
inline int SymbexEvalInitReply::variable_value_size() const {
  return _internal_variable_value_size();
}
inline void SymbexEvalInitReply::clear_variable_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.variable_value_.Clear();
}
inline ::sep::grpc::VariableValuePair* SymbexEvalInitReply::mutable_variable_value(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sep.grpc.SymbexEvalInitReply.variable_value)
  return _internal_mutable_variable_value()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>* SymbexEvalInitReply::mutable_variable_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sep.grpc.SymbexEvalInitReply.variable_value)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_variable_value();
}
inline const ::sep::grpc::VariableValuePair& SymbexEvalInitReply::variable_value(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalInitReply.variable_value)
  return _internal_variable_value().Get(index);
}
inline ::sep::grpc::VariableValuePair* SymbexEvalInitReply::add_variable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sep::grpc::VariableValuePair* _add = _internal_mutable_variable_value()->Add();
  // @@protoc_insertion_point(field_add:sep.grpc.SymbexEvalInitReply.variable_value)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>& SymbexEvalInitReply::variable_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sep.grpc.SymbexEvalInitReply.variable_value)
  return _internal_variable_value();
}
inline const ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>&
SymbexEvalInitReply::_internal_variable_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.variable_value_;
}
inline ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>*
SymbexEvalInitReply::_internal_mutable_variable_value() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.variable_value_;
}

// .sep.grpc.Expression path_condition = 3;
inline bool SymbexEvalInitReply::has_path_condition() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.path_condition_ != nullptr);
  return value;
}
inline void SymbexEvalInitReply::clear_path_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.path_condition_ != nullptr) _impl_.path_condition_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::sep::grpc::Expression& SymbexEvalInitReply::_internal_path_condition() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sep::grpc::Expression* p = _impl_.path_condition_;
  return p != nullptr ? *p : reinterpret_cast<const ::sep::grpc::Expression&>(::sep::grpc::_Expression_default_instance_);
}
inline const ::sep::grpc::Expression& SymbexEvalInitReply::path_condition() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalInitReply.path_condition)
  return _internal_path_condition();
}
inline void SymbexEvalInitReply::unsafe_arena_set_allocated_path_condition(::sep::grpc::Expression* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.path_condition_);
  }
  _impl_.path_condition_ = reinterpret_cast<::sep::grpc::Expression*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sep.grpc.SymbexEvalInitReply.path_condition)
}
inline ::sep::grpc::Expression* SymbexEvalInitReply::release_path_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sep::grpc::Expression* released = _impl_.path_condition_;
  _impl_.path_condition_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sep::grpc::Expression* SymbexEvalInitReply::unsafe_arena_release_path_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.SymbexEvalInitReply.path_condition)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sep::grpc::Expression* temp = _impl_.path_condition_;
  _impl_.path_condition_ = nullptr;
  return temp;
}
inline ::sep::grpc::Expression* SymbexEvalInitReply::_internal_mutable_path_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.path_condition_ == nullptr) {
    auto* p = CreateMaybeMessage<::sep::grpc::Expression>(GetArena());
    _impl_.path_condition_ = reinterpret_cast<::sep::grpc::Expression*>(p);
  }
  return _impl_.path_condition_;
}
inline ::sep::grpc::Expression* SymbexEvalInitReply::mutable_path_condition() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sep::grpc::Expression* _msg = _internal_mutable_path_condition();
  // @@protoc_insertion_point(field_mutable:sep.grpc.SymbexEvalInitReply.path_condition)
  return _msg;
}
inline void SymbexEvalInitReply::set_allocated_path_condition(::sep::grpc::Expression* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sep::grpc::Expression*>(_impl_.path_condition_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sep::grpc::Expression*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.path_condition_ = reinterpret_cast<::sep::grpc::Expression*>(value);
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.SymbexEvalInitReply.path_condition)
}

// .sep.grpc.Expression other_condition = 4;
inline bool SymbexEvalInitReply::has_other_condition() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.other_condition_ != nullptr);
  return value;
}
inline void SymbexEvalInitReply::clear_other_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.other_condition_ != nullptr) _impl_.other_condition_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::sep::grpc::Expression& SymbexEvalInitReply::_internal_other_condition() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sep::grpc::Expression* p = _impl_.other_condition_;
  return p != nullptr ? *p : reinterpret_cast<const ::sep::grpc::Expression&>(::sep::grpc::_Expression_default_instance_);
}
inline const ::sep::grpc::Expression& SymbexEvalInitReply::other_condition() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalInitReply.other_condition)
  return _internal_other_condition();
}
inline void SymbexEvalInitReply::unsafe_arena_set_allocated_other_condition(::sep::grpc::Expression* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.other_condition_);
  }
  _impl_.other_condition_ = reinterpret_cast<::sep::grpc::Expression*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sep.grpc.SymbexEvalInitReply.other_condition)
}
inline ::sep::grpc::Expression* SymbexEvalInitReply::release_other_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::sep::grpc::Expression* released = _impl_.other_condition_;
  _impl_.other_condition_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sep::grpc::Expression* SymbexEvalInitReply::unsafe_arena_release_other_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.SymbexEvalInitReply.other_condition)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::sep::grpc::Expression* temp = _impl_.other_condition_;
  _impl_.other_condition_ = nullptr;
  return temp;
}
inline ::sep::grpc::Expression* SymbexEvalInitReply::_internal_mutable_other_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.other_condition_ == nullptr) {
    auto* p = CreateMaybeMessage<::sep::grpc::Expression>(GetArena());
    _impl_.other_condition_ = reinterpret_cast<::sep::grpc::Expression*>(p);
  }
  return _impl_.other_condition_;
}
inline ::sep::grpc::Expression* SymbexEvalInitReply::mutable_other_condition() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sep::grpc::Expression* _msg = _internal_mutable_other_condition();
  // @@protoc_insertion_point(field_mutable:sep.grpc.SymbexEvalInitReply.other_condition)
  return _msg;
}
inline void SymbexEvalInitReply::set_allocated_other_condition(::sep::grpc::Expression* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sep::grpc::Expression*>(_impl_.other_condition_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sep::grpc::Expression*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.other_condition_ = reinterpret_cast<::sep::grpc::Expression*>(value);
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.SymbexEvalInitReply.other_condition)
}

// -------------------------------------------------------------------

// SymbexEvalStepRequest

// uint32 step_count = 1;
inline void SymbexEvalStepRequest::clear_step_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.step_count_ = 0u;
}
inline ::uint32_t SymbexEvalStepRequest::step_count() const {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalStepRequest.step_count)
  return _internal_step_count();
}
inline void SymbexEvalStepRequest::set_step_count(::uint32_t value) {
  _internal_set_step_count(value);
  // @@protoc_insertion_point(field_set:sep.grpc.SymbexEvalStepRequest.step_count)
}
inline ::uint32_t SymbexEvalStepRequest::_internal_step_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.step_count_;
}
inline void SymbexEvalStepRequest::_internal_set_step_count(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.step_count_ = value;
}

// repeated .sep.grpc.VariableValuePair variable_value = 2;
inline int SymbexEvalStepRequest::_internal_variable_value_size() const {
  return _internal_variable_value().size();
}
inline int SymbexEvalStepRequest::variable_value_size() const {
  return _internal_variable_value_size();
}
inline void SymbexEvalStepRequest::clear_variable_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.variable_value_.Clear();
}
inline ::sep::grpc::VariableValuePair* SymbexEvalStepRequest::mutable_variable_value(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sep.grpc.SymbexEvalStepRequest.variable_value)
  return _internal_mutable_variable_value()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>* SymbexEvalStepRequest::mutable_variable_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sep.grpc.SymbexEvalStepRequest.variable_value)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_variable_value();
}
inline const ::sep::grpc::VariableValuePair& SymbexEvalStepRequest::variable_value(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalStepRequest.variable_value)
  return _internal_variable_value().Get(index);
}
inline ::sep::grpc::VariableValuePair* SymbexEvalStepRequest::add_variable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sep::grpc::VariableValuePair* _add = _internal_mutable_variable_value()->Add();
  // @@protoc_insertion_point(field_add:sep.grpc.SymbexEvalStepRequest.variable_value)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>& SymbexEvalStepRequest::variable_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sep.grpc.SymbexEvalStepRequest.variable_value)
  return _internal_variable_value();
}
inline const ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>&
SymbexEvalStepRequest::_internal_variable_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.variable_value_;
}
inline ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>*
SymbexEvalStepRequest::_internal_mutable_variable_value() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.variable_value_;
}

// .sep.grpc.Expression condition = 3;
inline bool SymbexEvalStepRequest::has_condition() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.condition_ != nullptr);
  return value;
}
inline void SymbexEvalStepRequest::clear_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.condition_ != nullptr) _impl_.condition_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::sep::grpc::Expression& SymbexEvalStepRequest::_internal_condition() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sep::grpc::Expression* p = _impl_.condition_;
  return p != nullptr ? *p : reinterpret_cast<const ::sep::grpc::Expression&>(::sep::grpc::_Expression_default_instance_);
}
inline const ::sep::grpc::Expression& SymbexEvalStepRequest::condition() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalStepRequest.condition)
  return _internal_condition();
}
inline void SymbexEvalStepRequest::unsafe_arena_set_allocated_condition(::sep::grpc::Expression* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.condition_);
  }
  _impl_.condition_ = reinterpret_cast<::sep::grpc::Expression*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sep.grpc.SymbexEvalStepRequest.condition)
}
inline ::sep::grpc::Expression* SymbexEvalStepRequest::release_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sep::grpc::Expression* released = _impl_.condition_;
  _impl_.condition_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sep::grpc::Expression* SymbexEvalStepRequest::unsafe_arena_release_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.SymbexEvalStepRequest.condition)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sep::grpc::Expression* temp = _impl_.condition_;
  _impl_.condition_ = nullptr;
  return temp;
}
inline ::sep::grpc::Expression* SymbexEvalStepRequest::_internal_mutable_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.condition_ == nullptr) {
    auto* p = CreateMaybeMessage<::sep::grpc::Expression>(GetArena());
    _impl_.condition_ = reinterpret_cast<::sep::grpc::Expression*>(p);
  }
  return _impl_.condition_;
}
inline ::sep::grpc::Expression* SymbexEvalStepRequest::mutable_condition() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sep::grpc::Expression* _msg = _internal_mutable_condition();
  // @@protoc_insertion_point(field_mutable:sep.grpc.SymbexEvalStepRequest.condition)
  return _msg;
}
inline void SymbexEvalStepRequest::set_allocated_condition(::sep::grpc::Expression* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sep::grpc::Expression*>(_impl_.condition_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sep::grpc::Expression*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.condition_ = reinterpret_cast<::sep::grpc::Expression*>(value);
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.SymbexEvalStepRequest.condition)
}

// -------------------------------------------------------------------

// SymbexEvalStepReply

// uint32 step_count = 1;
inline void SymbexEvalStepReply::clear_step_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.step_count_ = 0u;
}
inline ::uint32_t SymbexEvalStepReply::step_count() const {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalStepReply.step_count)
  return _internal_step_count();
}
inline void SymbexEvalStepReply::set_step_count(::uint32_t value) {
  _internal_set_step_count(value);
  // @@protoc_insertion_point(field_set:sep.grpc.SymbexEvalStepReply.step_count)
}
inline ::uint32_t SymbexEvalStepReply::_internal_step_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.step_count_;
}
inline void SymbexEvalStepReply::_internal_set_step_count(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.step_count_ = value;
}

// uint32 eval_count = 2;
inline void SymbexEvalStepReply::clear_eval_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eval_count_ = 0u;
}
inline ::uint32_t SymbexEvalStepReply::eval_count() const {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalStepReply.eval_count)
  return _internal_eval_count();
}
inline void SymbexEvalStepReply::set_eval_count(::uint32_t value) {
  _internal_set_eval_count(value);
  // @@protoc_insertion_point(field_set:sep.grpc.SymbexEvalStepReply.eval_count)
}
inline ::uint32_t SymbexEvalStepReply::_internal_eval_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.eval_count_;
}
inline void SymbexEvalStepReply::_internal_set_eval_count(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.eval_count_ = value;
}

// repeated uint32 not_yet_eval_execution_context_id = 3;
inline int SymbexEvalStepReply::_internal_not_yet_eval_execution_context_id_size() const {
  return _internal_not_yet_eval_execution_context_id().size();
}
inline int SymbexEvalStepReply::not_yet_eval_execution_context_id_size() const {
  return _internal_not_yet_eval_execution_context_id_size();
}
inline void SymbexEvalStepReply::clear_not_yet_eval_execution_context_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.not_yet_eval_execution_context_id_.Clear();
}
inline ::uint32_t SymbexEvalStepReply::not_yet_eval_execution_context_id(int index) const {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalStepReply.not_yet_eval_execution_context_id)
  return _internal_not_yet_eval_execution_context_id().Get(index);
}
inline void SymbexEvalStepReply::set_not_yet_eval_execution_context_id(int index, ::uint32_t value) {
  _internal_mutable_not_yet_eval_execution_context_id()->Set(index, value);
  // @@protoc_insertion_point(field_set:sep.grpc.SymbexEvalStepReply.not_yet_eval_execution_context_id)
}
inline void SymbexEvalStepReply::add_not_yet_eval_execution_context_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_not_yet_eval_execution_context_id()->Add(value);
  // @@protoc_insertion_point(field_add:sep.grpc.SymbexEvalStepReply.not_yet_eval_execution_context_id)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& SymbexEvalStepReply::not_yet_eval_execution_context_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sep.grpc.SymbexEvalStepReply.not_yet_eval_execution_context_id)
  return _internal_not_yet_eval_execution_context_id();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* SymbexEvalStepReply::mutable_not_yet_eval_execution_context_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sep.grpc.SymbexEvalStepReply.not_yet_eval_execution_context_id)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_not_yet_eval_execution_context_id();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& SymbexEvalStepReply::_internal_not_yet_eval_execution_context_id()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.not_yet_eval_execution_context_id_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* SymbexEvalStepReply::_internal_mutable_not_yet_eval_execution_context_id() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.not_yet_eval_execution_context_id_;
}

// -------------------------------------------------------------------

// SymbexEvalContextRequest

// uint32 execution_context_id = 1;
inline void SymbexEvalContextRequest::clear_execution_context_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.execution_context_id_ = 0u;
}
inline ::uint32_t SymbexEvalContextRequest::execution_context_id() const {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalContextRequest.execution_context_id)
  return _internal_execution_context_id();
}
inline void SymbexEvalContextRequest::set_execution_context_id(::uint32_t value) {
  _internal_set_execution_context_id(value);
  // @@protoc_insertion_point(field_set:sep.grpc.SymbexEvalContextRequest.execution_context_id)
}
inline ::uint32_t SymbexEvalContextRequest::_internal_execution_context_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.execution_context_id_;
}
inline void SymbexEvalContextRequest::_internal_set_execution_context_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.execution_context_id_ = value;
}

// uint32 step_count = 2;
inline void SymbexEvalContextRequest::clear_step_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.step_count_ = 0u;
}
inline ::uint32_t SymbexEvalContextRequest::step_count() const {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalContextRequest.step_count)
  return _internal_step_count();
}
inline void SymbexEvalContextRequest::set_step_count(::uint32_t value) {
  _internal_set_step_count(value);
  // @@protoc_insertion_point(field_set:sep.grpc.SymbexEvalContextRequest.step_count)
}
inline ::uint32_t SymbexEvalContextRequest::_internal_step_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.step_count_;
}
inline void SymbexEvalContextRequest::_internal_set_step_count(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.step_count_ = value;
}

// repeated .sep.grpc.VariableValuePair variable_value = 3;
inline int SymbexEvalContextRequest::_internal_variable_value_size() const {
  return _internal_variable_value().size();
}
inline int SymbexEvalContextRequest::variable_value_size() const {
  return _internal_variable_value_size();
}
inline void SymbexEvalContextRequest::clear_variable_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.variable_value_.Clear();
}
inline ::sep::grpc::VariableValuePair* SymbexEvalContextRequest::mutable_variable_value(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sep.grpc.SymbexEvalContextRequest.variable_value)
  return _internal_mutable_variable_value()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>* SymbexEvalContextRequest::mutable_variable_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sep.grpc.SymbexEvalContextRequest.variable_value)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_variable_value();
}
inline const ::sep::grpc::VariableValuePair& SymbexEvalContextRequest::variable_value(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalContextRequest.variable_value)
  return _internal_variable_value().Get(index);
}
inline ::sep::grpc::VariableValuePair* SymbexEvalContextRequest::add_variable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sep::grpc::VariableValuePair* _add = _internal_mutable_variable_value()->Add();
  // @@protoc_insertion_point(field_add:sep.grpc.SymbexEvalContextRequest.variable_value)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>& SymbexEvalContextRequest::variable_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sep.grpc.SymbexEvalContextRequest.variable_value)
  return _internal_variable_value();
}
inline const ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>&
SymbexEvalContextRequest::_internal_variable_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.variable_value_;
}
inline ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>*
SymbexEvalContextRequest::_internal_mutable_variable_value() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.variable_value_;
}

// .sep.grpc.Expression condition = 4;
inline bool SymbexEvalContextRequest::has_condition() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.condition_ != nullptr);
  return value;
}
inline void SymbexEvalContextRequest::clear_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.condition_ != nullptr) _impl_.condition_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::sep::grpc::Expression& SymbexEvalContextRequest::_internal_condition() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sep::grpc::Expression* p = _impl_.condition_;
  return p != nullptr ? *p : reinterpret_cast<const ::sep::grpc::Expression&>(::sep::grpc::_Expression_default_instance_);
}
inline const ::sep::grpc::Expression& SymbexEvalContextRequest::condition() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalContextRequest.condition)
  return _internal_condition();
}
inline void SymbexEvalContextRequest::unsafe_arena_set_allocated_condition(::sep::grpc::Expression* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.condition_);
  }
  _impl_.condition_ = reinterpret_cast<::sep::grpc::Expression*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sep.grpc.SymbexEvalContextRequest.condition)
}
inline ::sep::grpc::Expression* SymbexEvalContextRequest::release_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sep::grpc::Expression* released = _impl_.condition_;
  _impl_.condition_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sep::grpc::Expression* SymbexEvalContextRequest::unsafe_arena_release_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.SymbexEvalContextRequest.condition)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sep::grpc::Expression* temp = _impl_.condition_;
  _impl_.condition_ = nullptr;
  return temp;
}
inline ::sep::grpc::Expression* SymbexEvalContextRequest::_internal_mutable_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.condition_ == nullptr) {
    auto* p = CreateMaybeMessage<::sep::grpc::Expression>(GetArena());
    _impl_.condition_ = reinterpret_cast<::sep::grpc::Expression*>(p);
  }
  return _impl_.condition_;
}
inline ::sep::grpc::Expression* SymbexEvalContextRequest::mutable_condition() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sep::grpc::Expression* _msg = _internal_mutable_condition();
  // @@protoc_insertion_point(field_mutable:sep.grpc.SymbexEvalContextRequest.condition)
  return _msg;
}
inline void SymbexEvalContextRequest::set_allocated_condition(::sep::grpc::Expression* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sep::grpc::Expression*>(_impl_.condition_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sep::grpc::Expression*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.condition_ = reinterpret_cast<::sep::grpc::Expression*>(value);
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.SymbexEvalContextRequest.condition)
}

// -------------------------------------------------------------------

// SymbexEvalContextReply

// uint32 execution_context_id = 1;
inline void SymbexEvalContextReply::clear_execution_context_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.execution_context_id_ = 0u;
}
inline ::uint32_t SymbexEvalContextReply::execution_context_id() const {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalContextReply.execution_context_id)
  return _internal_execution_context_id();
}
inline void SymbexEvalContextReply::set_execution_context_id(::uint32_t value) {
  _internal_set_execution_context_id(value);
  // @@protoc_insertion_point(field_set:sep.grpc.SymbexEvalContextReply.execution_context_id)
}
inline ::uint32_t SymbexEvalContextReply::_internal_execution_context_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.execution_context_id_;
}
inline void SymbexEvalContextReply::_internal_set_execution_context_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.execution_context_id_ = value;
}

// uint32 step_count = 2;
inline void SymbexEvalContextReply::clear_step_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.step_count_ = 0u;
}
inline ::uint32_t SymbexEvalContextReply::step_count() const {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalContextReply.step_count)
  return _internal_step_count();
}
inline void SymbexEvalContextReply::set_step_count(::uint32_t value) {
  _internal_set_step_count(value);
  // @@protoc_insertion_point(field_set:sep.grpc.SymbexEvalContextReply.step_count)
}
inline ::uint32_t SymbexEvalContextReply::_internal_step_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.step_count_;
}
inline void SymbexEvalContextReply::_internal_set_step_count(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.step_count_ = value;
}

// uint32 eval_count = 3;
inline void SymbexEvalContextReply::clear_eval_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eval_count_ = 0u;
}
inline ::uint32_t SymbexEvalContextReply::eval_count() const {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalContextReply.eval_count)
  return _internal_eval_count();
}
inline void SymbexEvalContextReply::set_eval_count(::uint32_t value) {
  _internal_set_eval_count(value);
  // @@protoc_insertion_point(field_set:sep.grpc.SymbexEvalContextReply.eval_count)
}
inline ::uint32_t SymbexEvalContextReply::_internal_eval_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.eval_count_;
}
inline void SymbexEvalContextReply::_internal_set_eval_count(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.eval_count_ = value;
}

// repeated uint32 child_execution_context_id = 4;
inline int SymbexEvalContextReply::_internal_child_execution_context_id_size() const {
  return _internal_child_execution_context_id().size();
}
inline int SymbexEvalContextReply::child_execution_context_id_size() const {
  return _internal_child_execution_context_id_size();
}
inline void SymbexEvalContextReply::clear_child_execution_context_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.child_execution_context_id_.Clear();
}
inline ::uint32_t SymbexEvalContextReply::child_execution_context_id(int index) const {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalContextReply.child_execution_context_id)
  return _internal_child_execution_context_id().Get(index);
}
inline void SymbexEvalContextReply::set_child_execution_context_id(int index, ::uint32_t value) {
  _internal_mutable_child_execution_context_id()->Set(index, value);
  // @@protoc_insertion_point(field_set:sep.grpc.SymbexEvalContextReply.child_execution_context_id)
}
inline void SymbexEvalContextReply::add_child_execution_context_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_child_execution_context_id()->Add(value);
  // @@protoc_insertion_point(field_add:sep.grpc.SymbexEvalContextReply.child_execution_context_id)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& SymbexEvalContextReply::child_execution_context_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sep.grpc.SymbexEvalContextReply.child_execution_context_id)
  return _internal_child_execution_context_id();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* SymbexEvalContextReply::mutable_child_execution_context_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sep.grpc.SymbexEvalContextReply.child_execution_context_id)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_child_execution_context_id();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& SymbexEvalContextReply::_internal_child_execution_context_id()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.child_execution_context_id_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* SymbexEvalContextReply::_internal_mutable_child_execution_context_id() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.child_execution_context_id_;
}

// -------------------------------------------------------------------

// SymbexEvalRunnableRequest

// uint32 execution_context_id = 1;
inline void SymbexEvalRunnableRequest::clear_execution_context_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.execution_context_id_ = 0u;
}
inline ::uint32_t SymbexEvalRunnableRequest::execution_context_id() const {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalRunnableRequest.execution_context_id)
  return _internal_execution_context_id();
}
inline void SymbexEvalRunnableRequest::set_execution_context_id(::uint32_t value) {
  _internal_set_execution_context_id(value);
  // @@protoc_insertion_point(field_set:sep.grpc.SymbexEvalRunnableRequest.execution_context_id)
}
inline ::uint32_t SymbexEvalRunnableRequest::_internal_execution_context_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.execution_context_id_;
}
inline void SymbexEvalRunnableRequest::_internal_set_execution_context_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.execution_context_id_ = value;
}

// string runnable_element_id = 2;
inline void SymbexEvalRunnableRequest::clear_runnable_element_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.runnable_element_id_.ClearToEmpty();
}
inline const std::string& SymbexEvalRunnableRequest::runnable_element_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalRunnableRequest.runnable_element_id)
  return _internal_runnable_element_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SymbexEvalRunnableRequest::set_runnable_element_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.runnable_element_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:sep.grpc.SymbexEvalRunnableRequest.runnable_element_id)
}
inline std::string* SymbexEvalRunnableRequest::mutable_runnable_element_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_runnable_element_id();
  // @@protoc_insertion_point(field_mutable:sep.grpc.SymbexEvalRunnableRequest.runnable_element_id)
  return _s;
}
inline const std::string& SymbexEvalRunnableRequest::_internal_runnable_element_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.runnable_element_id_.Get();
}
inline void SymbexEvalRunnableRequest::_internal_set_runnable_element_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.runnable_element_id_.Set(value, GetArena());
}
inline std::string* SymbexEvalRunnableRequest::_internal_mutable_runnable_element_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.runnable_element_id_.Mutable( GetArena());
}
inline std::string* SymbexEvalRunnableRequest::release_runnable_element_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.SymbexEvalRunnableRequest.runnable_element_id)
  return _impl_.runnable_element_id_.Release();
}
inline void SymbexEvalRunnableRequest::set_allocated_runnable_element_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.runnable_element_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.runnable_element_id_.IsDefault()) {
          _impl_.runnable_element_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.SymbexEvalRunnableRequest.runnable_element_id)
}

// repeated .sep.grpc.VariableValuePair variable_value = 3;
inline int SymbexEvalRunnableRequest::_internal_variable_value_size() const {
  return _internal_variable_value().size();
}
inline int SymbexEvalRunnableRequest::variable_value_size() const {
  return _internal_variable_value_size();
}
inline void SymbexEvalRunnableRequest::clear_variable_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.variable_value_.Clear();
}
inline ::sep::grpc::VariableValuePair* SymbexEvalRunnableRequest::mutable_variable_value(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sep.grpc.SymbexEvalRunnableRequest.variable_value)
  return _internal_mutable_variable_value()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>* SymbexEvalRunnableRequest::mutable_variable_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sep.grpc.SymbexEvalRunnableRequest.variable_value)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_variable_value();
}
inline const ::sep::grpc::VariableValuePair& SymbexEvalRunnableRequest::variable_value(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalRunnableRequest.variable_value)
  return _internal_variable_value().Get(index);
}
inline ::sep::grpc::VariableValuePair* SymbexEvalRunnableRequest::add_variable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sep::grpc::VariableValuePair* _add = _internal_mutable_variable_value()->Add();
  // @@protoc_insertion_point(field_add:sep.grpc.SymbexEvalRunnableRequest.variable_value)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>& SymbexEvalRunnableRequest::variable_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sep.grpc.SymbexEvalRunnableRequest.variable_value)
  return _internal_variable_value();
}
inline const ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>&
SymbexEvalRunnableRequest::_internal_variable_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.variable_value_;
}
inline ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>*
SymbexEvalRunnableRequest::_internal_mutable_variable_value() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.variable_value_;
}

// .sep.grpc.Expression condition = 4;
inline bool SymbexEvalRunnableRequest::has_condition() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.condition_ != nullptr);
  return value;
}
inline void SymbexEvalRunnableRequest::clear_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.condition_ != nullptr) _impl_.condition_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::sep::grpc::Expression& SymbexEvalRunnableRequest::_internal_condition() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sep::grpc::Expression* p = _impl_.condition_;
  return p != nullptr ? *p : reinterpret_cast<const ::sep::grpc::Expression&>(::sep::grpc::_Expression_default_instance_);
}
inline const ::sep::grpc::Expression& SymbexEvalRunnableRequest::condition() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalRunnableRequest.condition)
  return _internal_condition();
}
inline void SymbexEvalRunnableRequest::unsafe_arena_set_allocated_condition(::sep::grpc::Expression* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.condition_);
  }
  _impl_.condition_ = reinterpret_cast<::sep::grpc::Expression*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sep.grpc.SymbexEvalRunnableRequest.condition)
}
inline ::sep::grpc::Expression* SymbexEvalRunnableRequest::release_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sep::grpc::Expression* released = _impl_.condition_;
  _impl_.condition_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sep::grpc::Expression* SymbexEvalRunnableRequest::unsafe_arena_release_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.SymbexEvalRunnableRequest.condition)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sep::grpc::Expression* temp = _impl_.condition_;
  _impl_.condition_ = nullptr;
  return temp;
}
inline ::sep::grpc::Expression* SymbexEvalRunnableRequest::_internal_mutable_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.condition_ == nullptr) {
    auto* p = CreateMaybeMessage<::sep::grpc::Expression>(GetArena());
    _impl_.condition_ = reinterpret_cast<::sep::grpc::Expression*>(p);
  }
  return _impl_.condition_;
}
inline ::sep::grpc::Expression* SymbexEvalRunnableRequest::mutable_condition() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sep::grpc::Expression* _msg = _internal_mutable_condition();
  // @@protoc_insertion_point(field_mutable:sep.grpc.SymbexEvalRunnableRequest.condition)
  return _msg;
}
inline void SymbexEvalRunnableRequest::set_allocated_condition(::sep::grpc::Expression* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sep::grpc::Expression*>(_impl_.condition_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sep::grpc::Expression*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.condition_ = reinterpret_cast<::sep::grpc::Expression*>(value);
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.SymbexEvalRunnableRequest.condition)
}

// -------------------------------------------------------------------

// SymbexEvalRunnableReply

// repeated uint32 execution_context_id = 1;
inline int SymbexEvalRunnableReply::_internal_execution_context_id_size() const {
  return _internal_execution_context_id().size();
}
inline int SymbexEvalRunnableReply::execution_context_id_size() const {
  return _internal_execution_context_id_size();
}
inline void SymbexEvalRunnableReply::clear_execution_context_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.execution_context_id_.Clear();
}
inline ::uint32_t SymbexEvalRunnableReply::execution_context_id(int index) const {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalRunnableReply.execution_context_id)
  return _internal_execution_context_id().Get(index);
}
inline void SymbexEvalRunnableReply::set_execution_context_id(int index, ::uint32_t value) {
  _internal_mutable_execution_context_id()->Set(index, value);
  // @@protoc_insertion_point(field_set:sep.grpc.SymbexEvalRunnableReply.execution_context_id)
}
inline void SymbexEvalRunnableReply::add_execution_context_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_execution_context_id()->Add(value);
  // @@protoc_insertion_point(field_add:sep.grpc.SymbexEvalRunnableReply.execution_context_id)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& SymbexEvalRunnableReply::execution_context_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sep.grpc.SymbexEvalRunnableReply.execution_context_id)
  return _internal_execution_context_id();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* SymbexEvalRunnableReply::mutable_execution_context_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sep.grpc.SymbexEvalRunnableReply.execution_context_id)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_execution_context_id();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& SymbexEvalRunnableReply::_internal_execution_context_id()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.execution_context_id_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* SymbexEvalRunnableReply::_internal_mutable_execution_context_id() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.execution_context_id_;
}

// repeated uint32 not_yet_eval_execution_context_id = 2;
inline int SymbexEvalRunnableReply::_internal_not_yet_eval_execution_context_id_size() const {
  return _internal_not_yet_eval_execution_context_id().size();
}
inline int SymbexEvalRunnableReply::not_yet_eval_execution_context_id_size() const {
  return _internal_not_yet_eval_execution_context_id_size();
}
inline void SymbexEvalRunnableReply::clear_not_yet_eval_execution_context_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.not_yet_eval_execution_context_id_.Clear();
}
inline ::uint32_t SymbexEvalRunnableReply::not_yet_eval_execution_context_id(int index) const {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalRunnableReply.not_yet_eval_execution_context_id)
  return _internal_not_yet_eval_execution_context_id().Get(index);
}
inline void SymbexEvalRunnableReply::set_not_yet_eval_execution_context_id(int index, ::uint32_t value) {
  _internal_mutable_not_yet_eval_execution_context_id()->Set(index, value);
  // @@protoc_insertion_point(field_set:sep.grpc.SymbexEvalRunnableReply.not_yet_eval_execution_context_id)
}
inline void SymbexEvalRunnableReply::add_not_yet_eval_execution_context_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_not_yet_eval_execution_context_id()->Add(value);
  // @@protoc_insertion_point(field_add:sep.grpc.SymbexEvalRunnableReply.not_yet_eval_execution_context_id)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& SymbexEvalRunnableReply::not_yet_eval_execution_context_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sep.grpc.SymbexEvalRunnableReply.not_yet_eval_execution_context_id)
  return _internal_not_yet_eval_execution_context_id();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* SymbexEvalRunnableReply::mutable_not_yet_eval_execution_context_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sep.grpc.SymbexEvalRunnableReply.not_yet_eval_execution_context_id)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_not_yet_eval_execution_context_id();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& SymbexEvalRunnableReply::_internal_not_yet_eval_execution_context_id()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.not_yet_eval_execution_context_id_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* SymbexEvalRunnableReply::_internal_mutable_not_yet_eval_execution_context_id() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.not_yet_eval_execution_context_id_;
}

// -------------------------------------------------------------------

// SymbexEvalRunnableBasicReply

// bool is_satisfiable = 1;
inline void SymbexEvalRunnableBasicReply::clear_is_satisfiable() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.is_satisfiable_ = false;
}
inline bool SymbexEvalRunnableBasicReply::is_satisfiable() const {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalRunnableBasicReply.is_satisfiable)
  return _internal_is_satisfiable();
}
inline void SymbexEvalRunnableBasicReply::set_is_satisfiable(bool value) {
  _internal_set_is_satisfiable(value);
  // @@protoc_insertion_point(field_set:sep.grpc.SymbexEvalRunnableBasicReply.is_satisfiable)
}
inline bool SymbexEvalRunnableBasicReply::_internal_is_satisfiable() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.is_satisfiable_;
}
inline void SymbexEvalRunnableBasicReply::_internal_set_is_satisfiable(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.is_satisfiable_ = value;
}

// uint32 execution_context_id = 2;
inline void SymbexEvalRunnableBasicReply::clear_execution_context_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.execution_context_id_ = 0u;
}
inline ::uint32_t SymbexEvalRunnableBasicReply::execution_context_id() const {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalRunnableBasicReply.execution_context_id)
  return _internal_execution_context_id();
}
inline void SymbexEvalRunnableBasicReply::set_execution_context_id(::uint32_t value) {
  _internal_set_execution_context_id(value);
  // @@protoc_insertion_point(field_set:sep.grpc.SymbexEvalRunnableBasicReply.execution_context_id)
}
inline ::uint32_t SymbexEvalRunnableBasicReply::_internal_execution_context_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.execution_context_id_;
}
inline void SymbexEvalRunnableBasicReply::_internal_set_execution_context_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.execution_context_id_ = value;
}

// .sep.grpc.Expression path_condition = 3;
inline bool SymbexEvalRunnableBasicReply::has_path_condition() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.path_condition_ != nullptr);
  return value;
}
inline void SymbexEvalRunnableBasicReply::clear_path_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.path_condition_ != nullptr) _impl_.path_condition_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::sep::grpc::Expression& SymbexEvalRunnableBasicReply::_internal_path_condition() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sep::grpc::Expression* p = _impl_.path_condition_;
  return p != nullptr ? *p : reinterpret_cast<const ::sep::grpc::Expression&>(::sep::grpc::_Expression_default_instance_);
}
inline const ::sep::grpc::Expression& SymbexEvalRunnableBasicReply::path_condition() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalRunnableBasicReply.path_condition)
  return _internal_path_condition();
}
inline void SymbexEvalRunnableBasicReply::unsafe_arena_set_allocated_path_condition(::sep::grpc::Expression* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.path_condition_);
  }
  _impl_.path_condition_ = reinterpret_cast<::sep::grpc::Expression*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sep.grpc.SymbexEvalRunnableBasicReply.path_condition)
}
inline ::sep::grpc::Expression* SymbexEvalRunnableBasicReply::release_path_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sep::grpc::Expression* released = _impl_.path_condition_;
  _impl_.path_condition_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sep::grpc::Expression* SymbexEvalRunnableBasicReply::unsafe_arena_release_path_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.SymbexEvalRunnableBasicReply.path_condition)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sep::grpc::Expression* temp = _impl_.path_condition_;
  _impl_.path_condition_ = nullptr;
  return temp;
}
inline ::sep::grpc::Expression* SymbexEvalRunnableBasicReply::_internal_mutable_path_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.path_condition_ == nullptr) {
    auto* p = CreateMaybeMessage<::sep::grpc::Expression>(GetArena());
    _impl_.path_condition_ = reinterpret_cast<::sep::grpc::Expression*>(p);
  }
  return _impl_.path_condition_;
}
inline ::sep::grpc::Expression* SymbexEvalRunnableBasicReply::mutable_path_condition() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sep::grpc::Expression* _msg = _internal_mutable_path_condition();
  // @@protoc_insertion_point(field_mutable:sep.grpc.SymbexEvalRunnableBasicReply.path_condition)
  return _msg;
}
inline void SymbexEvalRunnableBasicReply::set_allocated_path_condition(::sep::grpc::Expression* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sep::grpc::Expression*>(_impl_.path_condition_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sep::grpc::Expression*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.path_condition_ = reinterpret_cast<::sep::grpc::Expression*>(value);
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.SymbexEvalRunnableBasicReply.path_condition)
}

// .sep.grpc.Expression other_condition = 4;
inline bool SymbexEvalRunnableBasicReply::has_other_condition() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.other_condition_ != nullptr);
  return value;
}
inline void SymbexEvalRunnableBasicReply::clear_other_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.other_condition_ != nullptr) _impl_.other_condition_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::sep::grpc::Expression& SymbexEvalRunnableBasicReply::_internal_other_condition() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sep::grpc::Expression* p = _impl_.other_condition_;
  return p != nullptr ? *p : reinterpret_cast<const ::sep::grpc::Expression&>(::sep::grpc::_Expression_default_instance_);
}
inline const ::sep::grpc::Expression& SymbexEvalRunnableBasicReply::other_condition() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalRunnableBasicReply.other_condition)
  return _internal_other_condition();
}
inline void SymbexEvalRunnableBasicReply::unsafe_arena_set_allocated_other_condition(::sep::grpc::Expression* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.other_condition_);
  }
  _impl_.other_condition_ = reinterpret_cast<::sep::grpc::Expression*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sep.grpc.SymbexEvalRunnableBasicReply.other_condition)
}
inline ::sep::grpc::Expression* SymbexEvalRunnableBasicReply::release_other_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::sep::grpc::Expression* released = _impl_.other_condition_;
  _impl_.other_condition_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sep::grpc::Expression* SymbexEvalRunnableBasicReply::unsafe_arena_release_other_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.SymbexEvalRunnableBasicReply.other_condition)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::sep::grpc::Expression* temp = _impl_.other_condition_;
  _impl_.other_condition_ = nullptr;
  return temp;
}
inline ::sep::grpc::Expression* SymbexEvalRunnableBasicReply::_internal_mutable_other_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.other_condition_ == nullptr) {
    auto* p = CreateMaybeMessage<::sep::grpc::Expression>(GetArena());
    _impl_.other_condition_ = reinterpret_cast<::sep::grpc::Expression*>(p);
  }
  return _impl_.other_condition_;
}
inline ::sep::grpc::Expression* SymbexEvalRunnableBasicReply::mutable_other_condition() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sep::grpc::Expression* _msg = _internal_mutable_other_condition();
  // @@protoc_insertion_point(field_mutable:sep.grpc.SymbexEvalRunnableBasicReply.other_condition)
  return _msg;
}
inline void SymbexEvalRunnableBasicReply::set_allocated_other_condition(::sep::grpc::Expression* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sep::grpc::Expression*>(_impl_.other_condition_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sep::grpc::Expression*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.other_condition_ = reinterpret_cast<::sep::grpc::Expression*>(value);
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.SymbexEvalRunnableBasicReply.other_condition)
}

// repeated .sep.grpc.TypedSymbol created_symbols = 5;
inline int SymbexEvalRunnableBasicReply::_internal_created_symbols_size() const {
  return _internal_created_symbols().size();
}
inline int SymbexEvalRunnableBasicReply::created_symbols_size() const {
  return _internal_created_symbols_size();
}
inline void SymbexEvalRunnableBasicReply::clear_created_symbols() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.created_symbols_.Clear();
}
inline ::sep::grpc::TypedSymbol* SymbexEvalRunnableBasicReply::mutable_created_symbols(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sep.grpc.SymbexEvalRunnableBasicReply.created_symbols)
  return _internal_mutable_created_symbols()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sep::grpc::TypedSymbol>* SymbexEvalRunnableBasicReply::mutable_created_symbols()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sep.grpc.SymbexEvalRunnableBasicReply.created_symbols)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_created_symbols();
}
inline const ::sep::grpc::TypedSymbol& SymbexEvalRunnableBasicReply::created_symbols(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalRunnableBasicReply.created_symbols)
  return _internal_created_symbols().Get(index);
}
inline ::sep::grpc::TypedSymbol* SymbexEvalRunnableBasicReply::add_created_symbols() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sep::grpc::TypedSymbol* _add = _internal_mutable_created_symbols()->Add();
  // @@protoc_insertion_point(field_add:sep.grpc.SymbexEvalRunnableBasicReply.created_symbols)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sep::grpc::TypedSymbol>& SymbexEvalRunnableBasicReply::created_symbols() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sep.grpc.SymbexEvalRunnableBasicReply.created_symbols)
  return _internal_created_symbols();
}
inline const ::google::protobuf::RepeatedPtrField<::sep::grpc::TypedSymbol>&
SymbexEvalRunnableBasicReply::_internal_created_symbols() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.created_symbols_;
}
inline ::google::protobuf::RepeatedPtrField<::sep::grpc::TypedSymbol>*
SymbexEvalRunnableBasicReply::_internal_mutable_created_symbols() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.created_symbols_;
}

// repeated uint32 not_yet_eval_execution_context_id = 6;
inline int SymbexEvalRunnableBasicReply::_internal_not_yet_eval_execution_context_id_size() const {
  return _internal_not_yet_eval_execution_context_id().size();
}
inline int SymbexEvalRunnableBasicReply::not_yet_eval_execution_context_id_size() const {
  return _internal_not_yet_eval_execution_context_id_size();
}
inline void SymbexEvalRunnableBasicReply::clear_not_yet_eval_execution_context_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.not_yet_eval_execution_context_id_.Clear();
}
inline ::uint32_t SymbexEvalRunnableBasicReply::not_yet_eval_execution_context_id(int index) const {
  // @@protoc_insertion_point(field_get:sep.grpc.SymbexEvalRunnableBasicReply.not_yet_eval_execution_context_id)
  return _internal_not_yet_eval_execution_context_id().Get(index);
}
inline void SymbexEvalRunnableBasicReply::set_not_yet_eval_execution_context_id(int index, ::uint32_t value) {
  _internal_mutable_not_yet_eval_execution_context_id()->Set(index, value);
  // @@protoc_insertion_point(field_set:sep.grpc.SymbexEvalRunnableBasicReply.not_yet_eval_execution_context_id)
}
inline void SymbexEvalRunnableBasicReply::add_not_yet_eval_execution_context_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_not_yet_eval_execution_context_id()->Add(value);
  // @@protoc_insertion_point(field_add:sep.grpc.SymbexEvalRunnableBasicReply.not_yet_eval_execution_context_id)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& SymbexEvalRunnableBasicReply::not_yet_eval_execution_context_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sep.grpc.SymbexEvalRunnableBasicReply.not_yet_eval_execution_context_id)
  return _internal_not_yet_eval_execution_context_id();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* SymbexEvalRunnableBasicReply::mutable_not_yet_eval_execution_context_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sep.grpc.SymbexEvalRunnableBasicReply.not_yet_eval_execution_context_id)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_not_yet_eval_execution_context_id();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& SymbexEvalRunnableBasicReply::_internal_not_yet_eval_execution_context_id()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.not_yet_eval_execution_context_id_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* SymbexEvalRunnableBasicReply::_internal_mutable_not_yet_eval_execution_context_id() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.not_yet_eval_execution_context_id_;
}

// -------------------------------------------------------------------

// QueryValueForVariableRequest

// uint32 execution_context_id = 1;
inline void QueryValueForVariableRequest::clear_execution_context_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.execution_context_id_ = 0u;
}
inline ::uint32_t QueryValueForVariableRequest::execution_context_id() const {
  // @@protoc_insertion_point(field_get:sep.grpc.QueryValueForVariableRequest.execution_context_id)
  return _internal_execution_context_id();
}
inline void QueryValueForVariableRequest::set_execution_context_id(::uint32_t value) {
  _internal_set_execution_context_id(value);
  // @@protoc_insertion_point(field_set:sep.grpc.QueryValueForVariableRequest.execution_context_id)
}
inline ::uint32_t QueryValueForVariableRequest::_internal_execution_context_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.execution_context_id_;
}
inline void QueryValueForVariableRequest::_internal_set_execution_context_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.execution_context_id_ = value;
}

// repeated string variable_id = 2;
inline int QueryValueForVariableRequest::_internal_variable_id_size() const {
  return _internal_variable_id().size();
}
inline int QueryValueForVariableRequest::variable_id_size() const {
  return _internal_variable_id_size();
}
inline void QueryValueForVariableRequest::clear_variable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.variable_id_.Clear();
}
inline std::string* QueryValueForVariableRequest::add_variable_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_variable_id()->Add();
  // @@protoc_insertion_point(field_add_mutable:sep.grpc.QueryValueForVariableRequest.variable_id)
  return _s;
}
inline const std::string& QueryValueForVariableRequest::variable_id(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.QueryValueForVariableRequest.variable_id)
  return _internal_variable_id().Get(index);
}
inline std::string* QueryValueForVariableRequest::mutable_variable_id(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sep.grpc.QueryValueForVariableRequest.variable_id)
  return _internal_mutable_variable_id()->Mutable(index);
}
inline void QueryValueForVariableRequest::set_variable_id(int index, const std::string& value) {
  _internal_mutable_variable_id()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:sep.grpc.QueryValueForVariableRequest.variable_id)
}
inline void QueryValueForVariableRequest::set_variable_id(int index, std::string&& value) {
  _internal_mutable_variable_id()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:sep.grpc.QueryValueForVariableRequest.variable_id)
}
inline void QueryValueForVariableRequest::set_variable_id(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_variable_id()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:sep.grpc.QueryValueForVariableRequest.variable_id)
}
inline void QueryValueForVariableRequest::set_variable_id(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_variable_id()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:sep.grpc.QueryValueForVariableRequest.variable_id)
}
inline void QueryValueForVariableRequest::set_variable_id(int index, absl::string_view value) {
  _internal_mutable_variable_id()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:sep.grpc.QueryValueForVariableRequest.variable_id)
}
inline void QueryValueForVariableRequest::add_variable_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_variable_id()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:sep.grpc.QueryValueForVariableRequest.variable_id)
}
inline void QueryValueForVariableRequest::add_variable_id(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_variable_id()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:sep.grpc.QueryValueForVariableRequest.variable_id)
}
inline void QueryValueForVariableRequest::add_variable_id(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_variable_id()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:sep.grpc.QueryValueForVariableRequest.variable_id)
}
inline void QueryValueForVariableRequest::add_variable_id(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_variable_id()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:sep.grpc.QueryValueForVariableRequest.variable_id)
}
inline void QueryValueForVariableRequest::add_variable_id(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_variable_id()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:sep.grpc.QueryValueForVariableRequest.variable_id)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
QueryValueForVariableRequest::variable_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sep.grpc.QueryValueForVariableRequest.variable_id)
  return _internal_variable_id();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
QueryValueForVariableRequest::mutable_variable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sep.grpc.QueryValueForVariableRequest.variable_id)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_variable_id();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
QueryValueForVariableRequest::_internal_variable_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.variable_id_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
QueryValueForVariableRequest::_internal_mutable_variable_id() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.variable_id_;
}

// -------------------------------------------------------------------

// QueryValueForVariableReply

// uint32 execution_context_id = 1;
inline void QueryValueForVariableReply::clear_execution_context_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.execution_context_id_ = 0u;
}
inline ::uint32_t QueryValueForVariableReply::execution_context_id() const {
  // @@protoc_insertion_point(field_get:sep.grpc.QueryValueForVariableReply.execution_context_id)
  return _internal_execution_context_id();
}
inline void QueryValueForVariableReply::set_execution_context_id(::uint32_t value) {
  _internal_set_execution_context_id(value);
  // @@protoc_insertion_point(field_set:sep.grpc.QueryValueForVariableReply.execution_context_id)
}
inline ::uint32_t QueryValueForVariableReply::_internal_execution_context_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.execution_context_id_;
}
inline void QueryValueForVariableReply::_internal_set_execution_context_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.execution_context_id_ = value;
}

// repeated .sep.grpc.VariableValuePair variable_value = 2;
inline int QueryValueForVariableReply::_internal_variable_value_size() const {
  return _internal_variable_value().size();
}
inline int QueryValueForVariableReply::variable_value_size() const {
  return _internal_variable_value_size();
}
inline void QueryValueForVariableReply::clear_variable_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.variable_value_.Clear();
}
inline ::sep::grpc::VariableValuePair* QueryValueForVariableReply::mutable_variable_value(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sep.grpc.QueryValueForVariableReply.variable_value)
  return _internal_mutable_variable_value()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>* QueryValueForVariableReply::mutable_variable_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sep.grpc.QueryValueForVariableReply.variable_value)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_variable_value();
}
inline const ::sep::grpc::VariableValuePair& QueryValueForVariableReply::variable_value(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.QueryValueForVariableReply.variable_value)
  return _internal_variable_value().Get(index);
}
inline ::sep::grpc::VariableValuePair* QueryValueForVariableReply::add_variable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sep::grpc::VariableValuePair* _add = _internal_mutable_variable_value()->Add();
  // @@protoc_insertion_point(field_add:sep.grpc.QueryValueForVariableReply.variable_value)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>& QueryValueForVariableReply::variable_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sep.grpc.QueryValueForVariableReply.variable_value)
  return _internal_variable_value();
}
inline const ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>&
QueryValueForVariableReply::_internal_variable_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.variable_value_;
}
inline ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>*
QueryValueForVariableReply::_internal_mutable_variable_value() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.variable_value_;
}

// -------------------------------------------------------------------

// ECQuery

// uint32 execution_context_id = 1;
inline void ECQuery::clear_execution_context_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.execution_context_id_ = 0u;
}
inline ::uint32_t ECQuery::execution_context_id() const {
  // @@protoc_insertion_point(field_get:sep.grpc.ECQuery.execution_context_id)
  return _internal_execution_context_id();
}
inline void ECQuery::set_execution_context_id(::uint32_t value) {
  _internal_set_execution_context_id(value);
  // @@protoc_insertion_point(field_set:sep.grpc.ECQuery.execution_context_id)
}
inline ::uint32_t ECQuery::_internal_execution_context_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.execution_context_id_;
}
inline void ECQuery::_internal_set_execution_context_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.execution_context_id_ = value;
}

// -------------------------------------------------------------------

// ECReply

// repeated uint32 execution_context_id = 6;
inline int ECReply::_internal_execution_context_id_size() const {
  return _internal_execution_context_id().size();
}
inline int ECReply::execution_context_id_size() const {
  return _internal_execution_context_id_size();
}
inline void ECReply::clear_execution_context_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.execution_context_id_.Clear();
}
inline ::uint32_t ECReply::execution_context_id(int index) const {
  // @@protoc_insertion_point(field_get:sep.grpc.ECReply.execution_context_id)
  return _internal_execution_context_id().Get(index);
}
inline void ECReply::set_execution_context_id(int index, ::uint32_t value) {
  _internal_mutable_execution_context_id()->Set(index, value);
  // @@protoc_insertion_point(field_set:sep.grpc.ECReply.execution_context_id)
}
inline void ECReply::add_execution_context_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_execution_context_id()->Add(value);
  // @@protoc_insertion_point(field_add:sep.grpc.ECReply.execution_context_id)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& ECReply::execution_context_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sep.grpc.ECReply.execution_context_id)
  return _internal_execution_context_id();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* ECReply::mutable_execution_context_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sep.grpc.ECReply.execution_context_id)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_execution_context_id();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& ECReply::_internal_execution_context_id()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.execution_context_id_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* ECReply::_internal_mutable_execution_context_id() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.execution_context_id_;
}

// -------------------------------------------------------------------

// SingleRuntimeStatus

// string runtime_id = 1;
inline void SingleRuntimeStatus::clear_runtime_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.runtime_id_.ClearToEmpty();
}
inline const std::string& SingleRuntimeStatus::runtime_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.SingleRuntimeStatus.runtime_id)
  return _internal_runtime_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SingleRuntimeStatus::set_runtime_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.runtime_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:sep.grpc.SingleRuntimeStatus.runtime_id)
}
inline std::string* SingleRuntimeStatus::mutable_runtime_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_runtime_id();
  // @@protoc_insertion_point(field_mutable:sep.grpc.SingleRuntimeStatus.runtime_id)
  return _s;
}
inline const std::string& SingleRuntimeStatus::_internal_runtime_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.runtime_id_.Get();
}
inline void SingleRuntimeStatus::_internal_set_runtime_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.runtime_id_.Set(value, GetArena());
}
inline std::string* SingleRuntimeStatus::_internal_mutable_runtime_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.runtime_id_.Mutable( GetArena());
}
inline std::string* SingleRuntimeStatus::release_runtime_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.SingleRuntimeStatus.runtime_id)
  return _impl_.runtime_id_.Release();
}
inline void SingleRuntimeStatus::set_allocated_runtime_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.runtime_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.runtime_id_.IsDefault()) {
          _impl_.runtime_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.SingleRuntimeStatus.runtime_id)
}

// .sep.grpc.PROCESS_STATE runtime_state = 2;
inline void SingleRuntimeStatus::clear_runtime_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.runtime_state_ = 0;
}
inline ::sep::grpc::PROCESS_STATE SingleRuntimeStatus::runtime_state() const {
  // @@protoc_insertion_point(field_get:sep.grpc.SingleRuntimeStatus.runtime_state)
  return _internal_runtime_state();
}
inline void SingleRuntimeStatus::set_runtime_state(::sep::grpc::PROCESS_STATE value) {
  _internal_set_runtime_state(value);
  // @@protoc_insertion_point(field_set:sep.grpc.SingleRuntimeStatus.runtime_state)
}
inline ::sep::grpc::PROCESS_STATE SingleRuntimeStatus::_internal_runtime_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::sep::grpc::PROCESS_STATE>(_impl_.runtime_state_);
}
inline void SingleRuntimeStatus::_internal_set_runtime_state(::sep::grpc::PROCESS_STATE value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.runtime_state_ = value;
}

// -------------------------------------------------------------------

// RuntimesStatusReply

// repeated .sep.grpc.SingleRuntimeStatus runtime_status = 1;
inline int RuntimesStatusReply::_internal_runtime_status_size() const {
  return _internal_runtime_status().size();
}
inline int RuntimesStatusReply::runtime_status_size() const {
  return _internal_runtime_status_size();
}
inline void RuntimesStatusReply::clear_runtime_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.runtime_status_.Clear();
}
inline ::sep::grpc::SingleRuntimeStatus* RuntimesStatusReply::mutable_runtime_status(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sep.grpc.RuntimesStatusReply.runtime_status)
  return _internal_mutable_runtime_status()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sep::grpc::SingleRuntimeStatus>* RuntimesStatusReply::mutable_runtime_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sep.grpc.RuntimesStatusReply.runtime_status)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_runtime_status();
}
inline const ::sep::grpc::SingleRuntimeStatus& RuntimesStatusReply::runtime_status(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.RuntimesStatusReply.runtime_status)
  return _internal_runtime_status().Get(index);
}
inline ::sep::grpc::SingleRuntimeStatus* RuntimesStatusReply::add_runtime_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sep::grpc::SingleRuntimeStatus* _add = _internal_mutable_runtime_status()->Add();
  // @@protoc_insertion_point(field_add:sep.grpc.RuntimesStatusReply.runtime_status)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sep::grpc::SingleRuntimeStatus>& RuntimesStatusReply::runtime_status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sep.grpc.RuntimesStatusReply.runtime_status)
  return _internal_runtime_status();
}
inline const ::google::protobuf::RepeatedPtrField<::sep::grpc::SingleRuntimeStatus>&
RuntimesStatusReply::_internal_runtime_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.runtime_status_;
}
inline ::google::protobuf::RepeatedPtrField<::sep::grpc::SingleRuntimeStatus>*
RuntimesStatusReply::_internal_mutable_runtime_status() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.runtime_status_;
}

// -------------------------------------------------------------------

// RuntimeStatusTree

// .sep.grpc.SingleRuntimeStatus runtime_status = 1;
inline bool RuntimeStatusTree::has_runtime_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.runtime_status_ != nullptr);
  return value;
}
inline void RuntimeStatusTree::clear_runtime_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.runtime_status_ != nullptr) _impl_.runtime_status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::sep::grpc::SingleRuntimeStatus& RuntimeStatusTree::_internal_runtime_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sep::grpc::SingleRuntimeStatus* p = _impl_.runtime_status_;
  return p != nullptr ? *p : reinterpret_cast<const ::sep::grpc::SingleRuntimeStatus&>(::sep::grpc::_SingleRuntimeStatus_default_instance_);
}
inline const ::sep::grpc::SingleRuntimeStatus& RuntimeStatusTree::runtime_status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.RuntimeStatusTree.runtime_status)
  return _internal_runtime_status();
}
inline void RuntimeStatusTree::unsafe_arena_set_allocated_runtime_status(::sep::grpc::SingleRuntimeStatus* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.runtime_status_);
  }
  _impl_.runtime_status_ = reinterpret_cast<::sep::grpc::SingleRuntimeStatus*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sep.grpc.RuntimeStatusTree.runtime_status)
}
inline ::sep::grpc::SingleRuntimeStatus* RuntimeStatusTree::release_runtime_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sep::grpc::SingleRuntimeStatus* released = _impl_.runtime_status_;
  _impl_.runtime_status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sep::grpc::SingleRuntimeStatus* RuntimeStatusTree::unsafe_arena_release_runtime_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.RuntimeStatusTree.runtime_status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sep::grpc::SingleRuntimeStatus* temp = _impl_.runtime_status_;
  _impl_.runtime_status_ = nullptr;
  return temp;
}
inline ::sep::grpc::SingleRuntimeStatus* RuntimeStatusTree::_internal_mutable_runtime_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.runtime_status_ == nullptr) {
    auto* p = CreateMaybeMessage<::sep::grpc::SingleRuntimeStatus>(GetArena());
    _impl_.runtime_status_ = reinterpret_cast<::sep::grpc::SingleRuntimeStatus*>(p);
  }
  return _impl_.runtime_status_;
}
inline ::sep::grpc::SingleRuntimeStatus* RuntimeStatusTree::mutable_runtime_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sep::grpc::SingleRuntimeStatus* _msg = _internal_mutable_runtime_status();
  // @@protoc_insertion_point(field_mutable:sep.grpc.RuntimeStatusTree.runtime_status)
  return _msg;
}
inline void RuntimeStatusTree::set_allocated_runtime_status(::sep::grpc::SingleRuntimeStatus* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sep::grpc::SingleRuntimeStatus*>(_impl_.runtime_status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sep::grpc::SingleRuntimeStatus*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.runtime_status_ = reinterpret_cast<::sep::grpc::SingleRuntimeStatus*>(value);
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.RuntimeStatusTree.runtime_status)
}

// repeated .sep.grpc.RuntimeStatusTree children_status = 2;
inline int RuntimeStatusTree::_internal_children_status_size() const {
  return _internal_children_status().size();
}
inline int RuntimeStatusTree::children_status_size() const {
  return _internal_children_status_size();
}
inline void RuntimeStatusTree::clear_children_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.children_status_.Clear();
}
inline ::sep::grpc::RuntimeStatusTree* RuntimeStatusTree::mutable_children_status(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sep.grpc.RuntimeStatusTree.children_status)
  return _internal_mutable_children_status()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sep::grpc::RuntimeStatusTree>* RuntimeStatusTree::mutable_children_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sep.grpc.RuntimeStatusTree.children_status)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_children_status();
}
inline const ::sep::grpc::RuntimeStatusTree& RuntimeStatusTree::children_status(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.RuntimeStatusTree.children_status)
  return _internal_children_status().Get(index);
}
inline ::sep::grpc::RuntimeStatusTree* RuntimeStatusTree::add_children_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sep::grpc::RuntimeStatusTree* _add = _internal_mutable_children_status()->Add();
  // @@protoc_insertion_point(field_add:sep.grpc.RuntimeStatusTree.children_status)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sep::grpc::RuntimeStatusTree>& RuntimeStatusTree::children_status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sep.grpc.RuntimeStatusTree.children_status)
  return _internal_children_status();
}
inline const ::google::protobuf::RepeatedPtrField<::sep::grpc::RuntimeStatusTree>&
RuntimeStatusTree::_internal_children_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.children_status_;
}
inline ::google::protobuf::RepeatedPtrField<::sep::grpc::RuntimeStatusTree>*
RuntimeStatusTree::_internal_mutable_children_status() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.children_status_;
}

// -------------------------------------------------------------------

// GRPCExecutionContext

// uint32 execution_context_id = 1;
inline void GRPCExecutionContext::clear_execution_context_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.execution_context_id_ = 0u;
}
inline ::uint32_t GRPCExecutionContext::execution_context_id() const {
  // @@protoc_insertion_point(field_get:sep.grpc.GRPCExecutionContext.execution_context_id)
  return _internal_execution_context_id();
}
inline void GRPCExecutionContext::set_execution_context_id(::uint32_t value) {
  _internal_set_execution_context_id(value);
  // @@protoc_insertion_point(field_set:sep.grpc.GRPCExecutionContext.execution_context_id)
}
inline ::uint32_t GRPCExecutionContext::_internal_execution_context_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.execution_context_id_;
}
inline void GRPCExecutionContext::_internal_set_execution_context_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.execution_context_id_ = value;
}

// .sep.grpc.RuntimeStatusTree runtime_status = 2;
inline bool GRPCExecutionContext::has_runtime_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.runtime_status_ != nullptr);
  return value;
}
inline void GRPCExecutionContext::clear_runtime_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.runtime_status_ != nullptr) _impl_.runtime_status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::sep::grpc::RuntimeStatusTree& GRPCExecutionContext::_internal_runtime_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sep::grpc::RuntimeStatusTree* p = _impl_.runtime_status_;
  return p != nullptr ? *p : reinterpret_cast<const ::sep::grpc::RuntimeStatusTree&>(::sep::grpc::_RuntimeStatusTree_default_instance_);
}
inline const ::sep::grpc::RuntimeStatusTree& GRPCExecutionContext::runtime_status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.GRPCExecutionContext.runtime_status)
  return _internal_runtime_status();
}
inline void GRPCExecutionContext::unsafe_arena_set_allocated_runtime_status(::sep::grpc::RuntimeStatusTree* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.runtime_status_);
  }
  _impl_.runtime_status_ = reinterpret_cast<::sep::grpc::RuntimeStatusTree*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sep.grpc.GRPCExecutionContext.runtime_status)
}
inline ::sep::grpc::RuntimeStatusTree* GRPCExecutionContext::release_runtime_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sep::grpc::RuntimeStatusTree* released = _impl_.runtime_status_;
  _impl_.runtime_status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sep::grpc::RuntimeStatusTree* GRPCExecutionContext::unsafe_arena_release_runtime_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.GRPCExecutionContext.runtime_status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sep::grpc::RuntimeStatusTree* temp = _impl_.runtime_status_;
  _impl_.runtime_status_ = nullptr;
  return temp;
}
inline ::sep::grpc::RuntimeStatusTree* GRPCExecutionContext::_internal_mutable_runtime_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.runtime_status_ == nullptr) {
    auto* p = CreateMaybeMessage<::sep::grpc::RuntimeStatusTree>(GetArena());
    _impl_.runtime_status_ = reinterpret_cast<::sep::grpc::RuntimeStatusTree*>(p);
  }
  return _impl_.runtime_status_;
}
inline ::sep::grpc::RuntimeStatusTree* GRPCExecutionContext::mutable_runtime_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sep::grpc::RuntimeStatusTree* _msg = _internal_mutable_runtime_status();
  // @@protoc_insertion_point(field_mutable:sep.grpc.GRPCExecutionContext.runtime_status)
  return _msg;
}
inline void GRPCExecutionContext::set_allocated_runtime_status(::sep::grpc::RuntimeStatusTree* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sep::grpc::RuntimeStatusTree*>(_impl_.runtime_status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sep::grpc::RuntimeStatusTree*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.runtime_status_ = reinterpret_cast<::sep::grpc::RuntimeStatusTree*>(value);
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.GRPCExecutionContext.runtime_status)
}

// repeated .sep.grpc.VariableValuePair variable_value = 3;
inline int GRPCExecutionContext::_internal_variable_value_size() const {
  return _internal_variable_value().size();
}
inline int GRPCExecutionContext::variable_value_size() const {
  return _internal_variable_value_size();
}
inline void GRPCExecutionContext::clear_variable_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.variable_value_.Clear();
}
inline ::sep::grpc::VariableValuePair* GRPCExecutionContext::mutable_variable_value(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sep.grpc.GRPCExecutionContext.variable_value)
  return _internal_mutable_variable_value()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>* GRPCExecutionContext::mutable_variable_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sep.grpc.GRPCExecutionContext.variable_value)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_variable_value();
}
inline const ::sep::grpc::VariableValuePair& GRPCExecutionContext::variable_value(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.GRPCExecutionContext.variable_value)
  return _internal_variable_value().Get(index);
}
inline ::sep::grpc::VariableValuePair* GRPCExecutionContext::add_variable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sep::grpc::VariableValuePair* _add = _internal_mutable_variable_value()->Add();
  // @@protoc_insertion_point(field_add:sep.grpc.GRPCExecutionContext.variable_value)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>& GRPCExecutionContext::variable_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sep.grpc.GRPCExecutionContext.variable_value)
  return _internal_variable_value();
}
inline const ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>&
GRPCExecutionContext::_internal_variable_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.variable_value_;
}
inline ::google::protobuf::RepeatedPtrField<::sep::grpc::VariableValuePair>*
GRPCExecutionContext::_internal_mutable_variable_value() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.variable_value_;
}

// .sep.grpc.Expression trace_io = 4;
inline bool GRPCExecutionContext::has_trace_io() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.trace_io_ != nullptr);
  return value;
}
inline void GRPCExecutionContext::clear_trace_io() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.trace_io_ != nullptr) _impl_.trace_io_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::sep::grpc::Expression& GRPCExecutionContext::_internal_trace_io() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sep::grpc::Expression* p = _impl_.trace_io_;
  return p != nullptr ? *p : reinterpret_cast<const ::sep::grpc::Expression&>(::sep::grpc::_Expression_default_instance_);
}
inline const ::sep::grpc::Expression& GRPCExecutionContext::trace_io() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.GRPCExecutionContext.trace_io)
  return _internal_trace_io();
}
inline void GRPCExecutionContext::unsafe_arena_set_allocated_trace_io(::sep::grpc::Expression* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.trace_io_);
  }
  _impl_.trace_io_ = reinterpret_cast<::sep::grpc::Expression*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sep.grpc.GRPCExecutionContext.trace_io)
}
inline ::sep::grpc::Expression* GRPCExecutionContext::release_trace_io() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::sep::grpc::Expression* released = _impl_.trace_io_;
  _impl_.trace_io_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sep::grpc::Expression* GRPCExecutionContext::unsafe_arena_release_trace_io() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.GRPCExecutionContext.trace_io)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::sep::grpc::Expression* temp = _impl_.trace_io_;
  _impl_.trace_io_ = nullptr;
  return temp;
}
inline ::sep::grpc::Expression* GRPCExecutionContext::_internal_mutable_trace_io() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.trace_io_ == nullptr) {
    auto* p = CreateMaybeMessage<::sep::grpc::Expression>(GetArena());
    _impl_.trace_io_ = reinterpret_cast<::sep::grpc::Expression*>(p);
  }
  return _impl_.trace_io_;
}
inline ::sep::grpc::Expression* GRPCExecutionContext::mutable_trace_io() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sep::grpc::Expression* _msg = _internal_mutable_trace_io();
  // @@protoc_insertion_point(field_mutable:sep.grpc.GRPCExecutionContext.trace_io)
  return _msg;
}
inline void GRPCExecutionContext::set_allocated_trace_io(::sep::grpc::Expression* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sep::grpc::Expression*>(_impl_.trace_io_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sep::grpc::Expression*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.trace_io_ = reinterpret_cast<::sep::grpc::Expression*>(value);
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.GRPCExecutionContext.trace_io)
}

// .sep.grpc.Expression trace_executable = 5;
inline bool GRPCExecutionContext::has_trace_executable() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.trace_executable_ != nullptr);
  return value;
}
inline void GRPCExecutionContext::clear_trace_executable() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.trace_executable_ != nullptr) _impl_.trace_executable_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::sep::grpc::Expression& GRPCExecutionContext::_internal_trace_executable() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::sep::grpc::Expression* p = _impl_.trace_executable_;
  return p != nullptr ? *p : reinterpret_cast<const ::sep::grpc::Expression&>(::sep::grpc::_Expression_default_instance_);
}
inline const ::sep::grpc::Expression& GRPCExecutionContext::trace_executable() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.GRPCExecutionContext.trace_executable)
  return _internal_trace_executable();
}
inline void GRPCExecutionContext::unsafe_arena_set_allocated_trace_executable(::sep::grpc::Expression* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.trace_executable_);
  }
  _impl_.trace_executable_ = reinterpret_cast<::sep::grpc::Expression*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sep.grpc.GRPCExecutionContext.trace_executable)
}
inline ::sep::grpc::Expression* GRPCExecutionContext::release_trace_executable() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::sep::grpc::Expression* released = _impl_.trace_executable_;
  _impl_.trace_executable_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sep::grpc::Expression* GRPCExecutionContext::unsafe_arena_release_trace_executable() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.GRPCExecutionContext.trace_executable)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::sep::grpc::Expression* temp = _impl_.trace_executable_;
  _impl_.trace_executable_ = nullptr;
  return temp;
}
inline ::sep::grpc::Expression* GRPCExecutionContext::_internal_mutable_trace_executable() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.trace_executable_ == nullptr) {
    auto* p = CreateMaybeMessage<::sep::grpc::Expression>(GetArena());
    _impl_.trace_executable_ = reinterpret_cast<::sep::grpc::Expression*>(p);
  }
  return _impl_.trace_executable_;
}
inline ::sep::grpc::Expression* GRPCExecutionContext::mutable_trace_executable() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sep::grpc::Expression* _msg = _internal_mutable_trace_executable();
  // @@protoc_insertion_point(field_mutable:sep.grpc.GRPCExecutionContext.trace_executable)
  return _msg;
}
inline void GRPCExecutionContext::set_allocated_trace_executable(::sep::grpc::Expression* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::sep::grpc::Expression*>(_impl_.trace_executable_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::sep::grpc::Expression*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.trace_executable_ = reinterpret_cast<::sep::grpc::Expression*>(value);
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.GRPCExecutionContext.trace_executable)
}

// repeated uint32 children = 6;
inline int GRPCExecutionContext::_internal_children_size() const {
  return _internal_children().size();
}
inline int GRPCExecutionContext::children_size() const {
  return _internal_children_size();
}
inline void GRPCExecutionContext::clear_children() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.children_.Clear();
}
inline ::uint32_t GRPCExecutionContext::children(int index) const {
  // @@protoc_insertion_point(field_get:sep.grpc.GRPCExecutionContext.children)
  return _internal_children().Get(index);
}
inline void GRPCExecutionContext::set_children(int index, ::uint32_t value) {
  _internal_mutable_children()->Set(index, value);
  // @@protoc_insertion_point(field_set:sep.grpc.GRPCExecutionContext.children)
}
inline void GRPCExecutionContext::add_children(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_children()->Add(value);
  // @@protoc_insertion_point(field_add:sep.grpc.GRPCExecutionContext.children)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& GRPCExecutionContext::children() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sep.grpc.GRPCExecutionContext.children)
  return _internal_children();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* GRPCExecutionContext::mutable_children()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sep.grpc.GRPCExecutionContext.children)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_children();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& GRPCExecutionContext::_internal_children()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.children_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* GRPCExecutionContext::_internal_mutable_children() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.children_;
}

// bool is_eval = 7;
inline void GRPCExecutionContext::clear_is_eval() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.is_eval_ = false;
}
inline bool GRPCExecutionContext::is_eval() const {
  // @@protoc_insertion_point(field_get:sep.grpc.GRPCExecutionContext.is_eval)
  return _internal_is_eval();
}
inline void GRPCExecutionContext::set_is_eval(bool value) {
  _internal_set_is_eval(value);
  // @@protoc_insertion_point(field_set:sep.grpc.GRPCExecutionContext.is_eval)
}
inline bool GRPCExecutionContext::_internal_is_eval() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.is_eval_;
}
inline void GRPCExecutionContext::_internal_set_is_eval(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.is_eval_ = value;
}

// -------------------------------------------------------------------

// PostProcessingRequest

// bool enable_execution_graph = 1;
inline void PostProcessingRequest::clear_enable_execution_graph() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.enable_execution_graph_ = false;
}
inline bool PostProcessingRequest::enable_execution_graph() const {
  // @@protoc_insertion_point(field_get:sep.grpc.PostProcessingRequest.enable_execution_graph)
  return _internal_enable_execution_graph();
}
inline void PostProcessingRequest::set_enable_execution_graph(bool value) {
  _internal_set_enable_execution_graph(value);
  // @@protoc_insertion_point(field_set:sep.grpc.PostProcessingRequest.enable_execution_graph)
}
inline bool PostProcessingRequest::_internal_enable_execution_graph() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.enable_execution_graph_;
}
inline void PostProcessingRequest::_internal_set_enable_execution_graph(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.enable_execution_graph_ = value;
}

// -------------------------------------------------------------------

// PostProcessingReply

// string execution_graph = 1;
inline void PostProcessingReply::clear_execution_graph() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.execution_graph_.ClearToEmpty();
}
inline const std::string& PostProcessingReply::execution_graph() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sep.grpc.PostProcessingReply.execution_graph)
  return _internal_execution_graph();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostProcessingReply::set_execution_graph(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.execution_graph_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:sep.grpc.PostProcessingReply.execution_graph)
}
inline std::string* PostProcessingReply::mutable_execution_graph() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_execution_graph();
  // @@protoc_insertion_point(field_mutable:sep.grpc.PostProcessingReply.execution_graph)
  return _s;
}
inline const std::string& PostProcessingReply::_internal_execution_graph() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.execution_graph_.Get();
}
inline void PostProcessingReply::_internal_set_execution_graph(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.execution_graph_.Set(value, GetArena());
}
inline std::string* PostProcessingReply::_internal_mutable_execution_graph() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.execution_graph_.Mutable( GetArena());
}
inline std::string* PostProcessingReply::release_execution_graph() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sep.grpc.PostProcessingReply.execution_graph)
  return _impl_.execution_graph_.Release();
}
inline void PostProcessingReply::set_allocated_execution_graph(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.execution_graph_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.execution_graph_.IsDefault()) {
          _impl_.execution_graph_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sep.grpc.PostProcessingReply.execution_graph)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpc
}  // namespace sep


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::sep::grpc::SymbolKind> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::sep::grpc::SymbolKind>() {
  return ::sep::grpc::SymbolKind_descriptor();
}
template <>
struct is_proto_enum<::sep::grpc::OperatorKind> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::sep::grpc::OperatorKind>() {
  return ::sep::grpc::OperatorKind_descriptor();
}
template <>
struct is_proto_enum<::sep::grpc::DataType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::sep::grpc::DataType>() {
  return ::sep::grpc::DataType_descriptor();
}
template <>
struct is_proto_enum<::sep::grpc::PROCESS_STATE> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::sep::grpc::PROCESS_STATE>() {
  return ::sep::grpc::PROCESS_STATE_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_SymbexServices_2eproto_2epb_2eh
